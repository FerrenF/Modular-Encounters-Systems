{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"index.md hello world","title":"Home"},{"location":"#indexmd","text":"hello world","title":"index.md"},{"location":"Action/","text":"Action.md Action Profiles in Rival AI are used in conjunction with Trigger Profiles . These profile are what execute specified actions when the conditions in a Trigger Profile are satisfied. It is important that you use a unique SubtypeId for each Action Profile you create, otherwise they may not work correctly. Here is an example of how an Action Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleActionProfile</SubtypeId> </Id> <Description> [RivalAI Action] [UseChatBroadcast:true] [ChatData:RAI-ExampleChatProfile] [CreateKnownPlayerArea:true] [KnownPlayerAreaRadius:15000] [KnownPlayerAreaTimer:30] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Action Profiles. They are divided into several categories based on what they affect. Abilities Behavior Blocks Communication Damage Effects General Grid Inventory PlayerTags Reputation Spawning Targeting Trigger Variables Zone Abilities This section contains actions that enable/disable special abilities for the behavior. Tag: UseJetpackInhibitorEffect Tag Format: [UseJetpackInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Jetpack Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UseDrillInhibitorEffect Tag Format: [UseDrillInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Hand Drill Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UseNanobotInhibitorEffect Tag Format: [UseNanobotInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Nanobot Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UseJumpInhibitorEffect Tag Format: [UseJumpInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Jump Drive Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UsePlayerInhibitorEffect Tag Format: [UsePlayerInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Player Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: JumpToTarget Tag Format: [JumpToTarget:Value] Description: This tag allows you to activate the NPC Jump Drive (if present / ready) and jump to the current target. Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpToJumpedEntity Tag Format: [JumpToJumpedEntity:Value] Description: This tag allows you to activate the NPC Jump Drive (if present / ready) and jump to a grid that recently jumped away. This needs to be used with a JumpCompleted trigger Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpedEntityMustBeTarget Tag Format: [JumpedEntityMustBeTarget:Value] Description: This tag specifies whether or not an entity that jumps away (detected by JumpCompleted trigger) must also be the current target of the NPC in order to Jump / Follow it. Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpToWaypoint Tag Format: [JumpToWaypoint:Value] Description: Specifies if a ship should jump to a provided waypoint profile location. Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpWaypoint Tag Format: [JumpWaypoint:Value] Description: Specifies the waypoint profile id that the ship will use to calculate jump location while using the JumpToWaypoint tag. Allowed Value(s): Any String Value Multiple Tags Allowed: No Behavior This section contains actions that relate to changes that can be made to the behavior and auto-pilot. Tag: ChangeBehaviorSubclass Tag Format: [ChangeBehaviorSubclass:Value] Description: This tag specifies if the Sub-Class of the behavior should be switched to another (eg: change from Fighter to Strike ). Allowed Values: true false Multiple Tag Allowed: No Tag: NewBehaviorSubclass Tag Format: [NewBehaviorSubclass:Value] Description: This tag specifies the new Behavior Sub-Class that is used if ChangeBehaviorSubclass is set to true . Allowed Values: Any Behavior Type Click Here For Eligible Types Multiple Tag Allowed: No Tag: ChangeAutopilotSpeed Tag Format: [ChangeAutopilotSpeed:Value] Description: This tag specifies if the AutoPilot speed of the current NPC should be changed to a new value. Allowed Values: true false Multiple Tag Allowed: No Tag: NewAutopilotSpeed Tag Format: [NewAutopilotSpeed:Value] Description: Specifies the new AutoPilot speed if ChangeAutopilotSpeed was set to true . Allowed Values: Any number equal/higher than 0 Multiple Tag Allowed: No Tag: ChangeInertiaDampeners Tag Format: [ChangeInertiaDampeners:Value] Description: This tag specifies if the AutoPilot should enable or disable the Inertia Dampeners (may only work with some behaviors / modes). Allowed Values: true false Multiple Tag Allowed: No Tag: InertiaDampenersEnable Tag Format: [InertiaDampenersEnable:Value] Description: Specifies the new Inertia Dampeners mode if ChangeInertiaDampeners was set to true . Allowed Values: true false Multiple Tag Allowed: No Tag: BarrelRoll Tag Format: [BarrelRoll:Value] Description: This tag specifies if the NPC should perform a roll for a short time. Barrel Roll controls can be found in the Autopilot Profile tags section. Allowed Values: true false Multiple Tag Allowed: No Tag: Ramming Tag Format: [Ramming:Value] Description: This tag specifies if the NPC should attempt to ram a target for a short time. Ramming controls can be found in the Autopilot Profile tags section. Allowed Values: true false Multiple Tag Allowed: No Tag: Retreat Tag Format: [Retreat:Value] Description: This tag specifies if the Retreat function should be activated in the current behavior. Allowed Values: true false Multiple Tag Allowed: No Tag: RecalculateDespawnCoords Tag Format: [RecalculateDespawnCoords:Value] Description: This tag specifies if the NPC should recalculate its Despawn Coordinates if it is using coordinates retrieved from MES or generated within RivalAI. The newly generated coordinates will be created from data in the Active Autopilot Profile of the behavior. Allowed Values: true false Multiple Tag Allowed: No Tag: ForceDespawn Tag Format: [ForceDespawn:Value] Description: This tag specifies if the NPC grid should immediately be despawned. Allowed Values: true false Multiple Tag Allowed: No Tag: TerminateBehavior Tag Format: [TerminateBehavior:Value] Description: This tag specifies if the current NPC Behavior should be terminated (meaning no more AI processing from that behavior). Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeRotationDirection Tag Format: [ChangeRotationDirection:Value] Description: This tag specifies if the ship should use a different direction when rotating towards a target. Specify direction using the RotationDirection tag Allowed Values: true false Multiple Tag Allowed: No Tag: RotationDirection Tag Format: [RotationDirection:Value] Description: This tag specifies the direction a ship should use when rotating towards a target if ChangeRotationDirection is true . Allowed Values: Forward Backward Up Down Left Right Multiple Tag Allowed: No Tag: ChangeAutopilotProfile Tag Format: [ChangeAutopilotProfile:Value] Description: This tag specifies if the Autopilot Profile should be switched to another mode, using another attached Autopilot Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: AutopilotProfile Tag Format: [AutopilotProfile:Value] Description: This tag specifies the Autopilot Profile Mode that should be switched to. Allowed Values: Primary Secondary Tertiary Multiple Tag Allowed: No Tag: StopAllRotation Tag Format: [StopAllRotation:Value] Description: This tag will set all Gyroscope Overrides to 0 on the NPC. This is useful when paired with a Compromised trigger to stop any gyros that may be stuck rotating when a RivalAI Remote Control is disabled. Allowed Values: true false Multiple Tag Allowed: No Tag: StopAllThrust Tag Format: [StopAllThrust:Value] Description: This tag will set all Thruster Overrides to 0 on the NPC. This is useful when paired with a Compromised trigger to stop any thrusters that may be stuck in override when a RivalAI Remote Control is disabled. Allowed Values: true false Multiple Tag Allowed: No Tag: RandomGyroRotation Tag Format: [RandomGyroRotation:Value] Description: This tag will set a random Gyroscopic rotation and apply it to the NPC grid. This is useful when paired with a Compromised trigger. Allowed Values: true false Multiple Tag Allowed: No Tag: RandomThrustDirection Tag Format: [RandomThrustDirection:Value] Description: This tag will set a random Thruster Override Strength and Direction, and apply it to the NPC grid. This is useful when paired with a Compromised trigger. Allowed Values: true false Multiple Tag Allowed: No Tag: UseCurrentPositionAsPatrolReference Tag Format: [UseCurrentPositionAsPatrolReference:Value] Description: This tag sets the current position of the NPC as its Patrol Reference so it will calculate offsets starting from that position instead of using its initial spawn coordinates. Allowed Values: true false Multiple Tag Allowed: No Tag: ClearCustomPatrolReference Tag Format: [ClearCustomPatrolReference:Value] Description: This tag removes any saved coordinates that may have been set using UseCurrentPositionAsPatrolReference so behaviors using patrol will revert to using their initial spawn coordinates to calculate patrol offsets. Allowed Values: true false Multiple Tag Allowed: No Tag: ClearAllWaypoints Tag Format: [ClearAllWaypoints:Value] Description: Specifies if all current waypoints should be erased when using the CargoShip behavior subclass. This will result in the behavior travelling to its generated despawn coordinates. Allowed Value(s): true false Multiple Tags Allowed: No Tag: AddWaypoints Tag Format: [AddWaypoints:Value] Description: Specifies if one or more Waypoints should be created and added to a behavior if they are using the CargoShip subclass. Allowed Value(s): true false Multiple Tags Allowed: No Tag: WaypointsToAdd Tag Format: [WaypointsToAdd:Value] Description: Specifies the name(s) of the waypoint profiles you want to add to a CargoShip subclass behavior if using the AddWaypoints tag Allowed Value(s): Waypoint Profile SubtypeId Multiple Tags Allowed: Yes Tag: CancelWaitingAtWaypoint Tag Format: [CancelWaitingAtWaypoint:Value] Description: Specifies if a CargoShip subclass behavior should stop waiting at a waypoint it reached and begin travelling to the next eligible waypoint. Allowed Value(s): true false Multiple Tags Allowed: No Tag: SwitchToNextWaypoint Tag Format: [SwitchToNextWaypoint:Value] Description: Specifies if a CargoShip subclass behavior should have its current waypoint that is being travelled to cancelled so it can move onto the next eligible waypoint. Allowed Value(s): true false Multiple Tags Allowed: No Blocks This section contains actions that affect the state of blocks on the NPC grid. Tag: EnableBlocks Tag Format: [EnableBlocks:Value] Description: This tag specifies if certain blocks should be turned On or Off. Allowed Values: true false Multiple Tag Allowed: No Tag: EnableBlockNames Tag Format: [EnableBlockNames:Value] Description: This tag specifies the name(s) of blocks that you want to toggle on or off. Allowed Values: Any Block Name Multiple Tag Allowed: Yes Tag: EnableBlockStates Tag Format: [EnableBlockStates:Value] Description: This tag specifies the On/Off state of blocks that you want to toggle on or off. Allowed Values: Off On Toggle Multiple Tag Allowed: Yes Tag: ChangeAntennaRanges Tag Format: [ChangeAntennaRanges:Value] Description: This tag specifies if attached antennas should have their range changed. Allowed Values: true false Multiple Tag Allowed: No Tag: AntennaNamesForRangeChange Tag Format: [AntennaNamesForRangeChange:Value] Description: This tag specifies the name of the antenna(s) that should have their ranges changed. If this tag is not provided, then all antennas will be affected Allowed Values: Any Antenna Name Multiple Tag Allowed: Yes Tag: AntennaRangeChangeType Tag Format: [AntennaRangeChangeType:Value] Description: This tag specifies how the antenna range should be changed by using this value with the value of AntennaRangeChangeAmount . Allowed Values: Set Increase Decrease Multiple Tag Allowed: No Tag: AntennaRangeChangeAmount Tag Format: [AntennaRangeChangeAmount:Value] Description: This tag specifies how much the antenna range should be changed by. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ChangeAntennaOwnership Tag Format: [ChangeAntennaOwnership:Value] Description: This tag specifies if Antenna Blocks on the current NPC grid should have their ownership changed. Allowed Values: true false Multiple Tag Allowed: No Tag: AntennaFactionOwner Tag Format: [AntennaFactionOwner:Value] Description: Specifies the faction (by faction tag) that antenna blocks get changed to if ChangeAntennaOwnership is true . Allowed Values: Any Faction Tag Multiple Tag Allowed: No Tag: ChangeBlockNames Tag Format: [ChangeBlockNames:Value] Description: This tag specifies if blocks on the NPC grid should have their names changed. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeBlockNamesFrom Tag Format: [ChangeBlockNamesFrom:Value] Description: This tag specifies a name of a Block that will have its name changed. Ideally you should place this tag before the ChangeBlockNamesTo tag, keeping them in pairs in your Action Profile. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ChangeBlockNamesTo Tag Format: [ChangeBlockNamesTo:Value] Description: This tag specifies the name that a Block specified in ChangeBlockNamesFrom will be changed to. Ideally you should place this tag after the ChangeBlockNamesFrom tag, keeping them in pairs in your Action Profile. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: TriggerTimerBlocks Tag Format: [TriggerTimerBlocks:Value] Description: This tag specifies if select Timer Blocks on the current NPC grid should be Triggered. Allowed Values: true false Multiple Tag Allowed: No Tag: TimerBlockNames Tag Format: [TimerBlockNames:Value] Description: This tag specifies a name of a Timer Block on the current NPC grid should be Triggered. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SelfDestruct Tag Format: [SelfDestruct:Value] Description: This tag specifies if all Warhead Blocks on the current NPC grid should be detonated. Allowed Values: true false Multiple Tag Allowed: No Tag: StaggerWarheadDetonation Tag Format: [StaggerWarheadDetonation:Value] Description: This tag specifies if warheads should be detonated in 1 second intervals instead of all at once. Allowed Values: true false Multiple Tag Allowed: No Tag: SelfDestructTimerPadding Tag Format: [SelfDestructTimerPadding:Value] Description: This tag specifies the minimum time that all warheads will start at if countdown is initiated. Allowed Values: Any number greater or equal to 0 Multiple Tag Allowed: No Tag: SelfDestructTimeBetweenBlasts Tag Format: [SelfDestructTimeBetweenBlasts:Value] Description: This tag specifies the time between detonations that is applied to warheads if StaggerWarheadDetonation is used. Allowed Values: Any number greater or equal to 0 Multiple Tag Allowed: No Tag: ChangeBlockOwnership Tag Format: [ChangeBlockOwnership:Value] Description: This tag specifies if some blocks should have their ownership changed. Block names and Faction Tags should be provided in the OwnershipBlockNames and OwnershipBlockFactions tags together. Allowed Values: true false Multiple Tag Allowed: No Tag: OwnershipBlockNames Tag Format: [OwnershipBlockNames:Value] Description: This tag specifies a name of a Block that gets it's ownership changed. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: OwnershipBlockFactions Tag Format: [OwnershipBlockFactions:Value] Description: This tag specifies a name of a faction that a block ownership should be changed to. Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: RazeBlocksWithNames Tag Format: [RazeBlocksWithNames:Value] Description: This tag specifies if some blocks should be destroyed on the NPC grid. Allowed Values: true false Multiple Tag Allowed: No Tag: RazeBlocksNames Tag Format: [RazeBlocksNames:Value] Description: This tag specifies names of blocks that are destroyed when the action is executed. Allowed Values: Any Block Name Multiple Tag Allowed: Yes Tag: RazeBlocksOfType Tag Format: [RazeBlocksOfType:Value] Description: This tag specifies if some block types should be destroyed on the NPC grid. Allowed Values: true false Multiple Tag Allowed: No Tag: RazeBlocksTypes Tag Format: [RazeBlocksTypes:Value] Description: This tag specifies types of blocks that are destroyed when the action is executed. Allowed Values: Any Block Type (eg MyObjectBuilder_CubeBlock/SomeBlockSubtypeId ) Multiple Tag Allowed: Yes Tag: ToggleBlocksOfType Tag Format: [ToggleBlocksOfType:Value] Description: This tag specifies if blocks of a matching type should be set to on, off, or toggled from existing state. Allowed Values: true false Multiple Tag Allowed: No Tag: BlockTypesToToggle Tag Format: [BlockTypesToToggle:Value] Description: This tag specifies the types of block that will be toggled. This tag needs to be paired with a BlockTypeToggles tag. Allowed Values: Any Block DefinitionID Eg: MyObjectBuilder_Parachute/LgParachute Multiple Tag Allowed: Yes Tag: BlockTypeToggles Tag Format: [BlockTypeToggles:Value] Description: This tag specifies the toggle action that will be applied to a block type. This tag needs to be paired with a BlockTypesToToggle tag. Allowed Values: Off On Toggle Multiple Tag Allowed: Yes Tag: BuildProjectedBlocks Tag Format: [BuildProjectedBlocks:Value] Description: This tag specifies if a number of blocks currently being projected from the NPC Grid should be built instantly. The projection must already be active at the time this Action is activated (enabling the projector and using this action in the same profile may not work since there is a minor delay when the projection is being created in game). Allowed Values: true false Multiple Tag Allowed: No Tag: MaxProjectedBlocksToBuild Tag Format: [MaxProjectedBlocksToBuild:Value] Description: Specifies the maximum number of blocks that are built if BuildProjectedBlocks is true . If this value is not defined, or the value is set to -1 , then all currently eligible blocks will be built on the projection. Allowed Values: Any Integer higher than -1 Multiple Tag Allowed: No Tag: SetWeaponsToMinRange Tag Format: [SetWeaponsToMinRange:Value] Description: This tag specifies if all auto-firing weapons (turrets, weapon core homing weapons, etc) should be limited to 800m. Allowed Values: true false Multiple Tag Allowed: No Tag: SetWeaponsToMaxRange Tag Format: [SetWeaponsToMaxRange:Value] Description: This tag specifies if all auto-firing weapons (turrets, weapon core homing weapons, etc) should be set to their maximum range. Allowed Values: true false Multiple Tag Allowed: No Tag: EnableHighestRangeAntennas Tag Format: [EnableHighestRangeAntennas:Value] Description: This tag specifies if all antennas on the current grid that have the highest range should be turned on. Allowed Values: true false Multiple Tag Allowed: No Tag: DisableHighestRangeAntennas Tag Format: [DisableHighestRangeAntennas:Value] Description: This tag specifies if all antennas on the current grid that have the highest range should be turned off. Allowed Values: true false Multiple Tag Allowed: No Tag: ApplyLcdChanges Tag Format: [ApplyLcdChanges:Value] Description: This tag allows you to specify if one or more blocks should have their LCD contents changed. Allowed Value(s): true false Multiple Tags Allowed: No Tag: LcdTextTemplateFile Tag Format: [LcdTextTemplateFile:Value] Description: This tag allows you to specify the name of the TextTemplate file that is used for populating LCD content if using the ApplyLcdChanges tag Allowed Value(s): Any String Value Multiple Tags Allowed: No Tag: LcdBlockNames Tag Format: [LcdBlockNames:Value] Description: This tag allows you to specify one or more block name that will have LCD contents changed if using the ApplyLcdChanges tag. Each instance of this tag should be paired with the LcdTemplateIndexes tag as well. Allowed Value(s): Any String Value Multiple Tags Allowed: Yes Tag: LcdTemplateIndexes Tag Format: [LcdTemplateIndexes:Value] Description: This tag allows you to specify one or more index that is used to select an Lcd Entry in the TextTemplate file if using the ApplyLcdChanges tag. Each instance of this tag should be paired with the LcdBlockNames tag as well. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: Yes Communication This section contains actions for NPC to NPC communication. Tag: UseChatBroadcast Tag Format: [UseChatBroadcast:Value] Description: This tag specifies if an attached Chat Profile should be activated. Allowed Values: true false Multiple Tag Allowed: No Tag: ChatData Tag Format: [ChatData:Value] Description: This tag specifies which Chat Profile should be activated if UseChatBroadcast is true . Allowed Values: Any Chat Profile SubtypeId Multiple Tag Allowed: Yes Tag: BroadcastCommandProfiles Tag Format: [BroadcastCommandProfiles:Value] Description: This tag specifies if the Behavior should broadcast one or more Command Profile to other nearby NPCs. Allowed Values: true false Multiple Tag Allowed: No Tag: CommandProfileIds Tag Format: [CommandProfileIds:Value] Description: This tag specifies the SubtypeId of a Command Profile that you want to use in your broadcast to other nearby NPCs. Allowed Values: Any Command Profile SubtypeId Multiple Tag Allowed: Yes Tag: AddWaypointFromCommand Tag Format: [AddWaypointFromCommand:Value] Description: This tag specifies if the Behavior should add a waypoint received by a command to its list of waypoints. This is mostly for use by the CargoShip behavior, but others may use it in the future. Allowed Values: true false Multiple Tag Allowed: No Tag: SwitchToReceivedTarget Tag Format: [SwitchToReceivedTarget:Value] Description: This tag specifies if the Behavior should switch to a new target provided by either the damage or broadcast system. Allowed Values: true false Multiple Tag Allowed: No Tag: InheritLastAttackerFromCommand Tag Format: [InheritLastAttackerFromCommand:Value] Description: This tag specifies if the Behavior should consider the received target from a command as an entity that attacked it as well. Required for some behavior specific actions. Allowed Values: true false Multiple Tag Allowed: No Tag: AssignEscortFromCommand Tag Format: [AssignEscortFromCommand:Value] Description: This tag allows you to assign any potential Escort Requests to an empty escort slot (if available) for this NPC. The Escort Requests are received by Command Profile related Triggers. Allowed Value(s): true false Multiple Tags Allowed: No Damage This section contains actions for damaging other entities. Tag: DamageToolAttacker Tag Format: [DamageToolAttacker:Value] Description: This tag specifies if a player or block attacking the current NPC with a Grinder/Drill should receive damage. This tag only works if called from a Trigger Profile that uses Damage as a Trigger Type. Allowed Values: true false Multiple Tag Allowed: No Tag: DamageToolAttackerAmount Tag Format: [DamageToolAttackerAmount:Value] Description: Specifies the amount of damage a target receives if DamageToolAttacker is true . Allowed Values: Any Number higher than 0 Multiple Tag Allowed: No Tag: DamageToolAttackerParticle Tag Format: [DamageToolAttackerParticle:Value] Description: Specifies a particle effect that will display over the attacker if DamageToolAttacker is true . Allowed Values: Any Particle Effect SubtypeId Multiple Tag Allowed: No Tag: DamageToolAttackerSound Tag Format: [DamageToolAttackerSound:Value] Description: Specifies a sound effect that will display over the attacker if DamageToolAttacker is true . Allowed Values: Any Audio SubtypeId Multiple Tag Allowed: No Tag: GenerateExplosion Tag Format: [GenerateExplosion:Value] Description: This tag specifies if an Explosion should be generated at the coordinates of the Remote Control. Allowed Values: true false Multiple Tag Allowed: No Tag: ExplosionOffsetFromRemote Tag Format: [ExplosionOffsetFromRemote:Value] Description: This tag specifies the Offset from the Remote Control Position that the explosion should be created at if GenerateExplosion is true . Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with values in meters. Multiple Tag Allowed: No Tag: ExplosionRange Tag Format: [ExplosionRange:Value] Description: Specifies the radius of the Explosion if GenerateExplosion is true . The particle effect used for the explosion changes depending on this value: 0-1: Tiny 2-14: Small 15-29: Medium 30+: Large Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ExplosionDamage Tag Format: [ExplosionDamage:Value] Description: Specifies the damage of the Explosion if GenerateExplosion is true . Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ExplosionIgnoresVoxels Tag Format: [ExplosionIgnoresVoxels:Value] Description: This tag specifies if an Explosion should skip damage to voxels if GenerateExplosion is true . Allowed Values: true false Multiple Tag Allowed: No Tag: CreateRandomLightning Tag Format: [CreateRandomLightning:Value] Description: This tag specifies if a bolt of lightning should be generated near the NPC. Only works on planets that have atmosphere. Allowed Values: true false Multiple Tag Allowed: No Tag: CreateLightningAtAttacker Tag Format: [CreateLightningAtAttacker:Value] Description: This tag specifies if a bolt of lightning should be generated at the position of the entity that caused damage to the NPC. Only works on planets that have atmosphere. Allowed Values: true false Multiple Tag Allowed: No Tag: CreateLightningAtTarget Tag Format: [CreateLightningAtTarget:Value] Description: This tag specifies if a bolt of lightning should be generated at the position of current target. Only works on planets that have atmosphere. Allowed Values: true false Multiple Tag Allowed: No Tag: LightningDamage Tag Format: [LightningDamage:Value] Description: Specifies the damage of lightning bolts created by an Action. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: LightningExplosionRadius Tag Format: [LightningExplosionRadius:Value] Description: Specifies the explosion radius of lightning bolts created by an Action. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: LightningColor Tag Format: [LightningColor:Value] Description: Specifies the color of lightning bolts created by an Action. Allowed Values: {X:0 Y:0 Z:0} X 0 - 100 (Red) Y 0 - 100 (Green) Z 0 - 100 (Blue) Multiple Tag Allowed: No Tag: LightningMinDistance Tag Format: [LightningMinDistance:Value] Description: Specifies the minimum distance from the NPC that lightning will be created at if CreateRandomLightning is true . Allowed Values: Any Number Greater Than 0 Must be lower than LightningMaxDistance Multiple Tag Allowed: No Tag: LightningMaxDistance Tag Format: [LightningMaxDistance:Value] Description: Specifies the maximum distance from the NPC that lightning will be created at if CreateRandomLightning is true . Allowed Values: Any Number Greater Than 0 Must be higher than LightningMinDistance Multiple Tag Allowed: No Effects This section contains actions for playing audio and visual effects. Tag: PlaySoundAtPosition Tag Format: [PlaySoundAtPosition:Value] Description: This tag specifies if a single sound effect should be played at the NPC current position. This does not require a sound block, or any additional grid configuration. Allowed Value(s): true false Multiple Tags Allowed: No Tag: SoundAtPosition Tag Format: [SoundAtPosition:Value] Description: This tag specifies the name of the sound effect you want to play if using PlaySoundAtPosition Allowed Value(s): Multiple Tags Allowed: No General This section contains actions that don't quite fit the other sections. Tag: Chance Tag Format: [Chance:Value] Description: Specifies the Chance (out of 100) that this action will be run. Allowed Values: Any Number 0 to 100 Multiple Tag Allowed: No Tag: SetGridCleanupExempt Tag Format: [SetGridCleanupExempt:Value] Description: This tag specifies if the NPC grid should be temporarily exempt from MES cleanup processes. Allowed Value(s): true false Multiple Tags Allowed: No Tag: GridCleanupExemptDuration Tag Format: [GridCleanupExemptDuration:Value] Description: This tag specifies the length of time (in seconds) that the NPC will be exempt from cleanup if used with the SetGridCleanupExempt tag Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No Grid This section contains actions that affect the entire grid. Tag: RecolorGrid Tag Format: [RecolorGrid:Value] Description: This tag specifies if selected blocks on the grid should be recolored and reskinned. Allowed Values: true false Multiple Tag Allowed: No Tag: RecolorSubGrids Tag Format: [RecolorSubGrids:Value] Description: This tag specifies if subgrids should also be considered when using the RecolorGrid tag. Allowed Values: true false Multiple Tag Allowed: No Tag: OldBlockColors Tag Format: [OldBlockColors:Value] Description: This tag specifies the old colors that are targeted for replacement when using the RecolorGrid tag. You should also include NewBlockColors and NewBlockSkins tags together when using this tag. Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with matching values from ColorMaskHSV Multiple Tag Allowed: Yes Tag: NewBlockColors Tag Format: [NewBlockColors:Value] Description: This tag specifies the new colors that are used for replacement when using the RecolorGrid tag. Provide {X:-10 Y:-10 Z:-10} to skip replacing color if you only intend to replace skin. Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with matching values from ColorMaskHSV Multiple Tag Allowed: Yes Tag: NewBlockSkins Tag Format: [NewBlockSkins:Value] Description: This tag specifies the new skins that are used for replacement when using the RecolorGrid tag. Provide a single blank space to skip replacing skin if you only intend to replace color. Allowed Values: Any Armor Skin SubtypeId Multiple Tag Allowed: Yes Tag: GridEditable Tag Format: [GridEditable:Value] Description: This tag specifies if the NPC Grid is able to be edited (add/remove/weld/grind blocks). Allowed Values: Yes No Multiple Tag Allowed: No Tag: SubGridsEditable Tag Format: [SubGridsEditable:Value] Description: This tag specifies if sub-grids editable state should also be changed if GridEditable tag is used. Allowed Values: Yes No Multiple Tag Allowed: No Tag: GridDestructible Tag Format: [GridDestructible:Value] Description: This tag specifies if the NPC Grid should have destructible blocks (can receive damage). Allowed Values: Yes No Multiple Tag Allowed: No Tag: SubGridsDestructible Tag Format: [SubGridsDestructible:Value] Description: This tag specifies if sub-grids destructible state should also be changed if GridDestructible tag is used. Allowed Values: Yes No Multiple Tag Allowed: No Inventory Tag: ApplyContainerTypeToInventoryBlock Tag Format: [ApplyContainerTypeToInventoryBlock:Value] Description: This tag specifies if one or more block should have their inventories filled using a specified ContainerType definition subtypeID. Allowed Values: true false Multiple Tag Allowed: No Tag: ContainerTypeBlockNames Tag Format: [ContainerTypeBlockNames:Value] Description: This tag specifies one or more Block Names of blocks that will have inventory applied if using the ApplyContainerTypeToInventoryBlock tag. This tag should be paired with the ContainerTypeSubtypeIds tag. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ContainerTypeSubtypeIds Tag Format: [ContainerTypeSubtypeIds:Value] Description: This tag specifies one or more TextTemplate files that will be used to set block custom data if using the ApplyContainerTypeToInventoryBlock tag. This tag should be paired with the ContainerTypeBlockNames tag. Allowed Values: ContainerType definition SubtypeId Multiple Tag Allowed: Yes Tag: AddDatapadsToSeats Tag Format: [AddDatapadsToSeats:Value] Description: This tag specifies if one or more Datapads should be added to seats randomly on the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: DatapadNamesToAdd Tag Format: [DatapadNamesToAdd:Value] Description: Specifies one or more RivalAI Datapad Profiles to use when randomly adding Datapads to seats. Allowed Values: Any RivalAI Datapad Profile Multiple Tag Allowed: Yes Tag: DatapadCountToAdd Tag Format: [DatapadCountToAdd:Value] Description: Specifies the number of random Datapads that get added to seats on the grid. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No PlayerTags Tag: AddTagstoPlayers Tag Format: [AddTagstoPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AddTagsPlayerConditionIds Tag Format: [AddTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddTags Tag Format: [AddTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddTagsIncludeSavedPlayerIdentity Tag Format: [AddTagsIncludeSavedPlayerIdentity:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AddTagsOverridePositionInPlayerCondition Tag Format: [AddTagsOverridePositionInPlayerCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsFromPlayers Tag Format: [RemoveTagsFromPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsPlayerConditionIds Tag Format: [RemoveTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTags Tag Format: [RemoveTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTagsIncludeSavedPlayerIdentity Tag Format: [RemoveTagsIncludeSavedPlayerIdentity:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsOverridePositioninPlayerCondition Tag Format: [RemoveTagsOverridePositioninPlayerCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Reputation This section contains actions that affect the reputation of players interacting with NPC grids. Tag: ChangeReputationWithPlayers Tag Format: [ChangeReputationWithPlayers:Value] Description: This tag specifies if players within a radius near the current NPC should have their reputation changed with the NPC faction. Allowed Values: true false Multiple Tag Allowed: No Tag: ReputationChangeRadius Tag Format: [ReputationChangeRadius:Value] Description: Specifies the radius that players are detected for reputation change if ChangeReputationWithPlayers is true . Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ReputationChangeFactions Tag Format: [ReputationChangeFactions:Value] Description: Specifies one or more Faction Tags that player reputation is changed with. If you provide the value {Self} , the NPCs faction will be used. This tag must be paired with a ReputationChangeAmount value Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: ReputationChangeAmount Tag Format: [ReputationChangeAmount:Value] Description: Specifies the amount of reputation that is changed with a faction to eligible players if ChangeReputationWithPlayers is true . This tag must be paired with a ReputationChangeFactions value Allowed Values: Any Integer between -1500 and 1500 Multiple Tag Allowed: Yes Tag: ReputationChangesForAllRadiusPlayerFactionMembers Tag Format: [ReputationChangesForAllRadiusPlayerFactionMembers:Value] Description: This tag specifies if reputation made to a player should affect all players in that player's faction. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeAttackerReputation Tag Format: [ChangeAttackerReputation:Value] Description: This tag specifies if reputation should be changed if a player attacks the NPC. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeAttackerReputationFaction Tag Format: [ChangeAttackerReputationFaction:Value] Description: Specifies one or more Faction Tags that player reputation is changed with. If you provide the value {Self} , the NPCs faction will be used. This tag must be paired with a ChangeAttackerReputationAmount value Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: ChangeAttackerReputationAmount Tag Format: [ChangeAttackerReputationAmount:Value] Description: Specifies the amount of reputation that is changed with a faction to attacking players if ChangeReputationWithPlayers is true . This tag must be paired with a ChangeAttackerReputationFaction value Allowed Values: Any Integer between -1500 and 1500 Multiple Tag Allowed: Yes Tag: ReputationChangesForAllAttackPlayerFactionMembers Tag Format: [ReputationChangesForAllAttackPlayerFactionMembers:Value] Description: This tag specifies if reputation made to a player should affect all players in that player's faction. Allowed Values: true false Multiple Tag Allowed: No Tag: ReputationMinCap Tag Format: [ReputationMinCap:Value] Description: This tag allows you to specify the Minimum Reputation level that the action is able to decrease to. If the existing reputation is already lower than the cap, then no further decrease will occur. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No Tag: ReputationMaxCap Tag Format: [ReputationMaxCap:Value] Description: This tag allows you to specify the Maximum Reputation level that the action is able to increase to. If the existing reputation is already higher than the cap, then no further increase will occur. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No Spawning This section contains actions that allow NPCs to Spawn other NPCs, along with other actions that are triggered via the Modular Encounters Spawner API. Tag: SpawnEncounter Tag Format: [SpawnEncounter:Value] Description: This tag specifies if an attached Spawn Profile should be activated. Allowed Values: true false Multiple Tag Allowed: No Tag: Spawner Tag Format: [Spawner:Value] Description: This tag specifies which Spawn Profile should be activated if SpawnEncounter is true . Allowed Values: Any Spawn Profile SubtypeId Multiple Tag Allowed: Yes Tag: CreateKnownPlayerArea Tag Format: [CreateKnownPlayerArea:Value] Description: This tag specifies if the area around the current NPC should be designated as a Known Player Area in the Modular Encounters Spawner mod (this tag is only functional if that mod is loaded in the game world). Allowed Values: true false Multiple Tag Allowed: No Tag: KnownPlayerAreaRadius Tag Format: [KnownPlayerAreaRadius:Value] Description: Specifies the radius from the current NPC for the Known Player Area if CreateKnownPlayerArea is true . Allowed Values: Any Number higher than 0 Multiple Tag Allowed: No Tag: KnownPlayerAreaTimer Tag Format: [KnownPlayerAreaTimer:Value] Description: Specifies the max area time-limit (in minutes) for the Known Player Area if CreateKnownPlayerArea is true . Allowed Values: Any Integer equal/higher than 0 Multiple Tag Allowed: No Tag: KnownPlayerAreaMaxSpawns Tag Format: [KnownPlayerAreaMaxSpawns:Value] Description: Specifies the max amount of spawns for the Known Player Area if CreateKnownPlayerArea is true . Allowed Values: Any Integer equal/higher than -1 Multiple Tag Allowed: No Tag: RemoveKnownPlayerArea Tag Format: [RemoveKnownPlayerArea:Value] Description: This tag specifies if a Known Player Location at the current NPC position should be removed. This will only remove locations that match the faction of the NPC or are not designated to an NPC faction. Allowed Values: true false Multiple Tag Allowed: No Tag: RemoveAllKnownPlayerAreas Tag Format: [RemoveAllKnownPlayerAreas:Value] Description: This tag specifies if all Known Player Locations at the current NPC position should be removed, regardless of faction ownership. RemoveKnownPlayerArea must also be true for this tag to activate. Allowed Values: true false Multiple Tag Allowed: No Tag: AddBotsToGrid Tag Format: [AddBotsToGrid:Value] Description: This tag specifies if a number of AiEnabled (External Mod) Bots should be spawned onto the NPC Grid. Allowed Values: true false Multiple Tag Allowed: No Tag: BotCount Tag Format: [BotCount:Value] Description: This tag specifies the number of AiEnabled bots that should be spawned onto the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: BotSpawnProfileNames Tag Format: [BotSpawnProfileNames:Value] Description: This tag specifies the name(s) of the Spawn Bot Profiles that you want to use to spawn the bots. If multiple values are provided, then each spawn will select one at random. Allowed Values: Any Spawn Bot Profile SubtypeId Multiple Tag Allowed: Yes Tag: OnlySpawnBotsInPressurizedRooms Tag Format: [OnlySpawnBotsInPressurizedRooms:Value] Description: This tag specifies if AiEnabled bots should only be spawned in pressurized spaces on the NPC grid. The location cannot be directly controlled from RivalAI, since the AiEnabled mod is what calculates the safe placement nodes. If you need them to appear in a specific room, you may want to arrange it so that room is the only air-tight space on the grid at the time of spawning. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawnPlanet Tag Format: [SpawnPlanet:Value] Description: This tag specifies if the NPC should spawn an entire freakin planet. Allowed Value(s): true false Multiple Tags Allowed: No Tag: PlanetName Tag Format: [PlanetName:Value] Description: This tag specifies the name of the planet being spawned if using SpawnPlanet Allowed Value(s): Any Planet SubtypeId Multiple Tags Allowed: No Tag: PlanetSize Tag Format: [PlanetSize:Value] Description: This tag specifies the size (diameter, in meters) of the planet that will be spawned if using SpawnPlanet Allowed Value(s): Any Number Greater/Equal To 100 Multiple Tags Allowed: No Tag: PlanetWaypointProfile Tag Format: [PlanetWaypointProfile:Value] Description: This tag specifies the name of a Waypoint Profile that will be used to govern the spawning position of the planet if using SpawnPlanet Allowed Value(s): Any Waypoint Profile SubtypeId Multiple Tags Allowed: No Tag: TemporaryPlanet Tag Format: [TemporaryPlanet:Value] Description: This tag specifies if the spawned planet should be deleted after a set amount of time if using SpawnPlanet Allowed Value(s): true false Multiple Tags Allowed: No Tag: PlanetTimeLimit Tag Format: [PlanetTimeLimit:Value] Description: This tag specifies the time (in seconds) before the planet is despawned if using SpawnPlanet and TemporaryPlanet Allowed Value(s): Any Integer Greater/Equal To 1 Multiple Tags Allowed: No Targeting This section contains actions that change or affect targeting. Tag: RefreshTarget Tag Format: [RefreshTarget:Value] Description: This tag specifies if the Behavior should refresh its current target using its own Target Profile rules. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeTargetProfile Tag Format: [ChangeTargetProfile:Value] Description: This tag specifies if the Current Target Profile should be replaced with another. The target evaluation is NOT immediately refreshed when this tag is used, so if you require the new targeting to be used right away, you should also use the RefreshTarget tag in your Action. Allowed Values: true false Multiple Tag Allowed: No Tag: NewTargetProfileId Tag Format: [NewTargetProfileId:Value] Description: This tag specifies the new Target Profile you want the behavior to use if ChangeTargetProfile is set to true . Allowed Values: Valid Target Profile SubtypeId Multiple Tag Allowed: No Trigger This section contains actions that allow you to change properties of Triggers on the current NPC. Tag: ResetCooldownTimeOfTriggers Tag Format: [ResetCooldownTimeOfTriggers:Value] Description: This tag specifies if one or more Trigger Profiles should have their current cooldown timer reset. Allowed Values: true false Multiple Tag Allowed: No Tag: ResetTriggerCooldownNames Tag Format: [ResetTriggerCooldownNames:Value] Description: This tag specifies a name of a Trigger Profile that should have its cooldown timer reset. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: EnableTriggers Tag Format: [EnableTriggers:Value] Description: This tag specifies if one or more Trigger Profiles should be enabled (ie, UseTrigger set to true). Allowed Values: true false Multiple Tag Allowed: No Tag: EnableTriggerNames Tag Format: [EnableTriggerNames:Value] Description: This tag specifies a name of a Trigger Profile that should have be Enabled. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: DisableTriggers Tag Format: [DisableTriggers:Value] Description: This tag specifies if one or more Trigger Profiles should be disabled (ie, UseTrigger set to false). Allowed Values: true false Multiple Tag Allowed: No Tag: DisableTriggerNames Tag Format: [DisableTriggerNames:Value] Description: This tag specifies a name of a Trigger Profile that should have be Disabled. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ManuallyActivateTrigger Tag Format: [ManuallyActivateTrigger:Value] Description: This tag specifies if one or more Trigger Profiles should be manually triggered. Allowed Values: true false Multiple Tag Allowed: No Tag: ManuallyActivatedTriggerNames Tag Format: [ManuallyActivatedTriggerNames:Value] Description: This tag specifies a name of a Trigger Profile that should be Manually Triggered. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ForceManualTriggerActivation Tag Format: [ForceManualTriggerActivation:Value] Description: This tag specifies if manually activated triggers should be forcibly activated from the action, regardless of their conditions, cooldowns, etc. Allowed Values: true false Multiple Tag Allowed: No Variables This section contains actions that change local or global variables that can be used by the behavior or spawner. Tag: SetBooleansTrue Tag Format: [SetBooleansTrue:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to true within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with the true value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetBooleansFalse Tag Format: [SetBooleansFalse:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to false within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with the false value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: IncreaseCounters Tag Format: [IncreaseCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to increase by 1 within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with a 1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: DecreaseCounters Tag Format: [DecreaseCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to decrease by 1 within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with a -1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetCounters Tag Format: [SetCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a specific value within the behavior. If a provided name does not exist in the behavior, it will be created and saved with the provided value. Ensure you also provide the value you want to set the variable to using the SetCountersValues tag Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetCountersValues Tag Format: [SetCountersValues:Value] Description: This tag specifies the value of an Integer Variable within the behavior. Ensure you also provide the name of the variable you want to set the value of using the SetCounters tag. Allowed Values: Any Integer Value Multiple Tag Allowed: Yes Tag: ResetCounters Tag Format: [ResetCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a value of 0 within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with a 0 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetSandboxBooleansTrue Tag Format: [SetSandboxBooleansTrue:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to true within the Save File. If a provided name does not exist in the Save File, it will be created and saved with the true value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetSandboxBooleansFalse Tag Format: [SetSandboxBooleansFalse:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to false within the Save File. If a provided name does not exist in the Save File, it will be created and saved with the false value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: IncreaseSandboxCounters Tag Format: [IncreaseSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to increase by 1 within the Save File. If a provided name does not exist in the Save File, it will be created and saved with a 1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: IncreaseSandboxCountersAmount Tag Format: [IncreaseSandboxCountersAmount:Value] Description: This tag specifies the amount that all sandbox counters will be increased by if also using IncreaseSandboxCounters tags. Allowed Values: Any Integer Multiple Tag Allowed: No Tag: DecreaseSandboxCounters Tag Format: [DecreaseSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to decrease by 1 within the Save File. If a provided name does not exist in the Save File, it will be created and saved with a -1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: DecreaseSandboxCountersAmount Tag Format: [DecreaseSandboxCountersAmount:Value] Description: This tag specifies the amount that all sandbox counters will be decreased by if also using DecreaseSandboxCounters tags. Allowed Values: Any Integer Multiple Tag Allowed: No Tag: SetSandboxCounters Tag Format: [SetSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a specific value within the Save File. If a provided name does not exist in the Save File, it will be created and saved with the provided value. Ensure you also provide the value you want to set the variable to using the SetSandboxCounters tag Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetSandboxCountersValues Tag Format: [SetSandboxCountersValues:Value] Description: This tag specifies the value of an Integer Variable within the Save File. Ensure you also provide the name of the variable you want to set the value of using the SetSandboxCounters tag. Allowed Values: Any Integer Value Multiple Tag Allowed: Yes Tag: ResetSandboxCounters Tag Format: [ResetSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a value of 0 within the Save File. If a provided name does not exist in the Save File, it will be created and saved with a 0 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: AddCustomDataToBlocks Tag Format: [AddCustomDataToBlocks:Value] Description: This tag specifies if one or more block should have their CustomData set to a specified value using a TextTemplate xml file. Allowed Values: true false Multiple Tag Allowed: No Tag: CustomDataBlockNames Tag Format: [CustomDataBlockNames:Value] Description: This tag specifies one or more Block Names of blocks that will have their CustomData changed if using the AddCustomDataToBlocks tag. This tag should be paired with the CustomDataFiles tag. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: CustomDataFiles Tag Format: [CustomDataFiles:Value] Description: This tag specifies one or more TextTemplate files that will be used to set block custom data if using the AddCustomDataToBlocks tag. This tag should be paired with the CustomDataBlockNames tag. Allowed Values: TextTemplate file name eg: SomeTextTemplate.xml Multiple Tag Allowed: Yes Zone This section contains actions that can change / manipulate Zones (formerly Territories) in the game world. Tag: ChangeZoneAtPosition Tag Format: [ChangeZoneAtPosition:Value] Description: This tag specifies if a zone at the NPCs current position should be manipulated. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneName Tag Format: [ZoneName:Value] Description: This tag specifies the name of the specific zone that should be manipulated. Allowed Values: Any Zone PublicName value Multiple Tag Allowed: No Tag: ZoneToggleActive Tag Format: [ZoneToggleActive:Value] Description: This tag specifies if the named zone in ZoneName should have its Active status changed. The NPC does not need to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneToggleActiveMode Tag Format: [ZoneToggleActive:Value] Description: This tag specifies what the Active status of a zone should be set to if using ZoneToggleActive . The NPC does not need to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneToggleActiveAtPosition Tag Format: [ZoneToggleActiveAtPosition:Value] Description: This tag specifies if the named zone in ZoneName should have its Active status changed. The NPC needs to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneToggleActiveAtPositionMode Tag Format: [ZoneToggleActiveAtPositionMode:Value] Description: This tag specifies what the Active status of a zone should be set to if using ZoneToggleActiveAtPosition . The NPC needs to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneRadiusChangeType Tag Format: [ZoneRadiusChangeType:Value] Description: This tag specifies if the zone that the NPC is inside (also matching ZoneName ) should have its Radius changed. You can choose a modifier in this tag that will be used in combination with ZoneRadiusChangeType Allowed Values: None Set Add Subtract Multiply Divide Multiple Tag Allowed: No Tag: ZoneRadiusChangeAmount Tag Format: [ZoneRadiusChangeAmount:Value] Description: This tag specifies how much the zone radius will be changed if using the ZoneRadiusChangeType tag. Allowed Values: Any Number Multiple Tag Allowed: No Tag: ZoneCustomCounterChange Tag Format: [ZoneToggleActiveAtPositionMode:Value] Description: This tag specifies if the Custom Counters of the zone (at NPC position and matching ZoneName ) should be manipulated. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneCustomCounterChangeType Tag Format: [ZoneCustomCounterChangeType:Value] Description: This tag specifies how the value of a zone's Custom Counter will be changed. Allowed Values: None Set Add Subtract Multiply Divide Multiple Tag Allowed: Yes Tag: ZoneCustomCounterChangeName Tag Format: [ZoneCustomCounterChangeName:Value] Description: This tag specifies the name of the zone's Custom Counter that will be changed. Allowed Values: Any Counter Name Multiple Tag Allowed: Yes Tag: ZoneCustomCounterChangeAmount Tag Format: [ZoneCustomCounterChangeAmount:Value] Description: This tag specifies the amount that the counter specified by ZoneCustomCounterChangeName will be changed. Allowed Values: Any Integer Multiple Tag Allowed: Yes Tag: ZoneCustomBoolChange Tag Format: [ZoneCustomBoolChange:Value] Description: This tag specifies if the Custom Bools of the zone (at NPC position and matching ZoneName ) should be manipulated. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneCustomBoolChangeName Tag Format: [ZoneCustomBoolChangeName:Value] Description: This tag specifies the name of the zone's Custom Bool that will be changed. Allowed Values: Any Bool Name Multiple Tag Allowed: Yes Tag: ZoneCustomBoolChangeValue Tag Format: [ZoneCustomBoolChangeValue:Value] Description: This tag specifies the value that the bool specified by ZoneCustomBoolChangeName will be changed. Allowed Values: true false Multiple Tag Allowed: Yes","title":"Action.md"},{"location":"Action/#actionmd","text":"Action Profiles in Rival AI are used in conjunction with Trigger Profiles . These profile are what execute specified actions when the conditions in a Trigger Profile are satisfied. It is important that you use a unique SubtypeId for each Action Profile you create, otherwise they may not work correctly. Here is an example of how an Action Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleActionProfile</SubtypeId> </Id> <Description> [RivalAI Action] [UseChatBroadcast:true] [ChatData:RAI-ExampleChatProfile] [CreateKnownPlayerArea:true] [KnownPlayerAreaRadius:15000] [KnownPlayerAreaTimer:30] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Action Profiles. They are divided into several categories based on what they affect. Abilities Behavior Blocks Communication Damage Effects General Grid Inventory PlayerTags Reputation Spawning Targeting Trigger Variables Zone","title":"Action.md"},{"location":"Action/#abilities","text":"This section contains actions that enable/disable special abilities for the behavior. Tag: UseJetpackInhibitorEffect Tag Format: [UseJetpackInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Jetpack Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UseDrillInhibitorEffect Tag Format: [UseDrillInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Hand Drill Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UseNanobotInhibitorEffect Tag Format: [UseNanobotInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Nanobot Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UseJumpInhibitorEffect Tag Format: [UseJumpInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Jump Drive Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: UsePlayerInhibitorEffect Tag Format: [UsePlayerInhibitorEffect:Value] Description: This tag specifies if the behavior should enable or disable an internalized Player Inhibitor effect. Since this effect only lasts for the session, it's recommended to use it in combination with a Session Trigger when possible. true enables the effect, while false disables it. Allowed Values: true false Multiple Tag Allowed: No Tag: JumpToTarget Tag Format: [JumpToTarget:Value] Description: This tag allows you to activate the NPC Jump Drive (if present / ready) and jump to the current target. Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpToJumpedEntity Tag Format: [JumpToJumpedEntity:Value] Description: This tag allows you to activate the NPC Jump Drive (if present / ready) and jump to a grid that recently jumped away. This needs to be used with a JumpCompleted trigger Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpedEntityMustBeTarget Tag Format: [JumpedEntityMustBeTarget:Value] Description: This tag specifies whether or not an entity that jumps away (detected by JumpCompleted trigger) must also be the current target of the NPC in order to Jump / Follow it. Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpToWaypoint Tag Format: [JumpToWaypoint:Value] Description: Specifies if a ship should jump to a provided waypoint profile location. Allowed Value(s): true false Multiple Tags Allowed: No Tag: JumpWaypoint Tag Format: [JumpWaypoint:Value] Description: Specifies the waypoint profile id that the ship will use to calculate jump location while using the JumpToWaypoint tag. Allowed Value(s): Any String Value Multiple Tags Allowed: No","title":"Abilities"},{"location":"Action/#behavior","text":"This section contains actions that relate to changes that can be made to the behavior and auto-pilot. Tag: ChangeBehaviorSubclass Tag Format: [ChangeBehaviorSubclass:Value] Description: This tag specifies if the Sub-Class of the behavior should be switched to another (eg: change from Fighter to Strike ). Allowed Values: true false Multiple Tag Allowed: No Tag: NewBehaviorSubclass Tag Format: [NewBehaviorSubclass:Value] Description: This tag specifies the new Behavior Sub-Class that is used if ChangeBehaviorSubclass is set to true . Allowed Values: Any Behavior Type Click Here For Eligible Types Multiple Tag Allowed: No Tag: ChangeAutopilotSpeed Tag Format: [ChangeAutopilotSpeed:Value] Description: This tag specifies if the AutoPilot speed of the current NPC should be changed to a new value. Allowed Values: true false Multiple Tag Allowed: No Tag: NewAutopilotSpeed Tag Format: [NewAutopilotSpeed:Value] Description: Specifies the new AutoPilot speed if ChangeAutopilotSpeed was set to true . Allowed Values: Any number equal/higher than 0 Multiple Tag Allowed: No Tag: ChangeInertiaDampeners Tag Format: [ChangeInertiaDampeners:Value] Description: This tag specifies if the AutoPilot should enable or disable the Inertia Dampeners (may only work with some behaviors / modes). Allowed Values: true false Multiple Tag Allowed: No Tag: InertiaDampenersEnable Tag Format: [InertiaDampenersEnable:Value] Description: Specifies the new Inertia Dampeners mode if ChangeInertiaDampeners was set to true . Allowed Values: true false Multiple Tag Allowed: No Tag: BarrelRoll Tag Format: [BarrelRoll:Value] Description: This tag specifies if the NPC should perform a roll for a short time. Barrel Roll controls can be found in the Autopilot Profile tags section. Allowed Values: true false Multiple Tag Allowed: No Tag: Ramming Tag Format: [Ramming:Value] Description: This tag specifies if the NPC should attempt to ram a target for a short time. Ramming controls can be found in the Autopilot Profile tags section. Allowed Values: true false Multiple Tag Allowed: No Tag: Retreat Tag Format: [Retreat:Value] Description: This tag specifies if the Retreat function should be activated in the current behavior. Allowed Values: true false Multiple Tag Allowed: No Tag: RecalculateDespawnCoords Tag Format: [RecalculateDespawnCoords:Value] Description: This tag specifies if the NPC should recalculate its Despawn Coordinates if it is using coordinates retrieved from MES or generated within RivalAI. The newly generated coordinates will be created from data in the Active Autopilot Profile of the behavior. Allowed Values: true false Multiple Tag Allowed: No Tag: ForceDespawn Tag Format: [ForceDespawn:Value] Description: This tag specifies if the NPC grid should immediately be despawned. Allowed Values: true false Multiple Tag Allowed: No Tag: TerminateBehavior Tag Format: [TerminateBehavior:Value] Description: This tag specifies if the current NPC Behavior should be terminated (meaning no more AI processing from that behavior). Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeRotationDirection Tag Format: [ChangeRotationDirection:Value] Description: This tag specifies if the ship should use a different direction when rotating towards a target. Specify direction using the RotationDirection tag Allowed Values: true false Multiple Tag Allowed: No Tag: RotationDirection Tag Format: [RotationDirection:Value] Description: This tag specifies the direction a ship should use when rotating towards a target if ChangeRotationDirection is true . Allowed Values: Forward Backward Up Down Left Right Multiple Tag Allowed: No Tag: ChangeAutopilotProfile Tag Format: [ChangeAutopilotProfile:Value] Description: This tag specifies if the Autopilot Profile should be switched to another mode, using another attached Autopilot Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: AutopilotProfile Tag Format: [AutopilotProfile:Value] Description: This tag specifies the Autopilot Profile Mode that should be switched to. Allowed Values: Primary Secondary Tertiary Multiple Tag Allowed: No Tag: StopAllRotation Tag Format: [StopAllRotation:Value] Description: This tag will set all Gyroscope Overrides to 0 on the NPC. This is useful when paired with a Compromised trigger to stop any gyros that may be stuck rotating when a RivalAI Remote Control is disabled. Allowed Values: true false Multiple Tag Allowed: No Tag: StopAllThrust Tag Format: [StopAllThrust:Value] Description: This tag will set all Thruster Overrides to 0 on the NPC. This is useful when paired with a Compromised trigger to stop any thrusters that may be stuck in override when a RivalAI Remote Control is disabled. Allowed Values: true false Multiple Tag Allowed: No Tag: RandomGyroRotation Tag Format: [RandomGyroRotation:Value] Description: This tag will set a random Gyroscopic rotation and apply it to the NPC grid. This is useful when paired with a Compromised trigger. Allowed Values: true false Multiple Tag Allowed: No Tag: RandomThrustDirection Tag Format: [RandomThrustDirection:Value] Description: This tag will set a random Thruster Override Strength and Direction, and apply it to the NPC grid. This is useful when paired with a Compromised trigger. Allowed Values: true false Multiple Tag Allowed: No Tag: UseCurrentPositionAsPatrolReference Tag Format: [UseCurrentPositionAsPatrolReference:Value] Description: This tag sets the current position of the NPC as its Patrol Reference so it will calculate offsets starting from that position instead of using its initial spawn coordinates. Allowed Values: true false Multiple Tag Allowed: No Tag: ClearCustomPatrolReference Tag Format: [ClearCustomPatrolReference:Value] Description: This tag removes any saved coordinates that may have been set using UseCurrentPositionAsPatrolReference so behaviors using patrol will revert to using their initial spawn coordinates to calculate patrol offsets. Allowed Values: true false Multiple Tag Allowed: No Tag: ClearAllWaypoints Tag Format: [ClearAllWaypoints:Value] Description: Specifies if all current waypoints should be erased when using the CargoShip behavior subclass. This will result in the behavior travelling to its generated despawn coordinates. Allowed Value(s): true false Multiple Tags Allowed: No Tag: AddWaypoints Tag Format: [AddWaypoints:Value] Description: Specifies if one or more Waypoints should be created and added to a behavior if they are using the CargoShip subclass. Allowed Value(s): true false Multiple Tags Allowed: No Tag: WaypointsToAdd Tag Format: [WaypointsToAdd:Value] Description: Specifies the name(s) of the waypoint profiles you want to add to a CargoShip subclass behavior if using the AddWaypoints tag Allowed Value(s): Waypoint Profile SubtypeId Multiple Tags Allowed: Yes Tag: CancelWaitingAtWaypoint Tag Format: [CancelWaitingAtWaypoint:Value] Description: Specifies if a CargoShip subclass behavior should stop waiting at a waypoint it reached and begin travelling to the next eligible waypoint. Allowed Value(s): true false Multiple Tags Allowed: No Tag: SwitchToNextWaypoint Tag Format: [SwitchToNextWaypoint:Value] Description: Specifies if a CargoShip subclass behavior should have its current waypoint that is being travelled to cancelled so it can move onto the next eligible waypoint. Allowed Value(s): true false Multiple Tags Allowed: No","title":"Behavior"},{"location":"Action/#blocks","text":"This section contains actions that affect the state of blocks on the NPC grid. Tag: EnableBlocks Tag Format: [EnableBlocks:Value] Description: This tag specifies if certain blocks should be turned On or Off. Allowed Values: true false Multiple Tag Allowed: No Tag: EnableBlockNames Tag Format: [EnableBlockNames:Value] Description: This tag specifies the name(s) of blocks that you want to toggle on or off. Allowed Values: Any Block Name Multiple Tag Allowed: Yes Tag: EnableBlockStates Tag Format: [EnableBlockStates:Value] Description: This tag specifies the On/Off state of blocks that you want to toggle on or off. Allowed Values: Off On Toggle Multiple Tag Allowed: Yes Tag: ChangeAntennaRanges Tag Format: [ChangeAntennaRanges:Value] Description: This tag specifies if attached antennas should have their range changed. Allowed Values: true false Multiple Tag Allowed: No Tag: AntennaNamesForRangeChange Tag Format: [AntennaNamesForRangeChange:Value] Description: This tag specifies the name of the antenna(s) that should have their ranges changed. If this tag is not provided, then all antennas will be affected Allowed Values: Any Antenna Name Multiple Tag Allowed: Yes Tag: AntennaRangeChangeType Tag Format: [AntennaRangeChangeType:Value] Description: This tag specifies how the antenna range should be changed by using this value with the value of AntennaRangeChangeAmount . Allowed Values: Set Increase Decrease Multiple Tag Allowed: No Tag: AntennaRangeChangeAmount Tag Format: [AntennaRangeChangeAmount:Value] Description: This tag specifies how much the antenna range should be changed by. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ChangeAntennaOwnership Tag Format: [ChangeAntennaOwnership:Value] Description: This tag specifies if Antenna Blocks on the current NPC grid should have their ownership changed. Allowed Values: true false Multiple Tag Allowed: No Tag: AntennaFactionOwner Tag Format: [AntennaFactionOwner:Value] Description: Specifies the faction (by faction tag) that antenna blocks get changed to if ChangeAntennaOwnership is true . Allowed Values: Any Faction Tag Multiple Tag Allowed: No Tag: ChangeBlockNames Tag Format: [ChangeBlockNames:Value] Description: This tag specifies if blocks on the NPC grid should have their names changed. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeBlockNamesFrom Tag Format: [ChangeBlockNamesFrom:Value] Description: This tag specifies a name of a Block that will have its name changed. Ideally you should place this tag before the ChangeBlockNamesTo tag, keeping them in pairs in your Action Profile. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ChangeBlockNamesTo Tag Format: [ChangeBlockNamesTo:Value] Description: This tag specifies the name that a Block specified in ChangeBlockNamesFrom will be changed to. Ideally you should place this tag after the ChangeBlockNamesFrom tag, keeping them in pairs in your Action Profile. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: TriggerTimerBlocks Tag Format: [TriggerTimerBlocks:Value] Description: This tag specifies if select Timer Blocks on the current NPC grid should be Triggered. Allowed Values: true false Multiple Tag Allowed: No Tag: TimerBlockNames Tag Format: [TimerBlockNames:Value] Description: This tag specifies a name of a Timer Block on the current NPC grid should be Triggered. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SelfDestruct Tag Format: [SelfDestruct:Value] Description: This tag specifies if all Warhead Blocks on the current NPC grid should be detonated. Allowed Values: true false Multiple Tag Allowed: No Tag: StaggerWarheadDetonation Tag Format: [StaggerWarheadDetonation:Value] Description: This tag specifies if warheads should be detonated in 1 second intervals instead of all at once. Allowed Values: true false Multiple Tag Allowed: No Tag: SelfDestructTimerPadding Tag Format: [SelfDestructTimerPadding:Value] Description: This tag specifies the minimum time that all warheads will start at if countdown is initiated. Allowed Values: Any number greater or equal to 0 Multiple Tag Allowed: No Tag: SelfDestructTimeBetweenBlasts Tag Format: [SelfDestructTimeBetweenBlasts:Value] Description: This tag specifies the time between detonations that is applied to warheads if StaggerWarheadDetonation is used. Allowed Values: Any number greater or equal to 0 Multiple Tag Allowed: No Tag: ChangeBlockOwnership Tag Format: [ChangeBlockOwnership:Value] Description: This tag specifies if some blocks should have their ownership changed. Block names and Faction Tags should be provided in the OwnershipBlockNames and OwnershipBlockFactions tags together. Allowed Values: true false Multiple Tag Allowed: No Tag: OwnershipBlockNames Tag Format: [OwnershipBlockNames:Value] Description: This tag specifies a name of a Block that gets it's ownership changed. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: OwnershipBlockFactions Tag Format: [OwnershipBlockFactions:Value] Description: This tag specifies a name of a faction that a block ownership should be changed to. Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: RazeBlocksWithNames Tag Format: [RazeBlocksWithNames:Value] Description: This tag specifies if some blocks should be destroyed on the NPC grid. Allowed Values: true false Multiple Tag Allowed: No Tag: RazeBlocksNames Tag Format: [RazeBlocksNames:Value] Description: This tag specifies names of blocks that are destroyed when the action is executed. Allowed Values: Any Block Name Multiple Tag Allowed: Yes Tag: RazeBlocksOfType Tag Format: [RazeBlocksOfType:Value] Description: This tag specifies if some block types should be destroyed on the NPC grid. Allowed Values: true false Multiple Tag Allowed: No Tag: RazeBlocksTypes Tag Format: [RazeBlocksTypes:Value] Description: This tag specifies types of blocks that are destroyed when the action is executed. Allowed Values: Any Block Type (eg MyObjectBuilder_CubeBlock/SomeBlockSubtypeId ) Multiple Tag Allowed: Yes Tag: ToggleBlocksOfType Tag Format: [ToggleBlocksOfType:Value] Description: This tag specifies if blocks of a matching type should be set to on, off, or toggled from existing state. Allowed Values: true false Multiple Tag Allowed: No Tag: BlockTypesToToggle Tag Format: [BlockTypesToToggle:Value] Description: This tag specifies the types of block that will be toggled. This tag needs to be paired with a BlockTypeToggles tag. Allowed Values: Any Block DefinitionID Eg: MyObjectBuilder_Parachute/LgParachute Multiple Tag Allowed: Yes Tag: BlockTypeToggles Tag Format: [BlockTypeToggles:Value] Description: This tag specifies the toggle action that will be applied to a block type. This tag needs to be paired with a BlockTypesToToggle tag. Allowed Values: Off On Toggle Multiple Tag Allowed: Yes Tag: BuildProjectedBlocks Tag Format: [BuildProjectedBlocks:Value] Description: This tag specifies if a number of blocks currently being projected from the NPC Grid should be built instantly. The projection must already be active at the time this Action is activated (enabling the projector and using this action in the same profile may not work since there is a minor delay when the projection is being created in game). Allowed Values: true false Multiple Tag Allowed: No Tag: MaxProjectedBlocksToBuild Tag Format: [MaxProjectedBlocksToBuild:Value] Description: Specifies the maximum number of blocks that are built if BuildProjectedBlocks is true . If this value is not defined, or the value is set to -1 , then all currently eligible blocks will be built on the projection. Allowed Values: Any Integer higher than -1 Multiple Tag Allowed: No Tag: SetWeaponsToMinRange Tag Format: [SetWeaponsToMinRange:Value] Description: This tag specifies if all auto-firing weapons (turrets, weapon core homing weapons, etc) should be limited to 800m. Allowed Values: true false Multiple Tag Allowed: No Tag: SetWeaponsToMaxRange Tag Format: [SetWeaponsToMaxRange:Value] Description: This tag specifies if all auto-firing weapons (turrets, weapon core homing weapons, etc) should be set to their maximum range. Allowed Values: true false Multiple Tag Allowed: No Tag: EnableHighestRangeAntennas Tag Format: [EnableHighestRangeAntennas:Value] Description: This tag specifies if all antennas on the current grid that have the highest range should be turned on. Allowed Values: true false Multiple Tag Allowed: No Tag: DisableHighestRangeAntennas Tag Format: [DisableHighestRangeAntennas:Value] Description: This tag specifies if all antennas on the current grid that have the highest range should be turned off. Allowed Values: true false Multiple Tag Allowed: No Tag: ApplyLcdChanges Tag Format: [ApplyLcdChanges:Value] Description: This tag allows you to specify if one or more blocks should have their LCD contents changed. Allowed Value(s): true false Multiple Tags Allowed: No Tag: LcdTextTemplateFile Tag Format: [LcdTextTemplateFile:Value] Description: This tag allows you to specify the name of the TextTemplate file that is used for populating LCD content if using the ApplyLcdChanges tag Allowed Value(s): Any String Value Multiple Tags Allowed: No Tag: LcdBlockNames Tag Format: [LcdBlockNames:Value] Description: This tag allows you to specify one or more block name that will have LCD contents changed if using the ApplyLcdChanges tag. Each instance of this tag should be paired with the LcdTemplateIndexes tag as well. Allowed Value(s): Any String Value Multiple Tags Allowed: Yes Tag: LcdTemplateIndexes Tag Format: [LcdTemplateIndexes:Value] Description: This tag allows you to specify one or more index that is used to select an Lcd Entry in the TextTemplate file if using the ApplyLcdChanges tag. Each instance of this tag should be paired with the LcdBlockNames tag as well. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: Yes","title":"Blocks"},{"location":"Action/#communication","text":"This section contains actions for NPC to NPC communication. Tag: UseChatBroadcast Tag Format: [UseChatBroadcast:Value] Description: This tag specifies if an attached Chat Profile should be activated. Allowed Values: true false Multiple Tag Allowed: No Tag: ChatData Tag Format: [ChatData:Value] Description: This tag specifies which Chat Profile should be activated if UseChatBroadcast is true . Allowed Values: Any Chat Profile SubtypeId Multiple Tag Allowed: Yes Tag: BroadcastCommandProfiles Tag Format: [BroadcastCommandProfiles:Value] Description: This tag specifies if the Behavior should broadcast one or more Command Profile to other nearby NPCs. Allowed Values: true false Multiple Tag Allowed: No Tag: CommandProfileIds Tag Format: [CommandProfileIds:Value] Description: This tag specifies the SubtypeId of a Command Profile that you want to use in your broadcast to other nearby NPCs. Allowed Values: Any Command Profile SubtypeId Multiple Tag Allowed: Yes Tag: AddWaypointFromCommand Tag Format: [AddWaypointFromCommand:Value] Description: This tag specifies if the Behavior should add a waypoint received by a command to its list of waypoints. This is mostly for use by the CargoShip behavior, but others may use it in the future. Allowed Values: true false Multiple Tag Allowed: No Tag: SwitchToReceivedTarget Tag Format: [SwitchToReceivedTarget:Value] Description: This tag specifies if the Behavior should switch to a new target provided by either the damage or broadcast system. Allowed Values: true false Multiple Tag Allowed: No Tag: InheritLastAttackerFromCommand Tag Format: [InheritLastAttackerFromCommand:Value] Description: This tag specifies if the Behavior should consider the received target from a command as an entity that attacked it as well. Required for some behavior specific actions. Allowed Values: true false Multiple Tag Allowed: No Tag: AssignEscortFromCommand Tag Format: [AssignEscortFromCommand:Value] Description: This tag allows you to assign any potential Escort Requests to an empty escort slot (if available) for this NPC. The Escort Requests are received by Command Profile related Triggers. Allowed Value(s): true false Multiple Tags Allowed: No","title":"Communication"},{"location":"Action/#damage","text":"This section contains actions for damaging other entities. Tag: DamageToolAttacker Tag Format: [DamageToolAttacker:Value] Description: This tag specifies if a player or block attacking the current NPC with a Grinder/Drill should receive damage. This tag only works if called from a Trigger Profile that uses Damage as a Trigger Type. Allowed Values: true false Multiple Tag Allowed: No Tag: DamageToolAttackerAmount Tag Format: [DamageToolAttackerAmount:Value] Description: Specifies the amount of damage a target receives if DamageToolAttacker is true . Allowed Values: Any Number higher than 0 Multiple Tag Allowed: No Tag: DamageToolAttackerParticle Tag Format: [DamageToolAttackerParticle:Value] Description: Specifies a particle effect that will display over the attacker if DamageToolAttacker is true . Allowed Values: Any Particle Effect SubtypeId Multiple Tag Allowed: No Tag: DamageToolAttackerSound Tag Format: [DamageToolAttackerSound:Value] Description: Specifies a sound effect that will display over the attacker if DamageToolAttacker is true . Allowed Values: Any Audio SubtypeId Multiple Tag Allowed: No Tag: GenerateExplosion Tag Format: [GenerateExplosion:Value] Description: This tag specifies if an Explosion should be generated at the coordinates of the Remote Control. Allowed Values: true false Multiple Tag Allowed: No Tag: ExplosionOffsetFromRemote Tag Format: [ExplosionOffsetFromRemote:Value] Description: This tag specifies the Offset from the Remote Control Position that the explosion should be created at if GenerateExplosion is true . Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with values in meters. Multiple Tag Allowed: No Tag: ExplosionRange Tag Format: [ExplosionRange:Value] Description: Specifies the radius of the Explosion if GenerateExplosion is true . The particle effect used for the explosion changes depending on this value: 0-1: Tiny 2-14: Small 15-29: Medium 30+: Large Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ExplosionDamage Tag Format: [ExplosionDamage:Value] Description: Specifies the damage of the Explosion if GenerateExplosion is true . Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ExplosionIgnoresVoxels Tag Format: [ExplosionIgnoresVoxels:Value] Description: This tag specifies if an Explosion should skip damage to voxels if GenerateExplosion is true . Allowed Values: true false Multiple Tag Allowed: No Tag: CreateRandomLightning Tag Format: [CreateRandomLightning:Value] Description: This tag specifies if a bolt of lightning should be generated near the NPC. Only works on planets that have atmosphere. Allowed Values: true false Multiple Tag Allowed: No Tag: CreateLightningAtAttacker Tag Format: [CreateLightningAtAttacker:Value] Description: This tag specifies if a bolt of lightning should be generated at the position of the entity that caused damage to the NPC. Only works on planets that have atmosphere. Allowed Values: true false Multiple Tag Allowed: No Tag: CreateLightningAtTarget Tag Format: [CreateLightningAtTarget:Value] Description: This tag specifies if a bolt of lightning should be generated at the position of current target. Only works on planets that have atmosphere. Allowed Values: true false Multiple Tag Allowed: No Tag: LightningDamage Tag Format: [LightningDamage:Value] Description: Specifies the damage of lightning bolts created by an Action. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: LightningExplosionRadius Tag Format: [LightningExplosionRadius:Value] Description: Specifies the explosion radius of lightning bolts created by an Action. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: LightningColor Tag Format: [LightningColor:Value] Description: Specifies the color of lightning bolts created by an Action. Allowed Values: {X:0 Y:0 Z:0} X 0 - 100 (Red) Y 0 - 100 (Green) Z 0 - 100 (Blue) Multiple Tag Allowed: No Tag: LightningMinDistance Tag Format: [LightningMinDistance:Value] Description: Specifies the minimum distance from the NPC that lightning will be created at if CreateRandomLightning is true . Allowed Values: Any Number Greater Than 0 Must be lower than LightningMaxDistance Multiple Tag Allowed: No Tag: LightningMaxDistance Tag Format: [LightningMaxDistance:Value] Description: Specifies the maximum distance from the NPC that lightning will be created at if CreateRandomLightning is true . Allowed Values: Any Number Greater Than 0 Must be higher than LightningMinDistance Multiple Tag Allowed: No","title":"Damage"},{"location":"Action/#effects","text":"This section contains actions for playing audio and visual effects. Tag: PlaySoundAtPosition Tag Format: [PlaySoundAtPosition:Value] Description: This tag specifies if a single sound effect should be played at the NPC current position. This does not require a sound block, or any additional grid configuration. Allowed Value(s): true false Multiple Tags Allowed: No Tag: SoundAtPosition Tag Format: [SoundAtPosition:Value] Description: This tag specifies the name of the sound effect you want to play if using PlaySoundAtPosition Allowed Value(s): Multiple Tags Allowed: No","title":"Effects"},{"location":"Action/#general","text":"This section contains actions that don't quite fit the other sections. Tag: Chance Tag Format: [Chance:Value] Description: Specifies the Chance (out of 100) that this action will be run. Allowed Values: Any Number 0 to 100 Multiple Tag Allowed: No Tag: SetGridCleanupExempt Tag Format: [SetGridCleanupExempt:Value] Description: This tag specifies if the NPC grid should be temporarily exempt from MES cleanup processes. Allowed Value(s): true false Multiple Tags Allowed: No Tag: GridCleanupExemptDuration Tag Format: [GridCleanupExemptDuration:Value] Description: This tag specifies the length of time (in seconds) that the NPC will be exempt from cleanup if used with the SetGridCleanupExempt tag Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No","title":"General"},{"location":"Action/#grid","text":"This section contains actions that affect the entire grid. Tag: RecolorGrid Tag Format: [RecolorGrid:Value] Description: This tag specifies if selected blocks on the grid should be recolored and reskinned. Allowed Values: true false Multiple Tag Allowed: No Tag: RecolorSubGrids Tag Format: [RecolorSubGrids:Value] Description: This tag specifies if subgrids should also be considered when using the RecolorGrid tag. Allowed Values: true false Multiple Tag Allowed: No Tag: OldBlockColors Tag Format: [OldBlockColors:Value] Description: This tag specifies the old colors that are targeted for replacement when using the RecolorGrid tag. You should also include NewBlockColors and NewBlockSkins tags together when using this tag. Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with matching values from ColorMaskHSV Multiple Tag Allowed: Yes Tag: NewBlockColors Tag Format: [NewBlockColors:Value] Description: This tag specifies the new colors that are used for replacement when using the RecolorGrid tag. Provide {X:-10 Y:-10 Z:-10} to skip replacing color if you only intend to replace skin. Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with matching values from ColorMaskHSV Multiple Tag Allowed: Yes Tag: NewBlockSkins Tag Format: [NewBlockSkins:Value] Description: This tag specifies the new skins that are used for replacement when using the RecolorGrid tag. Provide a single blank space to skip replacing skin if you only intend to replace color. Allowed Values: Any Armor Skin SubtypeId Multiple Tag Allowed: Yes Tag: GridEditable Tag Format: [GridEditable:Value] Description: This tag specifies if the NPC Grid is able to be edited (add/remove/weld/grind blocks). Allowed Values: Yes No Multiple Tag Allowed: No Tag: SubGridsEditable Tag Format: [SubGridsEditable:Value] Description: This tag specifies if sub-grids editable state should also be changed if GridEditable tag is used. Allowed Values: Yes No Multiple Tag Allowed: No Tag: GridDestructible Tag Format: [GridDestructible:Value] Description: This tag specifies if the NPC Grid should have destructible blocks (can receive damage). Allowed Values: Yes No Multiple Tag Allowed: No Tag: SubGridsDestructible Tag Format: [SubGridsDestructible:Value] Description: This tag specifies if sub-grids destructible state should also be changed if GridDestructible tag is used. Allowed Values: Yes No Multiple Tag Allowed: No","title":"Grid"},{"location":"Action/#inventory","text":"Tag: ApplyContainerTypeToInventoryBlock Tag Format: [ApplyContainerTypeToInventoryBlock:Value] Description: This tag specifies if one or more block should have their inventories filled using a specified ContainerType definition subtypeID. Allowed Values: true false Multiple Tag Allowed: No Tag: ContainerTypeBlockNames Tag Format: [ContainerTypeBlockNames:Value] Description: This tag specifies one or more Block Names of blocks that will have inventory applied if using the ApplyContainerTypeToInventoryBlock tag. This tag should be paired with the ContainerTypeSubtypeIds tag. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ContainerTypeSubtypeIds Tag Format: [ContainerTypeSubtypeIds:Value] Description: This tag specifies one or more TextTemplate files that will be used to set block custom data if using the ApplyContainerTypeToInventoryBlock tag. This tag should be paired with the ContainerTypeBlockNames tag. Allowed Values: ContainerType definition SubtypeId Multiple Tag Allowed: Yes Tag: AddDatapadsToSeats Tag Format: [AddDatapadsToSeats:Value] Description: This tag specifies if one or more Datapads should be added to seats randomly on the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: DatapadNamesToAdd Tag Format: [DatapadNamesToAdd:Value] Description: Specifies one or more RivalAI Datapad Profiles to use when randomly adding Datapads to seats. Allowed Values: Any RivalAI Datapad Profile Multiple Tag Allowed: Yes Tag: DatapadCountToAdd Tag Format: [DatapadCountToAdd:Value] Description: Specifies the number of random Datapads that get added to seats on the grid. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No","title":"Inventory"},{"location":"Action/#playertags","text":"Tag: AddTagstoPlayers Tag Format: [AddTagstoPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AddTagsPlayerConditionIds Tag Format: [AddTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddTags Tag Format: [AddTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddTagsIncludeSavedPlayerIdentity Tag Format: [AddTagsIncludeSavedPlayerIdentity:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AddTagsOverridePositionInPlayerCondition Tag Format: [AddTagsOverridePositionInPlayerCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsFromPlayers Tag Format: [RemoveTagsFromPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsPlayerConditionIds Tag Format: [RemoveTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTags Tag Format: [RemoveTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTagsIncludeSavedPlayerIdentity Tag Format: [RemoveTagsIncludeSavedPlayerIdentity:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsOverridePositioninPlayerCondition Tag Format: [RemoveTagsOverridePositioninPlayerCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no","title":"PlayerTags"},{"location":"Action/#reputation","text":"This section contains actions that affect the reputation of players interacting with NPC grids. Tag: ChangeReputationWithPlayers Tag Format: [ChangeReputationWithPlayers:Value] Description: This tag specifies if players within a radius near the current NPC should have their reputation changed with the NPC faction. Allowed Values: true false Multiple Tag Allowed: No Tag: ReputationChangeRadius Tag Format: [ReputationChangeRadius:Value] Description: Specifies the radius that players are detected for reputation change if ChangeReputationWithPlayers is true . Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ReputationChangeFactions Tag Format: [ReputationChangeFactions:Value] Description: Specifies one or more Faction Tags that player reputation is changed with. If you provide the value {Self} , the NPCs faction will be used. This tag must be paired with a ReputationChangeAmount value Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: ReputationChangeAmount Tag Format: [ReputationChangeAmount:Value] Description: Specifies the amount of reputation that is changed with a faction to eligible players if ChangeReputationWithPlayers is true . This tag must be paired with a ReputationChangeFactions value Allowed Values: Any Integer between -1500 and 1500 Multiple Tag Allowed: Yes Tag: ReputationChangesForAllRadiusPlayerFactionMembers Tag Format: [ReputationChangesForAllRadiusPlayerFactionMembers:Value] Description: This tag specifies if reputation made to a player should affect all players in that player's faction. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeAttackerReputation Tag Format: [ChangeAttackerReputation:Value] Description: This tag specifies if reputation should be changed if a player attacks the NPC. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeAttackerReputationFaction Tag Format: [ChangeAttackerReputationFaction:Value] Description: Specifies one or more Faction Tags that player reputation is changed with. If you provide the value {Self} , the NPCs faction will be used. This tag must be paired with a ChangeAttackerReputationAmount value Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: ChangeAttackerReputationAmount Tag Format: [ChangeAttackerReputationAmount:Value] Description: Specifies the amount of reputation that is changed with a faction to attacking players if ChangeReputationWithPlayers is true . This tag must be paired with a ChangeAttackerReputationFaction value Allowed Values: Any Integer between -1500 and 1500 Multiple Tag Allowed: Yes Tag: ReputationChangesForAllAttackPlayerFactionMembers Tag Format: [ReputationChangesForAllAttackPlayerFactionMembers:Value] Description: This tag specifies if reputation made to a player should affect all players in that player's faction. Allowed Values: true false Multiple Tag Allowed: No Tag: ReputationMinCap Tag Format: [ReputationMinCap:Value] Description: This tag allows you to specify the Minimum Reputation level that the action is able to decrease to. If the existing reputation is already lower than the cap, then no further decrease will occur. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No Tag: ReputationMaxCap Tag Format: [ReputationMaxCap:Value] Description: This tag allows you to specify the Maximum Reputation level that the action is able to increase to. If the existing reputation is already higher than the cap, then no further increase will occur. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No","title":"Reputation"},{"location":"Action/#spawning","text":"This section contains actions that allow NPCs to Spawn other NPCs, along with other actions that are triggered via the Modular Encounters Spawner API. Tag: SpawnEncounter Tag Format: [SpawnEncounter:Value] Description: This tag specifies if an attached Spawn Profile should be activated. Allowed Values: true false Multiple Tag Allowed: No Tag: Spawner Tag Format: [Spawner:Value] Description: This tag specifies which Spawn Profile should be activated if SpawnEncounter is true . Allowed Values: Any Spawn Profile SubtypeId Multiple Tag Allowed: Yes Tag: CreateKnownPlayerArea Tag Format: [CreateKnownPlayerArea:Value] Description: This tag specifies if the area around the current NPC should be designated as a Known Player Area in the Modular Encounters Spawner mod (this tag is only functional if that mod is loaded in the game world). Allowed Values: true false Multiple Tag Allowed: No Tag: KnownPlayerAreaRadius Tag Format: [KnownPlayerAreaRadius:Value] Description: Specifies the radius from the current NPC for the Known Player Area if CreateKnownPlayerArea is true . Allowed Values: Any Number higher than 0 Multiple Tag Allowed: No Tag: KnownPlayerAreaTimer Tag Format: [KnownPlayerAreaTimer:Value] Description: Specifies the max area time-limit (in minutes) for the Known Player Area if CreateKnownPlayerArea is true . Allowed Values: Any Integer equal/higher than 0 Multiple Tag Allowed: No Tag: KnownPlayerAreaMaxSpawns Tag Format: [KnownPlayerAreaMaxSpawns:Value] Description: Specifies the max amount of spawns for the Known Player Area if CreateKnownPlayerArea is true . Allowed Values: Any Integer equal/higher than -1 Multiple Tag Allowed: No Tag: RemoveKnownPlayerArea Tag Format: [RemoveKnownPlayerArea:Value] Description: This tag specifies if a Known Player Location at the current NPC position should be removed. This will only remove locations that match the faction of the NPC or are not designated to an NPC faction. Allowed Values: true false Multiple Tag Allowed: No Tag: RemoveAllKnownPlayerAreas Tag Format: [RemoveAllKnownPlayerAreas:Value] Description: This tag specifies if all Known Player Locations at the current NPC position should be removed, regardless of faction ownership. RemoveKnownPlayerArea must also be true for this tag to activate. Allowed Values: true false Multiple Tag Allowed: No Tag: AddBotsToGrid Tag Format: [AddBotsToGrid:Value] Description: This tag specifies if a number of AiEnabled (External Mod) Bots should be spawned onto the NPC Grid. Allowed Values: true false Multiple Tag Allowed: No Tag: BotCount Tag Format: [BotCount:Value] Description: This tag specifies the number of AiEnabled bots that should be spawned onto the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: BotSpawnProfileNames Tag Format: [BotSpawnProfileNames:Value] Description: This tag specifies the name(s) of the Spawn Bot Profiles that you want to use to spawn the bots. If multiple values are provided, then each spawn will select one at random. Allowed Values: Any Spawn Bot Profile SubtypeId Multiple Tag Allowed: Yes Tag: OnlySpawnBotsInPressurizedRooms Tag Format: [OnlySpawnBotsInPressurizedRooms:Value] Description: This tag specifies if AiEnabled bots should only be spawned in pressurized spaces on the NPC grid. The location cannot be directly controlled from RivalAI, since the AiEnabled mod is what calculates the safe placement nodes. If you need them to appear in a specific room, you may want to arrange it so that room is the only air-tight space on the grid at the time of spawning. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawnPlanet Tag Format: [SpawnPlanet:Value] Description: This tag specifies if the NPC should spawn an entire freakin planet. Allowed Value(s): true false Multiple Tags Allowed: No Tag: PlanetName Tag Format: [PlanetName:Value] Description: This tag specifies the name of the planet being spawned if using SpawnPlanet Allowed Value(s): Any Planet SubtypeId Multiple Tags Allowed: No Tag: PlanetSize Tag Format: [PlanetSize:Value] Description: This tag specifies the size (diameter, in meters) of the planet that will be spawned if using SpawnPlanet Allowed Value(s): Any Number Greater/Equal To 100 Multiple Tags Allowed: No Tag: PlanetWaypointProfile Tag Format: [PlanetWaypointProfile:Value] Description: This tag specifies the name of a Waypoint Profile that will be used to govern the spawning position of the planet if using SpawnPlanet Allowed Value(s): Any Waypoint Profile SubtypeId Multiple Tags Allowed: No Tag: TemporaryPlanet Tag Format: [TemporaryPlanet:Value] Description: This tag specifies if the spawned planet should be deleted after a set amount of time if using SpawnPlanet Allowed Value(s): true false Multiple Tags Allowed: No Tag: PlanetTimeLimit Tag Format: [PlanetTimeLimit:Value] Description: This tag specifies the time (in seconds) before the planet is despawned if using SpawnPlanet and TemporaryPlanet Allowed Value(s): Any Integer Greater/Equal To 1 Multiple Tags Allowed: No","title":"Spawning"},{"location":"Action/#targeting","text":"This section contains actions that change or affect targeting. Tag: RefreshTarget Tag Format: [RefreshTarget:Value] Description: This tag specifies if the Behavior should refresh its current target using its own Target Profile rules. Allowed Values: true false Multiple Tag Allowed: No Tag: ChangeTargetProfile Tag Format: [ChangeTargetProfile:Value] Description: This tag specifies if the Current Target Profile should be replaced with another. The target evaluation is NOT immediately refreshed when this tag is used, so if you require the new targeting to be used right away, you should also use the RefreshTarget tag in your Action. Allowed Values: true false Multiple Tag Allowed: No Tag: NewTargetProfileId Tag Format: [NewTargetProfileId:Value] Description: This tag specifies the new Target Profile you want the behavior to use if ChangeTargetProfile is set to true . Allowed Values: Valid Target Profile SubtypeId Multiple Tag Allowed: No","title":"Targeting"},{"location":"Action/#trigger","text":"This section contains actions that allow you to change properties of Triggers on the current NPC. Tag: ResetCooldownTimeOfTriggers Tag Format: [ResetCooldownTimeOfTriggers:Value] Description: This tag specifies if one or more Trigger Profiles should have their current cooldown timer reset. Allowed Values: true false Multiple Tag Allowed: No Tag: ResetTriggerCooldownNames Tag Format: [ResetTriggerCooldownNames:Value] Description: This tag specifies a name of a Trigger Profile that should have its cooldown timer reset. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: EnableTriggers Tag Format: [EnableTriggers:Value] Description: This tag specifies if one or more Trigger Profiles should be enabled (ie, UseTrigger set to true). Allowed Values: true false Multiple Tag Allowed: No Tag: EnableTriggerNames Tag Format: [EnableTriggerNames:Value] Description: This tag specifies a name of a Trigger Profile that should have be Enabled. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: DisableTriggers Tag Format: [DisableTriggers:Value] Description: This tag specifies if one or more Trigger Profiles should be disabled (ie, UseTrigger set to false). Allowed Values: true false Multiple Tag Allowed: No Tag: DisableTriggerNames Tag Format: [DisableTriggerNames:Value] Description: This tag specifies a name of a Trigger Profile that should have be Disabled. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ManuallyActivateTrigger Tag Format: [ManuallyActivateTrigger:Value] Description: This tag specifies if one or more Trigger Profiles should be manually triggered. Allowed Values: true false Multiple Tag Allowed: No Tag: ManuallyActivatedTriggerNames Tag Format: [ManuallyActivatedTriggerNames:Value] Description: This tag specifies a name of a Trigger Profile that should be Manually Triggered. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: ForceManualTriggerActivation Tag Format: [ForceManualTriggerActivation:Value] Description: This tag specifies if manually activated triggers should be forcibly activated from the action, regardless of their conditions, cooldowns, etc. Allowed Values: true false Multiple Tag Allowed: No","title":"Trigger"},{"location":"Action/#variables","text":"This section contains actions that change local or global variables that can be used by the behavior or spawner. Tag: SetBooleansTrue Tag Format: [SetBooleansTrue:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to true within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with the true value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetBooleansFalse Tag Format: [SetBooleansFalse:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to false within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with the false value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: IncreaseCounters Tag Format: [IncreaseCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to increase by 1 within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with a 1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: DecreaseCounters Tag Format: [DecreaseCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to decrease by 1 within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with a -1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetCounters Tag Format: [SetCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a specific value within the behavior. If a provided name does not exist in the behavior, it will be created and saved with the provided value. Ensure you also provide the value you want to set the variable to using the SetCountersValues tag Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetCountersValues Tag Format: [SetCountersValues:Value] Description: This tag specifies the value of an Integer Variable within the behavior. Ensure you also provide the name of the variable you want to set the value of using the SetCounters tag. Allowed Values: Any Integer Value Multiple Tag Allowed: Yes Tag: ResetCounters Tag Format: [ResetCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a value of 0 within the Behavior Profile. If a provided name does not exist in the Behavior Profile, it will be created and saved with a 0 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetSandboxBooleansTrue Tag Format: [SetSandboxBooleansTrue:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to true within the Save File. If a provided name does not exist in the Save File, it will be created and saved with the true value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetSandboxBooleansFalse Tag Format: [SetSandboxBooleansFalse:Value] Description: This tag specifies a name of a Boolean Variable that you want to set to false within the Save File. If a provided name does not exist in the Save File, it will be created and saved with the false value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: IncreaseSandboxCounters Tag Format: [IncreaseSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to increase by 1 within the Save File. If a provided name does not exist in the Save File, it will be created and saved with a 1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: IncreaseSandboxCountersAmount Tag Format: [IncreaseSandboxCountersAmount:Value] Description: This tag specifies the amount that all sandbox counters will be increased by if also using IncreaseSandboxCounters tags. Allowed Values: Any Integer Multiple Tag Allowed: No Tag: DecreaseSandboxCounters Tag Format: [DecreaseSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to decrease by 1 within the Save File. If a provided name does not exist in the Save File, it will be created and saved with a -1 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: DecreaseSandboxCountersAmount Tag Format: [DecreaseSandboxCountersAmount:Value] Description: This tag specifies the amount that all sandbox counters will be decreased by if also using DecreaseSandboxCounters tags. Allowed Values: Any Integer Multiple Tag Allowed: No Tag: SetSandboxCounters Tag Format: [SetSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a specific value within the Save File. If a provided name does not exist in the Save File, it will be created and saved with the provided value. Ensure you also provide the value you want to set the variable to using the SetSandboxCounters tag Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: SetSandboxCountersValues Tag Format: [SetSandboxCountersValues:Value] Description: This tag specifies the value of an Integer Variable within the Save File. Ensure you also provide the name of the variable you want to set the value of using the SetSandboxCounters tag. Allowed Values: Any Integer Value Multiple Tag Allowed: Yes Tag: ResetSandboxCounters Tag Format: [ResetSandboxCounters:Value] Description: This tag specifies a name of an Integer Variable that you want to set to a value of 0 within the Save File. If a provided name does not exist in the Save File, it will be created and saved with a 0 value Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: AddCustomDataToBlocks Tag Format: [AddCustomDataToBlocks:Value] Description: This tag specifies if one or more block should have their CustomData set to a specified value using a TextTemplate xml file. Allowed Values: true false Multiple Tag Allowed: No Tag: CustomDataBlockNames Tag Format: [CustomDataBlockNames:Value] Description: This tag specifies one or more Block Names of blocks that will have their CustomData changed if using the AddCustomDataToBlocks tag. This tag should be paired with the CustomDataFiles tag. Allowed Values: Any text/string excluding : , [ , ] Multiple Tag Allowed: Yes Tag: CustomDataFiles Tag Format: [CustomDataFiles:Value] Description: This tag specifies one or more TextTemplate files that will be used to set block custom data if using the AddCustomDataToBlocks tag. This tag should be paired with the CustomDataBlockNames tag. Allowed Values: TextTemplate file name eg: SomeTextTemplate.xml Multiple Tag Allowed: Yes","title":"Variables"},{"location":"Action/#zone","text":"This section contains actions that can change / manipulate Zones (formerly Territories) in the game world. Tag: ChangeZoneAtPosition Tag Format: [ChangeZoneAtPosition:Value] Description: This tag specifies if a zone at the NPCs current position should be manipulated. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneName Tag Format: [ZoneName:Value] Description: This tag specifies the name of the specific zone that should be manipulated. Allowed Values: Any Zone PublicName value Multiple Tag Allowed: No Tag: ZoneToggleActive Tag Format: [ZoneToggleActive:Value] Description: This tag specifies if the named zone in ZoneName should have its Active status changed. The NPC does not need to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneToggleActiveMode Tag Format: [ZoneToggleActive:Value] Description: This tag specifies what the Active status of a zone should be set to if using ZoneToggleActive . The NPC does not need to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneToggleActiveAtPosition Tag Format: [ZoneToggleActiveAtPosition:Value] Description: This tag specifies if the named zone in ZoneName should have its Active status changed. The NPC needs to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneToggleActiveAtPositionMode Tag Format: [ZoneToggleActiveAtPositionMode:Value] Description: This tag specifies what the Active status of a zone should be set to if using ZoneToggleActiveAtPosition . The NPC needs to be inside the zone for this to be functional. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneRadiusChangeType Tag Format: [ZoneRadiusChangeType:Value] Description: This tag specifies if the zone that the NPC is inside (also matching ZoneName ) should have its Radius changed. You can choose a modifier in this tag that will be used in combination with ZoneRadiusChangeType Allowed Values: None Set Add Subtract Multiply Divide Multiple Tag Allowed: No Tag: ZoneRadiusChangeAmount Tag Format: [ZoneRadiusChangeAmount:Value] Description: This tag specifies how much the zone radius will be changed if using the ZoneRadiusChangeType tag. Allowed Values: Any Number Multiple Tag Allowed: No Tag: ZoneCustomCounterChange Tag Format: [ZoneToggleActiveAtPositionMode:Value] Description: This tag specifies if the Custom Counters of the zone (at NPC position and matching ZoneName ) should be manipulated. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneCustomCounterChangeType Tag Format: [ZoneCustomCounterChangeType:Value] Description: This tag specifies how the value of a zone's Custom Counter will be changed. Allowed Values: None Set Add Subtract Multiply Divide Multiple Tag Allowed: Yes Tag: ZoneCustomCounterChangeName Tag Format: [ZoneCustomCounterChangeName:Value] Description: This tag specifies the name of the zone's Custom Counter that will be changed. Allowed Values: Any Counter Name Multiple Tag Allowed: Yes Tag: ZoneCustomCounterChangeAmount Tag Format: [ZoneCustomCounterChangeAmount:Value] Description: This tag specifies the amount that the counter specified by ZoneCustomCounterChangeName will be changed. Allowed Values: Any Integer Multiple Tag Allowed: Yes Tag: ZoneCustomBoolChange Tag Format: [ZoneCustomBoolChange:Value] Description: This tag specifies if the Custom Bools of the zone (at NPC position and matching ZoneName ) should be manipulated. Allowed Values: true false Multiple Tag Allowed: No Tag: ZoneCustomBoolChangeName Tag Format: [ZoneCustomBoolChangeName:Value] Description: This tag specifies the name of the zone's Custom Bool that will be changed. Allowed Values: Any Bool Name Multiple Tag Allowed: Yes Tag: ZoneCustomBoolChangeValue Tag Format: [ZoneCustomBoolChangeValue:Value] Description: This tag specifies the value that the bool specified by ZoneCustomBoolChangeName will be changed. Allowed Values: true false Multiple Tag Allowed: Yes","title":"Zone"},{"location":"AdminConfig_AdminDebugOptions/","text":"AdminConfig_AdminDebugOptions.md These commands can be used to force spawn random or specific spawn groups, enable debug mode, get data on loaded spawngroups / active players / active NPCs / etc, and much more. These are chat commands only, so there are no accompanying XML configs. Here is a list of command categories: BehaviorDebug Debug Info Spawn SpawnDebug BehaviorDebug Setting: Enable or Disable Behavior Logging XML: N/A Chat Command: /MES.BehaviorDebug.Value1.Value2 Description: This chat command allows you to enable various forms of logging for Behavior Related events. This can help you troubleshoot issues. Allowed Value1: Action AutoPilot BehaviorMode BehaviorSetup BehaviorSpecific Chat Command Condition Collision Dev Error GameLog (enable this to write enabled events to game log) General Owner Settings Spawn Startup TargetAcquisition TargetEvaluation Thrust Trigger Weapon Target Allowed Value2: true false Debug Setting: Change Bool XML: N/A Chat Command: /MES.Debug.ChangeBool.Value1.Value2 Description: This chat command allows you to manually set or adjust the value of a Sandbox Boolean. Allowed Value1 Name of Sandbox Boolean Allowed Value2 Any Bool Value ( true / false ) you want to Set the Sandbox Boolean to. Setting: Change Counter XML: N/A Chat Command: /MES.Debug.ChangeCounter.Value1.Value2 Description: This chat command allows you to manually set or adjust the value of a Sandbox Counter. Allowed Value1 Name of Sandbox Counter Allowed Value2 Any Integer Value you want to Set the Sandbox Counter to. Setting: Clear All Timeouts XML: N/A Chat Command: /MES.Debug.ClearAllTimeouts Description: This chat command will remove all Timeout Spawning Restrictions in the game world. Setting: Clear Ship Inventory XML: N/A Chat Command: /MES.Debug.ClearShipInventory Description: This chat command will clear all inventory blocks of the grid the player is currently sitting on. Setting: Clear Static Encounters XML: N/A Chat Command: /MES.Debug.ClearStaticEncounters Description: This chat command will clear all Static Encounters from the Spawner. This is useful for debugging in case you need to regenerate the static encounters at start up. It is usually recommended to Save/Reload after using this command. Setting: Clear Timeouts At Position XML: N/A Chat Command: /MES.Debug.ClearTimeoutsAtPosition Description: This chat command will remove all Timeout Spawning Restrictions at the player's current position. Setting: Clear Unique Encounters XML: N/A Chat Command: /MES.Debug.ClearUniqueEncounters Description: This chat command will clear any Unique Encounters that have spawned, allowing them to spawn again. Setting: Create Known Player Location XML: N/A Chat Command 1: /MES.Debug.CreateKPL.FactionValue Chat Command 2: /MES.Debug.CreateKPL.FactionValue.RadiusValue Chat Command 3: /MES.Debug.CreateKPL.FactionValue.RadiusValue.DurationValue Chat Command 4: /MES.Debug.CreateKPL.FactionValue.RadiusValue.DurationValue.MaxEncounterValue Description: This chat command allows you to create a Known Player Location at your current position. Allowed Value for FactionValue : Any Faction Tag Allowed Value for RadiusValue : Any Number Greater Than 0 Allowed Value for DurationValue : Any Integer Greater Than 0 Allowed Value for MaxEncounterValue : Any Integer Greater Than 0, or -1 for Unused Setting: Create Planet XML: N/A Chat Command 1: /MES.Debug.CreatePlanet.PlanetName.PlanetSize Description: This chat command allows you to spawn a custom sized planet, at sizes smaller than 19000m or greater than 120000m. Allowed Value for PlanetName : Any Planet Name Allowed Value for PlanetSize : Any Number Greater Than 100 Setting: Draw Paths XML: N/A Chat Command 1: /MES.Debug.DrawPaths Description: This chat command allows you to enable/disable (this command toggles) debug draw on behavior autopilot. This only works while you are offline or local host, it will not work on a dedicated server. While autopilot is active, several lines may be drawn from ships/drones using MES Behavior Autopilot. - Green: Current Waypoint - Red: Collision - Orange: Evasion - Cyan: Offset Waypoint - Magenta: Planetary Pathing - Yellow: Weapon Prediction Waypoint If using a behavior that has water pathing, a Green path may be drawn showing the various water nodes it is currently following. Setting: Force Combat Phase XML: N/A Chat Command 1: /MES.Debug.ForceCombatPhase Description: This chat command allows you to immediately enable Combat Phase in the current world. Setting: Force Peace Phase XML: N/A Chat Command 1: /MES.Debug.ForcePeacePhase Description: This chat command allows you to immediately enable Peace Phase in the current world (stops the current Combat Phase). Setting: Process Prefabs XML: N/A Chat Command: /MES.Debug.ProcessPrefabs.Value Description: This chat command will spawn all grids from a provided mod, and will collect data while running some tests on its performance. The results of this test are then printed to the user clipboard in a CSV format (can paste into spreadsheet apps such as excel, google sheets, etc). It is important that you only use this command on an empty world you only intend to use for this testing, because all grids are deleted between spawns of prefabs. Allowed Value: Partial or Full string of a Mod's Name (eg: Corruption ) Setting: Remove All Npcs XML: N/A Chat Command: /MES.Debug.RemoveAllNpcs Description: This chat command will remove all grids that have NPC Ownership. Any grids with Player Ownership or No Ownership will be ignored. Setting: Reset Reputation XML: N/A Chat Command: /MES.Debug.ResetReputation.Value Description: This chat command allows you to reset all players reputation with a specified faction. Allowed Value: Any NPC Faction Tag Setting: Reset Zones XML: N/A Chat Command: /MES.Debug.ResetZones Description: This chat command allows you to reset all zones currently loaded in the game world and reload them using the profiles currently present in the mod loadout. Setting: Unlock Admin Blocks XML: N/A Chat Command: /MES.Debug.UnlockAdminBlocks Description: This chat command allows you to unlock all MES Special Blocks (eg: AI Control Module, Inhibitors, etc). This only allows the player that entered the command to use the blocks, and only for the duration of the session. Info Setting: Get Active NPCs XML: N/A Chat Command: /MES.Info.GetActiveNpcs Description: This chat command will gather a list of all Active NPC grids identified by the mod and save it to your clipboard. Setting: Get All Profiles XML: N/A Chat Command: /MES.Info.GetAllProfiles Description: This chat command will gather a list of all MES Profiles and save it to your clipboard. Setting: Get Block Definitions XML: N/A Chat Command: /MES.Info.GetBlockDefinitions Description: This chat command will gather a list of all currently loaded block definition data and save it to your clipboard. Setting: Get Block Mass Data XML: N/A Chat Command: /MES.Info.GetBlockMassData Description: This chat command will gather a list of all Blocks in the game and how much they weigh. Setting: Get Colors From Grid XML: N/A Chat Command: /MES.Info.GetColorsFromGrid Description: This chat command will gather a list of all colors from blocks on a particular grid and save it to your clipboard. You must be sitting in a seat of the grid you want to collect data from. Setting: Get Diagnostics XML: N/A Chat Command: /MES.Info.GetDiagnostics Description: This chat command will gather a collection of information about the current session that may be related to the operation of the mod and save it to the Clipboard. Setting: Get Eligible Spawns At Position XML: N/A Chat Command: /MES.Info.GetEligibleSpawnsAtPosition /MES.GESAP Description: This chat command will gather a list of all Spawn Groups that are eligible to spawn at your position and saves it to your clipboard. Setting: Get Grid Behavior XML: N/A Chat Command: /MES.Info.GetGridBehavior Description: This chat command will collect behavior information from a grid your player/spectator camera is pointing at and will return it to your Clipboard. Setting: Get Grid Data XML: N/A Chat Command: /MES.Info.GetGridData Description: This chat command will collect data about a grid that was spawned as an NPC from MES. The info in this command is already present in the /MES.Info.GetGridBehavior command, so this is intended to be used if the grid has no behavior. Setting: Get Grid Matrix XML: N/A Chat Command: /MES.Info.GetGridMatrix Description: This chat command will collect position information from a grid your player/spectator camera is pointing at and will return it to your Clipboard. The command will also pre-format some of this information into tags that can be used to configure Static Encounters. Setting: Get Item Mass Data XML: N/A Chat Command: /MES.Info.GetItemMassData Description: This chat command will gather a list of all Items in the game and how much they weigh. Setting: Get Logging XML: N/A Chat Command (Regular): /MES.Info.GetLogging.Value1.Value2 Chat Command (SpawnDebug): /MES.IGLSD.Value2 Chat Command (BehaviorDebug): /MES.IGLBD.Value2 Description: This chat command will copy logged data from a particular logging type and save it to your clipboard. Value1 is replaced with BehaviorDebug or SpawnDebug . Value2 is replaced with any of the logging types from the respective logging types in Value1 . Setting: Get Players XML: N/A Chat Command: /MES.Info.GetPlayers Description: This chat command will collect data on all players currently in the session and save it to your clipboard. Setting: Get Threat Score XML: N/A Chat Command 1: /MES.Info.GetThreatScore /MES.GTS Chat Command 2: /MES.Info.GetThreatScore.Value /MES.GTS.Value Description: This chat command will get the current Threat Score near your position and save it to your clipboard. By default, a range of 5000 meters is checked. You can provide a custom distance by replacing the Value text in Chat Command 2 Spawn Setting: Spawn Space Cargo Ship XML: N/A Chat Command 1: /MES.Spawn.SpaceCargoShip /MES.SSCS Chat Command 2: /MES.Spawn.SpaceCargoShip.Value /MES.SSCS.Value Description: This chat command allows you to spawn a Space Cargo Ship near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Random Encounter XML: N/A Chat Command 1: /MES.Spawn.RandomEncounter /MES.SRE Chat Command 2: /MES.Spawn.RandomEncounter.Value /MES.SRE.Value Description: This chat command allows you to spawn a Random Encounter near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Boss Encounter XML: N/A Chat Command 1: /MES.Spawn.BossEncounter /MES.SBE Chat Command 2: /MES.Spawn.BossEncounter.Value /MES.SBE.Value Description: This chat command allows you to spawn a Boss Encounter near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Planetary Cargo Ship XML: N/A Chat Command 1: /MES.Spawn.PlanetaryCargoShip /MES.SPCS Chat Command 2: /MES.Spawn.PlanetaryCargoShip.Value /MES.SPCS.Value Description: This chat command allows you to spawn a Planetary Cargo Ship near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Planetary Installation XML: N/A Chat Command 1: /MES.Spawn.PlanetaryInstallation /MES.SPI Chat Command 2: /MES.Spawn.PlanetaryInstallation.Value /MES.SPI.Value Description: This chat command allows you to spawn a Planetary Installation near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Drone Encounter XML: N/A Chat Command 1: /MES.Spawn.DroneEncounter /MES.SDE Chat Command 2: /MES.Spawn.DroneEncounter.Value /MES.SDE.Value Description: This chat command allows you to spawn a Drone Encounter near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Prefab XML: N/A Chat Command: /MES.Spawn.Prefab.Value1 Description: This chat command allows you to spawn a Prefab near your player character. This spawn does not use SpawnGroup rules, it only spawns a grid. The spawned grid will also spawn with Player Ownership. Allowed Value Value1 Any Prefab SubtypeId Setting: Spawn Prefab Station XML: N/A Chat Command: /MES.Spawn.PrefabStation.Value1.Value2 Description: This chat command allows you to spawn a Prefab Station near the terrain of your player character. This spawn does not use SpawnGroup rules, it only spawns a grid. The spawned grid will also spawn with Player Ownership. Using Value1 , you can specify a Height Offset from the surface, which allows you to test/debug which height is needed for setting up a Planetary Installation height offset. Allowed Value Value1 Any Positive/Negative Integer Allowed Value Value2 Any Prefab SubtypeId Setting: Spawn Creature XML: N/A Chat Command 1: /MES.Spawn.Creature /MES.SC Chat Command 2: /MES.Spawn.Creature.Value /MES.SC.Value Description: This chat command allows you to spawn a Creature/Bot near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Activate Wave Spawner XML: N/A Chat Command 1: /MES.Spawn.WaveSpawner.Space Chat Command 2: /MES.Spawn.WaveSpawner.Planet Chat Command 3: /MES.Spawn.WaveSpawner.Creature Description: This chat command allows you to immediately start a Wave Spawning Event for all players in the current session, regardless of whether or not the specific Wave Spawner is enabled in the world. Depending on the chat command you use, you can start Wave Spawning events for Space Cargo Ships, Planetary Cargo Ships, or Creatures/Bots. These events will honor whatever Wave Spawner settings are currently in place in your config files. Setting: Force Spawn Timer XML: N/A Chat Command 1: /MES.Spawn.ForceSpawnTimer.Value Description: This chat command allows you to immediately finish the internal timer for your player and a particular spawning type. This allows you to quickly test / simulate a spawn as it would occur naturally, without having to wait as long. Value can be replaced with any of the following: SpaceCargoShip RandomEncounter PlanetaryCargoShip PlanetaryInstallation BossEncounter DroneEncounter Creature SpawnDebug Setting: Enable or Disable Spawn Logging XML: N/A Chat Command: /MES.SpawnDebug.Value1.Value2 Description: This chat command allows you to enable various forms of logging for Spawner Related events. This can help you troubleshoot issues. Allowed Value1: API BlockLogic CleanUp Dev Entity Error GameLog Manipulation Pathing PostSpawn Settings SpawnGroup Spawning SpawnRecord Startup Zone Allowed Value2: true false","title":"AdminConfig_AdminDebugOptions.md"},{"location":"AdminConfig_AdminDebugOptions/#adminconfig_admindebugoptionsmd","text":"These commands can be used to force spawn random or specific spawn groups, enable debug mode, get data on loaded spawngroups / active players / active NPCs / etc, and much more. These are chat commands only, so there are no accompanying XML configs. Here is a list of command categories: BehaviorDebug Debug Info Spawn SpawnDebug","title":"AdminConfig_AdminDebugOptions.md"},{"location":"AdminConfig_AdminDebugOptions/#behaviordebug","text":"Setting: Enable or Disable Behavior Logging XML: N/A Chat Command: /MES.BehaviorDebug.Value1.Value2 Description: This chat command allows you to enable various forms of logging for Behavior Related events. This can help you troubleshoot issues. Allowed Value1: Action AutoPilot BehaviorMode BehaviorSetup BehaviorSpecific Chat Command Condition Collision Dev Error GameLog (enable this to write enabled events to game log) General Owner Settings Spawn Startup TargetAcquisition TargetEvaluation Thrust Trigger Weapon Target Allowed Value2: true false","title":"BehaviorDebug"},{"location":"AdminConfig_AdminDebugOptions/#debug","text":"Setting: Change Bool XML: N/A Chat Command: /MES.Debug.ChangeBool.Value1.Value2 Description: This chat command allows you to manually set or adjust the value of a Sandbox Boolean. Allowed Value1 Name of Sandbox Boolean Allowed Value2 Any Bool Value ( true / false ) you want to Set the Sandbox Boolean to. Setting: Change Counter XML: N/A Chat Command: /MES.Debug.ChangeCounter.Value1.Value2 Description: This chat command allows you to manually set or adjust the value of a Sandbox Counter. Allowed Value1 Name of Sandbox Counter Allowed Value2 Any Integer Value you want to Set the Sandbox Counter to. Setting: Clear All Timeouts XML: N/A Chat Command: /MES.Debug.ClearAllTimeouts Description: This chat command will remove all Timeout Spawning Restrictions in the game world. Setting: Clear Ship Inventory XML: N/A Chat Command: /MES.Debug.ClearShipInventory Description: This chat command will clear all inventory blocks of the grid the player is currently sitting on. Setting: Clear Static Encounters XML: N/A Chat Command: /MES.Debug.ClearStaticEncounters Description: This chat command will clear all Static Encounters from the Spawner. This is useful for debugging in case you need to regenerate the static encounters at start up. It is usually recommended to Save/Reload after using this command. Setting: Clear Timeouts At Position XML: N/A Chat Command: /MES.Debug.ClearTimeoutsAtPosition Description: This chat command will remove all Timeout Spawning Restrictions at the player's current position. Setting: Clear Unique Encounters XML: N/A Chat Command: /MES.Debug.ClearUniqueEncounters Description: This chat command will clear any Unique Encounters that have spawned, allowing them to spawn again. Setting: Create Known Player Location XML: N/A Chat Command 1: /MES.Debug.CreateKPL.FactionValue Chat Command 2: /MES.Debug.CreateKPL.FactionValue.RadiusValue Chat Command 3: /MES.Debug.CreateKPL.FactionValue.RadiusValue.DurationValue Chat Command 4: /MES.Debug.CreateKPL.FactionValue.RadiusValue.DurationValue.MaxEncounterValue Description: This chat command allows you to create a Known Player Location at your current position. Allowed Value for FactionValue : Any Faction Tag Allowed Value for RadiusValue : Any Number Greater Than 0 Allowed Value for DurationValue : Any Integer Greater Than 0 Allowed Value for MaxEncounterValue : Any Integer Greater Than 0, or -1 for Unused Setting: Create Planet XML: N/A Chat Command 1: /MES.Debug.CreatePlanet.PlanetName.PlanetSize Description: This chat command allows you to spawn a custom sized planet, at sizes smaller than 19000m or greater than 120000m. Allowed Value for PlanetName : Any Planet Name Allowed Value for PlanetSize : Any Number Greater Than 100 Setting: Draw Paths XML: N/A Chat Command 1: /MES.Debug.DrawPaths Description: This chat command allows you to enable/disable (this command toggles) debug draw on behavior autopilot. This only works while you are offline or local host, it will not work on a dedicated server. While autopilot is active, several lines may be drawn from ships/drones using MES Behavior Autopilot. - Green: Current Waypoint - Red: Collision - Orange: Evasion - Cyan: Offset Waypoint - Magenta: Planetary Pathing - Yellow: Weapon Prediction Waypoint If using a behavior that has water pathing, a Green path may be drawn showing the various water nodes it is currently following. Setting: Force Combat Phase XML: N/A Chat Command 1: /MES.Debug.ForceCombatPhase Description: This chat command allows you to immediately enable Combat Phase in the current world. Setting: Force Peace Phase XML: N/A Chat Command 1: /MES.Debug.ForcePeacePhase Description: This chat command allows you to immediately enable Peace Phase in the current world (stops the current Combat Phase). Setting: Process Prefabs XML: N/A Chat Command: /MES.Debug.ProcessPrefabs.Value Description: This chat command will spawn all grids from a provided mod, and will collect data while running some tests on its performance. The results of this test are then printed to the user clipboard in a CSV format (can paste into spreadsheet apps such as excel, google sheets, etc). It is important that you only use this command on an empty world you only intend to use for this testing, because all grids are deleted between spawns of prefabs. Allowed Value: Partial or Full string of a Mod's Name (eg: Corruption ) Setting: Remove All Npcs XML: N/A Chat Command: /MES.Debug.RemoveAllNpcs Description: This chat command will remove all grids that have NPC Ownership. Any grids with Player Ownership or No Ownership will be ignored. Setting: Reset Reputation XML: N/A Chat Command: /MES.Debug.ResetReputation.Value Description: This chat command allows you to reset all players reputation with a specified faction. Allowed Value: Any NPC Faction Tag Setting: Reset Zones XML: N/A Chat Command: /MES.Debug.ResetZones Description: This chat command allows you to reset all zones currently loaded in the game world and reload them using the profiles currently present in the mod loadout. Setting: Unlock Admin Blocks XML: N/A Chat Command: /MES.Debug.UnlockAdminBlocks Description: This chat command allows you to unlock all MES Special Blocks (eg: AI Control Module, Inhibitors, etc). This only allows the player that entered the command to use the blocks, and only for the duration of the session.","title":"Debug"},{"location":"AdminConfig_AdminDebugOptions/#info","text":"Setting: Get Active NPCs XML: N/A Chat Command: /MES.Info.GetActiveNpcs Description: This chat command will gather a list of all Active NPC grids identified by the mod and save it to your clipboard. Setting: Get All Profiles XML: N/A Chat Command: /MES.Info.GetAllProfiles Description: This chat command will gather a list of all MES Profiles and save it to your clipboard. Setting: Get Block Definitions XML: N/A Chat Command: /MES.Info.GetBlockDefinitions Description: This chat command will gather a list of all currently loaded block definition data and save it to your clipboard. Setting: Get Block Mass Data XML: N/A Chat Command: /MES.Info.GetBlockMassData Description: This chat command will gather a list of all Blocks in the game and how much they weigh. Setting: Get Colors From Grid XML: N/A Chat Command: /MES.Info.GetColorsFromGrid Description: This chat command will gather a list of all colors from blocks on a particular grid and save it to your clipboard. You must be sitting in a seat of the grid you want to collect data from. Setting: Get Diagnostics XML: N/A Chat Command: /MES.Info.GetDiagnostics Description: This chat command will gather a collection of information about the current session that may be related to the operation of the mod and save it to the Clipboard. Setting: Get Eligible Spawns At Position XML: N/A Chat Command: /MES.Info.GetEligibleSpawnsAtPosition /MES.GESAP Description: This chat command will gather a list of all Spawn Groups that are eligible to spawn at your position and saves it to your clipboard. Setting: Get Grid Behavior XML: N/A Chat Command: /MES.Info.GetGridBehavior Description: This chat command will collect behavior information from a grid your player/spectator camera is pointing at and will return it to your Clipboard. Setting: Get Grid Data XML: N/A Chat Command: /MES.Info.GetGridData Description: This chat command will collect data about a grid that was spawned as an NPC from MES. The info in this command is already present in the /MES.Info.GetGridBehavior command, so this is intended to be used if the grid has no behavior. Setting: Get Grid Matrix XML: N/A Chat Command: /MES.Info.GetGridMatrix Description: This chat command will collect position information from a grid your player/spectator camera is pointing at and will return it to your Clipboard. The command will also pre-format some of this information into tags that can be used to configure Static Encounters. Setting: Get Item Mass Data XML: N/A Chat Command: /MES.Info.GetItemMassData Description: This chat command will gather a list of all Items in the game and how much they weigh. Setting: Get Logging XML: N/A Chat Command (Regular): /MES.Info.GetLogging.Value1.Value2 Chat Command (SpawnDebug): /MES.IGLSD.Value2 Chat Command (BehaviorDebug): /MES.IGLBD.Value2 Description: This chat command will copy logged data from a particular logging type and save it to your clipboard. Value1 is replaced with BehaviorDebug or SpawnDebug . Value2 is replaced with any of the logging types from the respective logging types in Value1 . Setting: Get Players XML: N/A Chat Command: /MES.Info.GetPlayers Description: This chat command will collect data on all players currently in the session and save it to your clipboard. Setting: Get Threat Score XML: N/A Chat Command 1: /MES.Info.GetThreatScore /MES.GTS Chat Command 2: /MES.Info.GetThreatScore.Value /MES.GTS.Value Description: This chat command will get the current Threat Score near your position and save it to your clipboard. By default, a range of 5000 meters is checked. You can provide a custom distance by replacing the Value text in Chat Command 2","title":"Info"},{"location":"AdminConfig_AdminDebugOptions/#spawn","text":"Setting: Spawn Space Cargo Ship XML: N/A Chat Command 1: /MES.Spawn.SpaceCargoShip /MES.SSCS Chat Command 2: /MES.Spawn.SpaceCargoShip.Value /MES.SSCS.Value Description: This chat command allows you to spawn a Space Cargo Ship near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Random Encounter XML: N/A Chat Command 1: /MES.Spawn.RandomEncounter /MES.SRE Chat Command 2: /MES.Spawn.RandomEncounter.Value /MES.SRE.Value Description: This chat command allows you to spawn a Random Encounter near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Boss Encounter XML: N/A Chat Command 1: /MES.Spawn.BossEncounter /MES.SBE Chat Command 2: /MES.Spawn.BossEncounter.Value /MES.SBE.Value Description: This chat command allows you to spawn a Boss Encounter near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Planetary Cargo Ship XML: N/A Chat Command 1: /MES.Spawn.PlanetaryCargoShip /MES.SPCS Chat Command 2: /MES.Spawn.PlanetaryCargoShip.Value /MES.SPCS.Value Description: This chat command allows you to spawn a Planetary Cargo Ship near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Planetary Installation XML: N/A Chat Command 1: /MES.Spawn.PlanetaryInstallation /MES.SPI Chat Command 2: /MES.Spawn.PlanetaryInstallation.Value /MES.SPI.Value Description: This chat command allows you to spawn a Planetary Installation near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Drone Encounter XML: N/A Chat Command 1: /MES.Spawn.DroneEncounter /MES.SDE Chat Command 2: /MES.Spawn.DroneEncounter.Value /MES.SDE.Value Description: This chat command allows you to spawn a Drone Encounter near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Spawn Prefab XML: N/A Chat Command: /MES.Spawn.Prefab.Value1 Description: This chat command allows you to spawn a Prefab near your player character. This spawn does not use SpawnGroup rules, it only spawns a grid. The spawned grid will also spawn with Player Ownership. Allowed Value Value1 Any Prefab SubtypeId Setting: Spawn Prefab Station XML: N/A Chat Command: /MES.Spawn.PrefabStation.Value1.Value2 Description: This chat command allows you to spawn a Prefab Station near the terrain of your player character. This spawn does not use SpawnGroup rules, it only spawns a grid. The spawned grid will also spawn with Player Ownership. Using Value1 , you can specify a Height Offset from the surface, which allows you to test/debug which height is needed for setting up a Planetary Installation height offset. Allowed Value Value1 Any Positive/Negative Integer Allowed Value Value2 Any Prefab SubtypeId Setting: Spawn Creature XML: N/A Chat Command 1: /MES.Spawn.Creature /MES.SC Chat Command 2: /MES.Spawn.Creature.Value /MES.SC.Value Description: This chat command allows you to spawn a Creature/Bot near your player character. This spawn will obey the rules you have set for encounters to appear in that area. Chat Command 1 will spawn a random group from whatever groups are available. Chat Command 2 allows you to specify the Spawn Group you want to spawn, just replace Value with the SubtypeId of the Spawn Group you want to spawn. Setting: Activate Wave Spawner XML: N/A Chat Command 1: /MES.Spawn.WaveSpawner.Space Chat Command 2: /MES.Spawn.WaveSpawner.Planet Chat Command 3: /MES.Spawn.WaveSpawner.Creature Description: This chat command allows you to immediately start a Wave Spawning Event for all players in the current session, regardless of whether or not the specific Wave Spawner is enabled in the world. Depending on the chat command you use, you can start Wave Spawning events for Space Cargo Ships, Planetary Cargo Ships, or Creatures/Bots. These events will honor whatever Wave Spawner settings are currently in place in your config files. Setting: Force Spawn Timer XML: N/A Chat Command 1: /MES.Spawn.ForceSpawnTimer.Value Description: This chat command allows you to immediately finish the internal timer for your player and a particular spawning type. This allows you to quickly test / simulate a spawn as it would occur naturally, without having to wait as long. Value can be replaced with any of the following: SpaceCargoShip RandomEncounter PlanetaryCargoShip PlanetaryInstallation BossEncounter DroneEncounter Creature","title":"Spawn"},{"location":"AdminConfig_AdminDebugOptions/#spawndebug","text":"Setting: Enable or Disable Spawn Logging XML: N/A Chat Command: /MES.SpawnDebug.Value1.Value2 Description: This chat command allows you to enable various forms of logging for Spawner Related events. This can help you troubleshoot issues. Allowed Value1: API BlockLogic CleanUp Dev Entity Error GameLog Manipulation Pathing PostSpawn Settings SpawnGroup Spawning SpawnRecord Startup Zone Allowed Value2: true false","title":"SpawnDebug"},{"location":"AdminConfig_AiEnabled%20Bot%20Spawning/","text":"AdminConfig_AiEnabled Bot Spawning.md Bot Spawn Profiles in Modular Encounters Systems allow you to specify a set of rules for how a bot is configured before it is spawned by the AiEnabled mod. Here's an example of how a Bot Spawn Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleBotSpawnProfile</SubtypeId> </Id> <Description> [MES Bot Spawn] [BotType:Police_Bot] [BotDisplayName:Combat Bot] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are all of the eligible tags you can use in your Bot Spawn Profiles: Tag: BotType Tag Format: [BotType:Value] Description: This tag specifies the type of bot that will be spawned. Allowed Values: Any Character type (the Name field in the SBC, not the SubtypeId) Multiple Tag Allowed: No Tag: BotBehavior Tag Format: [BotBehavior:Value] Description: This tag specifies the behavior that the spawned bot will use. If this tag is not defined, then it will use the default behavior that AiEnabled would use when spawning a bot of the selected type. Allowed Values: Any AiEnabled Behavior Role Multiple Tag Allowed: No Tag: BotDisplayName Tag Format: [BotDisplayName:Value] Description: This tag specifies the Display Name of the spawned bot. Allowed Values: Any Name Multiple Tag Allowed: No Tag: Color Tag Format: [Color:Value] Description: Specifies the Color (RGB 0-255) of the spawned bot character. Allowed Values: Any Vector3 Value using this format {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: CanUseAirNodes Tag Format: [CanUseAirNodes:Value] Description: This tag allows you to specify if the bot is able to use Air Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSpaceNodes Tag Format: [CanUseSpaceNodes:Value] Description: This tag allows you to specify if the bot is able to use Space Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: UseGroundNodesFirst Tag Format: [UseGroundNodesFirst:Value] Description: This tag allows you to specify if the bot should try to use ground nodes before using air / space nodes. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseWaterNodes Tag Format: [CanUseWaterNodes:Value] Description: This tag allows you to specify if the bot is able to use water nodes (ie underwater via Water Mod) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: WaterNodesOnly Tag Format: [WaterNodesOnly:Value] Description: This tag allows you to specify if the bot should only use water nodes (ie underwater only bot) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseLadders Tag Format: [CanUseLadders:Value] Description: This tag allows you to specify if the bot is able to climb ladders Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSeats Tag Format: [CanUseSeats:Value] Description: This tag allows you to specify if the bot is able to sit on seating blocks Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: DespawnTicks Tag Format: [DespawnTicks:Value] Description: This tag allows you to specify if the bot should despawn after a set number of game ticks. If value is 0 , then no timer is used. Allowed Value(s): Any Integer Greater/Equal To 0 Default Value(s): 0 Multiple Tags Allowed: No Tag: DeathSound Tag Format: [DeathSound:Value] Description: This tag allows you to specify a custom sound effect that is used when the bot dies. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: AttackSounds Tag Format: [AttackSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot attacks. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: PainSounds Tag Format: [PainSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot takes damage. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: IdleSounds Tag Format: [IdleSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is idle. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: TauntSounds Tag Format: [TauntSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is chasing a target. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: EmoteActions Tag Format: [EmoteActions:Value] Description: This tag allows you to specify one or more emote that are used by nomad bots randomly. Allowed Value(s): Any Emote SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ShotDeviationAngle Tag Format: [ShotDeviationAngle:Value] Description: This tag allows you to specify the angle of deviation that is applied to gunfire from this bot. Allowed Value(s): Any Number Greater/Equal To `0' Default Value(s): 1.5 Multiple Tags Allowed: No Tag: LeadTargets Tag Format: [LeadTargets:Value] Description: This tag allows you to specify if bots should try to lead their target while shooting at them. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: ToolSubtypeId Tag Format: [ToolSubtypeId:Value] Description: This tag allows you to specify a custom tool/weapon for the bot to use. Allowed Value(s): Any Vanilla Tool SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: CanDamageGrids Tag Format: [CanDamageGrids:Value] Description: This tag allows you to specify if the bot is able to damage grids (ie target blocks). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: TargetPriorities Tag Format: [TargetPriorities:Value] Description: This tag allows you to specify one or more target priorities that the bot will use when attacking. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyCharacter IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes Tag: RepairPriorities Tag Format: [RepairPriorities:Value] Description: This tag allows you to specify one or more repair priorities that the bot will use when repairing. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes","title":"AdminConfig_AiEnabled Bot Spawning.md"},{"location":"AdminConfig_AiEnabled%20Bot%20Spawning/#adminconfig_aienabled-bot-spawningmd","text":"Bot Spawn Profiles in Modular Encounters Systems allow you to specify a set of rules for how a bot is configured before it is spawned by the AiEnabled mod. Here's an example of how a Bot Spawn Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleBotSpawnProfile</SubtypeId> </Id> <Description> [MES Bot Spawn] [BotType:Police_Bot] [BotDisplayName:Combat Bot] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are all of the eligible tags you can use in your Bot Spawn Profiles: Tag: BotType Tag Format: [BotType:Value] Description: This tag specifies the type of bot that will be spawned. Allowed Values: Any Character type (the Name field in the SBC, not the SubtypeId) Multiple Tag Allowed: No Tag: BotBehavior Tag Format: [BotBehavior:Value] Description: This tag specifies the behavior that the spawned bot will use. If this tag is not defined, then it will use the default behavior that AiEnabled would use when spawning a bot of the selected type. Allowed Values: Any AiEnabled Behavior Role Multiple Tag Allowed: No Tag: BotDisplayName Tag Format: [BotDisplayName:Value] Description: This tag specifies the Display Name of the spawned bot. Allowed Values: Any Name Multiple Tag Allowed: No Tag: Color Tag Format: [Color:Value] Description: Specifies the Color (RGB 0-255) of the spawned bot character. Allowed Values: Any Vector3 Value using this format {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: CanUseAirNodes Tag Format: [CanUseAirNodes:Value] Description: This tag allows you to specify if the bot is able to use Air Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSpaceNodes Tag Format: [CanUseSpaceNodes:Value] Description: This tag allows you to specify if the bot is able to use Space Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: UseGroundNodesFirst Tag Format: [UseGroundNodesFirst:Value] Description: This tag allows you to specify if the bot should try to use ground nodes before using air / space nodes. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseWaterNodes Tag Format: [CanUseWaterNodes:Value] Description: This tag allows you to specify if the bot is able to use water nodes (ie underwater via Water Mod) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: WaterNodesOnly Tag Format: [WaterNodesOnly:Value] Description: This tag allows you to specify if the bot should only use water nodes (ie underwater only bot) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseLadders Tag Format: [CanUseLadders:Value] Description: This tag allows you to specify if the bot is able to climb ladders Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSeats Tag Format: [CanUseSeats:Value] Description: This tag allows you to specify if the bot is able to sit on seating blocks Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: DespawnTicks Tag Format: [DespawnTicks:Value] Description: This tag allows you to specify if the bot should despawn after a set number of game ticks. If value is 0 , then no timer is used. Allowed Value(s): Any Integer Greater/Equal To 0 Default Value(s): 0 Multiple Tags Allowed: No Tag: DeathSound Tag Format: [DeathSound:Value] Description: This tag allows you to specify a custom sound effect that is used when the bot dies. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: AttackSounds Tag Format: [AttackSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot attacks. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: PainSounds Tag Format: [PainSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot takes damage. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: IdleSounds Tag Format: [IdleSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is idle. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: TauntSounds Tag Format: [TauntSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is chasing a target. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: EmoteActions Tag Format: [EmoteActions:Value] Description: This tag allows you to specify one or more emote that are used by nomad bots randomly. Allowed Value(s): Any Emote SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ShotDeviationAngle Tag Format: [ShotDeviationAngle:Value] Description: This tag allows you to specify the angle of deviation that is applied to gunfire from this bot. Allowed Value(s): Any Number Greater/Equal To `0' Default Value(s): 1.5 Multiple Tags Allowed: No Tag: LeadTargets Tag Format: [LeadTargets:Value] Description: This tag allows you to specify if bots should try to lead their target while shooting at them. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: ToolSubtypeId Tag Format: [ToolSubtypeId:Value] Description: This tag allows you to specify a custom tool/weapon for the bot to use. Allowed Value(s): Any Vanilla Tool SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: CanDamageGrids Tag Format: [CanDamageGrids:Value] Description: This tag allows you to specify if the bot is able to damage grids (ie target blocks). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: TargetPriorities Tag Format: [TargetPriorities:Value] Description: This tag allows you to specify one or more target priorities that the bot will use when attacking. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyCharacter IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes Tag: RepairPriorities Tag Format: [RepairPriorities:Value] Description: This tag allows you to specify one or more repair priorities that the bot will use when repairing. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes","title":"AdminConfig_AiEnabled Bot Spawning.md"},{"location":"AdminConfig_Boss%20Encounters/","text":"AdminConfig_Boss Encounters.md You can find the Boss Encounters Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-BossEncounters.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.BossEncounters.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: PlayerSpawnCooldown XML: <PlayerSpawnCooldown>Value</PlayerSpawnCooldown> Chat Command: /MES.Settings.BossEncounters.PlayerSpawnCooldown.Value Description: This setting allows you to specify the cooldown time (in seconds) after a Boss Encounter appears before another one can appear for the player. Value can be any integer number (should not be 0 or lower) Setting: SpawnTimerTrigger XML: <SpawnTimerTrigger>Value</SpawnTimerTrigger> Chat Command: /MES.Settings.BossEncounters.SpawnTimerTrigger.Value Description: This setting allows you to specify how often the script should measure the player's distance to see if they've travelled far enough to trigger a Random Encounter spawn. Value can be any integer number (should not be 0 or lower) Setting: SignalActiveTimer XML: <SignalActiveTimer>Value</SignalActiveTimer> Chat Command: /MES.Settings.BossEncounters.SignalActiveTimer.Value Description: This setting allows you to specify the amount of time (in seconds) that a Boss Encounter GPS Signal will stay active. Value can be any integer number (should not be lower than 0 ) Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.BossEncounters.MaxShipsPerArea.Value Description: This setting allows you to specify if there can should be a maximum amount of Boss Encounter grids near the player area. The AreaSize property below specifies the radius to check. Value can be true or false Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.BossEncounters.AreaSize.Value Description: This setting allows you to specify the area to check for existing Boss Encounters if MaxShipsPerArea is set to true . Value can be any number (should not be 0 or lower) Setting: TriggerDistance XML: <TriggerDistance>Value</TriggerDistance> Chat Command: /MES.Settings.BossEncounters.TriggerDistance.Value Description: This setting allows you to specify how far from the Boss Encounter GPS the player much be before it spawns the Encounter grid(s). Value can be any number higher than 0 Setting: PathCalculationAttempts XML: <PathCalculationAttempts>Value</PathCalculationAttempts> Chat Command: /MES.Settings.BossEncounters.PathCalculationAttempts.Value Description: This setting allows you to specify how many times the mod should attempt to spawn the encounter grid(s) if a valid path cannot be found. Value can be any integer number higher than 0 Setting: MinCoordsDistanceSpace XML: <MinCoordsDistanceSpace>Value</MinCoordsDistanceSpace> Chat Command: /MES.Settings.BossEncounters.MinCoordsDistanceSpace.Value Description: This setting allows you to specify the minimum distance from the player the Boss Encounter GPS will be created while in Space. Value can be any number (should be higher than 0 and lower than MaxCoordsDistanceSpace ) Setting: MaxCoordsDistanceSpace XML: <MaxCoordsDistanceSpace>Value</MaxCoordsDistanceSpace> Chat Command: /MES.Settings.BossEncounters.MaxCoordsDistanceSpace.Value Description: This setting allows you to specify the maximum distance from the player the Boss Encounter GPS will be created while in Space. Value can be any number (should be higher than 0 and higher than MinCoordsDistanceSpace ) Setting: MinCoordsDistancePlanet XML: <MinCoordsDistancePlanet>Value</MinCoordsDistancePlanet> Chat Command: /MES.Settings.BossEncounters.MinCoordsDistancePlanet.Value Description: This setting allows you to specify the minimum distance from the player the Boss Encounter GPS will be created while on a Planet. Value can be any number (should be higher than 0 and lower than MaxCoordsDistancePlanet ) Setting: MaxCoordsDistancePlanet XML: <MaxCoordsDistancePlanet>Value</MaxCoordsDistancePlanet> Chat Command: /MES.Settings.BossEncounters.MaxCoordsDistancePlanet.Value Description: This setting allows you to specify the maximum distance from the player the Boss Encounter GPS will be created while on a Planet. Value can be any number (should be higher than 0 and higher than MinCoordsDistancePlanet ) Setting: PlayersWithinDistance XML: <PlayersWithinDistance>Value</PlayersWithinDistance> Chat Command: /MES.Settings.BossEncounters.PlayersWithinDistance.Value Description: This setting allows you to specify the distance from where the Boss Encounter GPS is created that players will receive the GPS signal. Value can be any number higher than 0 Setting: MinPlanetAltitude XML: <MinPlanetAltitude>Value</MinPlanetAltitude> Chat Command: /MES.Settings.BossEncounters.MinPlanetAltitude.Value Description: This setting allows you to specify the minimum altitude that Boss Encounter GPS markers and grid(s) will appear from the planet surface (if encounter is Planetary). Value can be any number higher than 0 . Setting: MinSignalDistFromOtherEntities XML: <MinSignalDistFromOtherEntities>Value</MinSignalDistFromOtherEntities> Chat Command: /MES.Settings.BossEncounters.MinSignalDistFromOtherEntities.Value Description: This setting allows you to specify the minimum distance the Boss Encounter GPS signal will appear from other grid/character entities. Value can be set to any number higher than 0 Setting: MinSpawnDistFromCoords XML: <MinSpawnDistFromCoords>Value</MinSpawnDistFromCoords> Chat Command: /MES.Settings.BossEncounters.MinSpawnDistFromCoords.Value Description: This setting allows you to specify the minimum. distance from the Boss Encounter GPS signal that the Encounter grid(s) will appear. Value can be any number higher than 0 and lower than MaxSpawnDistFromCoords Setting: MaxSpawnDistFromCoords XML: <MaxSpawnDistFromCoords>Value</MaxSpawnDistFromCoords> Chat Command: /MES.Settings.BossEncounters.MaxSpawnDistFromCoords.Value Description: This setting allows you to specify the maximum. distance from the Boss Encounter GPS signal that the Encounter grid(s) will appear. Value can be any number higher than 0 and higher than MinSpawnDistFromCoords Setting: MinAirDensity XML: <MinAirDensity>Value</MinAirDensity> Chat Command: /MES.Settings.BossEncounters.MinAirDensity.Value Description: This setting allows you to specify the minimum air density that is required for a Boss Encounter Signal to appear (for planetary encounters). Value can be any number between 0 and 1 . Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.BossEncounters.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.BossEncounters.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Boss Encounters if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.BossEncounters.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Boss Encounters.md"},{"location":"AdminConfig_Boss%20Encounters/#adminconfig_boss-encountersmd","text":"You can find the Boss Encounters Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-BossEncounters.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.BossEncounters.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: PlayerSpawnCooldown XML: <PlayerSpawnCooldown>Value</PlayerSpawnCooldown> Chat Command: /MES.Settings.BossEncounters.PlayerSpawnCooldown.Value Description: This setting allows you to specify the cooldown time (in seconds) after a Boss Encounter appears before another one can appear for the player. Value can be any integer number (should not be 0 or lower) Setting: SpawnTimerTrigger XML: <SpawnTimerTrigger>Value</SpawnTimerTrigger> Chat Command: /MES.Settings.BossEncounters.SpawnTimerTrigger.Value Description: This setting allows you to specify how often the script should measure the player's distance to see if they've travelled far enough to trigger a Random Encounter spawn. Value can be any integer number (should not be 0 or lower) Setting: SignalActiveTimer XML: <SignalActiveTimer>Value</SignalActiveTimer> Chat Command: /MES.Settings.BossEncounters.SignalActiveTimer.Value Description: This setting allows you to specify the amount of time (in seconds) that a Boss Encounter GPS Signal will stay active. Value can be any integer number (should not be lower than 0 ) Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.BossEncounters.MaxShipsPerArea.Value Description: This setting allows you to specify if there can should be a maximum amount of Boss Encounter grids near the player area. The AreaSize property below specifies the radius to check. Value can be true or false Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.BossEncounters.AreaSize.Value Description: This setting allows you to specify the area to check for existing Boss Encounters if MaxShipsPerArea is set to true . Value can be any number (should not be 0 or lower) Setting: TriggerDistance XML: <TriggerDistance>Value</TriggerDistance> Chat Command: /MES.Settings.BossEncounters.TriggerDistance.Value Description: This setting allows you to specify how far from the Boss Encounter GPS the player much be before it spawns the Encounter grid(s). Value can be any number higher than 0 Setting: PathCalculationAttempts XML: <PathCalculationAttempts>Value</PathCalculationAttempts> Chat Command: /MES.Settings.BossEncounters.PathCalculationAttempts.Value Description: This setting allows you to specify how many times the mod should attempt to spawn the encounter grid(s) if a valid path cannot be found. Value can be any integer number higher than 0 Setting: MinCoordsDistanceSpace XML: <MinCoordsDistanceSpace>Value</MinCoordsDistanceSpace> Chat Command: /MES.Settings.BossEncounters.MinCoordsDistanceSpace.Value Description: This setting allows you to specify the minimum distance from the player the Boss Encounter GPS will be created while in Space. Value can be any number (should be higher than 0 and lower than MaxCoordsDistanceSpace ) Setting: MaxCoordsDistanceSpace XML: <MaxCoordsDistanceSpace>Value</MaxCoordsDistanceSpace> Chat Command: /MES.Settings.BossEncounters.MaxCoordsDistanceSpace.Value Description: This setting allows you to specify the maximum distance from the player the Boss Encounter GPS will be created while in Space. Value can be any number (should be higher than 0 and higher than MinCoordsDistanceSpace ) Setting: MinCoordsDistancePlanet XML: <MinCoordsDistancePlanet>Value</MinCoordsDistancePlanet> Chat Command: /MES.Settings.BossEncounters.MinCoordsDistancePlanet.Value Description: This setting allows you to specify the minimum distance from the player the Boss Encounter GPS will be created while on a Planet. Value can be any number (should be higher than 0 and lower than MaxCoordsDistancePlanet ) Setting: MaxCoordsDistancePlanet XML: <MaxCoordsDistancePlanet>Value</MaxCoordsDistancePlanet> Chat Command: /MES.Settings.BossEncounters.MaxCoordsDistancePlanet.Value Description: This setting allows you to specify the maximum distance from the player the Boss Encounter GPS will be created while on a Planet. Value can be any number (should be higher than 0 and higher than MinCoordsDistancePlanet ) Setting: PlayersWithinDistance XML: <PlayersWithinDistance>Value</PlayersWithinDistance> Chat Command: /MES.Settings.BossEncounters.PlayersWithinDistance.Value Description: This setting allows you to specify the distance from where the Boss Encounter GPS is created that players will receive the GPS signal. Value can be any number higher than 0 Setting: MinPlanetAltitude XML: <MinPlanetAltitude>Value</MinPlanetAltitude> Chat Command: /MES.Settings.BossEncounters.MinPlanetAltitude.Value Description: This setting allows you to specify the minimum altitude that Boss Encounter GPS markers and grid(s) will appear from the planet surface (if encounter is Planetary). Value can be any number higher than 0 . Setting: MinSignalDistFromOtherEntities XML: <MinSignalDistFromOtherEntities>Value</MinSignalDistFromOtherEntities> Chat Command: /MES.Settings.BossEncounters.MinSignalDistFromOtherEntities.Value Description: This setting allows you to specify the minimum distance the Boss Encounter GPS signal will appear from other grid/character entities. Value can be set to any number higher than 0 Setting: MinSpawnDistFromCoords XML: <MinSpawnDistFromCoords>Value</MinSpawnDistFromCoords> Chat Command: /MES.Settings.BossEncounters.MinSpawnDistFromCoords.Value Description: This setting allows you to specify the minimum. distance from the Boss Encounter GPS signal that the Encounter grid(s) will appear. Value can be any number higher than 0 and lower than MaxSpawnDistFromCoords Setting: MaxSpawnDistFromCoords XML: <MaxSpawnDistFromCoords>Value</MaxSpawnDistFromCoords> Chat Command: /MES.Settings.BossEncounters.MaxSpawnDistFromCoords.Value Description: This setting allows you to specify the maximum. distance from the Boss Encounter GPS signal that the Encounter grid(s) will appear. Value can be any number higher than 0 and higher than MinSpawnDistFromCoords Setting: MinAirDensity XML: <MinAirDensity>Value</MinAirDensity> Chat Command: /MES.Settings.BossEncounters.MinAirDensity.Value Description: This setting allows you to specify the minimum air density that is required for a Boss Encounter Signal to appear (for planetary encounters). Value can be any number between 0 and 1 . Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.BossEncounters.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.BossEncounters.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Boss Encounters if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.BossEncounters.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Boss Encounters.md"},{"location":"AdminConfig_Clean-Up/","text":"AdminConfig_Clean-Up.md These settings can be found in each of the encounter types configuration files. The settings listed here control the circumstances for when grids of that type should be removed from the game by the clean-up process. For the chat commands, replace EncounterType with any of the types of encounter from the other configurations (eg: SpaceCargoShips , RandomEncounters , etc) The settings you can modify are listed below: Setting: UseCleanupSettings XML: <UseCleanupSettings>Value</UseCleanupSettings> Chat Command: /MES.Settings.EncounterType.UseCleanupSettings.Value Description: This setting allows you to specify if the clean-up process should include encounters from this configuration file type. Value can be true or false Setting: OnlyCleanNpcsFromMes XML: <OnlyCleanNpcsFromMes>Value</OnlyCleanNpcsFromMes> Chat Command: /MES.Settings.EncounterType.OnlyCleanNpcsFromMes.Value Description: This setting allows you to specify if the clean-up process should only target grids that were spawned by Modular Encounters Systems. Value can be true or false Setting: CleanupUseDistance XML: <CleanupUseDistance>Value</CleanupUseDistance> Chat Command: /MES.Settings.EncounterType.CleanupUseDistance.Value Description: This setting allows you to specify if the clean-up process for this encounter type should remove grids that are too far away from players. Value can be true or false Setting: CleanupUseTimer XML: <CleanupUseTimer>Value</CleanupUseTimer> Chat Command: /MES.Settings.EncounterType.CleanupUseTimer.Value Description: This setting allows you to specify if the clean-up process for this encounter type should remove grids after a certain amount of time. Value can be true or false Setting: CleanupUseBlockLimit XML: <CleanupUseBlockLimit>Value</CleanupUseBlockLimit> Chat Command: /MES.Settings.EncounterType.CleanupUseBlockLimit.Value Description: This setting allows you to specify if the clean-up process for this encounter type should remove grids that exceed a certain block count. Value can be true or false Setting: CleanupDistanceStartsTimer XML: <CleanupDistanceStartsTimer>Value</CleanupDistanceStartsTimer> Chat Command: /MES.Settings.EncounterType.CleanupDistanceStartsTimer.Value Description: This setting allows you to specify if the clean-up process for this encounter type should start the clean-up timer for the grid after a player is outside the clean-up distance. CleanupUseDistance and CleanupUseTimer must both be set to true for this feature to work. Value can be true or false Setting: CleanupResetTimerWithinDistance XML: <CleanupResetTimerWithinDistance>Value</CleanupResetTimerWithinDistance> Chat Command: /MES.Settings.EncounterType.CleanupResetTimerWithinDistance.Value Description: This setting allows you to specify if CleanupDistanceStartsTimer is set to true and the player is within the clean-up distance limit, then the clean-up timer for that grid will reset to 0. CleanupDistanceStartsTimer must be set to true for this feature to work. Value can be true or false Setting: CleanupDistanceTrigger XML: <CleanupDistanceTrigger>Value</CleanupDistanceTrigger> Chat Command: /MES.Settings.EncounterType.CleanupDistanceTrigger.Value Description: This setting allows you to specify the maximum distance from the nearest player before the grid is removed if CleanupUseDistance is set to true . Value can be any number higher than 0 . Setting: CleanupTimerTrigger XML: <CleanupTimerTrigger>Value</CleanupTimerTrigger> Chat Command: /MES.Settings.EncounterType.CleanupTimerTrigger.Value Description: This setting allows you to specify the time limit (in seconds) before a grid is removed if CleanupUseTimer is set to true. Value can be set to any integer number higher than 0 Setting: CleanupBlockLimitTrigger XML: <CleanupBlockLimitTrigger>Value</CleanupBlockLimitTrigger> Chat Command: /MES.Settings.EncounterType.CleanupBlockLimitTrigger.Value Description: This setting allows you to specify the maximum amount of blocks a grid is allowed to have. Grids with a higher block count will be removed if CleanupUseBlockLimit is set to true . Value can be set to any integer number higher than 0 Setting: CleanupIncludeUnowned XML: <CleanupIncludeUnowned>Value</CleanupIncludeUnowned> Chat Command: /MES.Settings.EncounterType.CleanupIncludeUnowned.Value Description: This setting allows you to specify if unowned grids spawned by the spawner should also be included in the clean-up process. Value can be set to true or false . Setting: CleanupUnpoweredOverride XML: <CleanupUnpoweredOverride>Value</CleanupUnpoweredOverride> Chat Command: /MES.Settings.EncounterType.CleanupUnpoweredOverride.Value Description: This setting allows you to specify if different Distance and Timer values should be used if the target grid is unpowered. Value can be set to true or false . Setting: CleanupUnpoweredDistanceTrigger XML: <CleanupUnpoweredDistanceTrigger>Value</CleanupUnpoweredDistanceTrigger> Chat Command: /MES.Settings.EncounterType.CleanupUnpoweredDistanceTrigger.Value Description: This setting allows you to specify the maximum distance from the nearest player before the unpowered grid is removed if CleanupUseDistance and CleanupUnpoweredOverride is set to true . Value can be any number higher than 0 . Setting: CleanupUnpoweredTimerTrigger XML: <CleanupUnpoweredTimerTrigger>Value</CleanupUnpoweredTimerTrigger> Chat Command: /MES.Settings.EncounterType.CleanupUnpoweredTimerTrigger.Value Description: This setting allows you to specify the time limit (in seconds) before the unpowered grid is removed if CleanupUseTimer and CleanupUnpoweredOverride is set to true. Value can be set to any integer number higher than 0 Setting: UseBlockDisable XML: <UseBlockDisable>Value</UseBlockDisable> Chat Command: /MES.Settings.EncounterType.UseBlockDisable.Value Description: This setting allows you to specify if certain blocks on the NPC grid should be disabled after spawning. Value can be set to true or false Setting: DisableBlocksByType XML: <DisableBlocksByType> <string>Value1</string> <string>Value2</string> </DisableBlocksByType> Chat Command (Add): /MES.Settings.General.DisableBlocksByType.Add.Value Chat Command (Remove): /MES.Settings.General.DisableBlocksByType.Remove.Value Description: This setting allows you to specify one or more Block Types (using their TypeId) that will be disabled on NPC grids when they spawn. To add more types to the list, simply create a new line between the <DisableBlocksByType> and </DisableBlocksByType> tags and enter the following <string>Value</string> - Replace Value with the exact name of the Block TypeId you want to Disable. Setting: DisableBlocksByDefinitionId XML: <DisableBlocksByDefinitionId> <string>Value1</string> <string>Value2</string> </DisableBlocksByDefinitionId> Chat Command (Add): /MES.Settings.General.DisableBlocksByDefinitionId.Add.Value Chat Command (Remove): /MES.Settings.General.DisableBlocksByDefinitionId.Remove.Value Description: This setting allows you to specify one or more Block Types (using their MyDefinitionId string) that will be disabled on NPC grids when they spawn. To add more types to the list, simply create a new line between the <DisableBlocksByDefinitionId> and </DisableBlocksByDefinitionId> tags and enter the following <string>Value</string> - Replace Value with the exact name of the Block MyDefinitionId you want to Disable.","title":"AdminConfig_Clean-Up.md"},{"location":"AdminConfig_Clean-Up/#adminconfig_clean-upmd","text":"These settings can be found in each of the encounter types configuration files. The settings listed here control the circumstances for when grids of that type should be removed from the game by the clean-up process. For the chat commands, replace EncounterType with any of the types of encounter from the other configurations (eg: SpaceCargoShips , RandomEncounters , etc) The settings you can modify are listed below: Setting: UseCleanupSettings XML: <UseCleanupSettings>Value</UseCleanupSettings> Chat Command: /MES.Settings.EncounterType.UseCleanupSettings.Value Description: This setting allows you to specify if the clean-up process should include encounters from this configuration file type. Value can be true or false Setting: OnlyCleanNpcsFromMes XML: <OnlyCleanNpcsFromMes>Value</OnlyCleanNpcsFromMes> Chat Command: /MES.Settings.EncounterType.OnlyCleanNpcsFromMes.Value Description: This setting allows you to specify if the clean-up process should only target grids that were spawned by Modular Encounters Systems. Value can be true or false Setting: CleanupUseDistance XML: <CleanupUseDistance>Value</CleanupUseDistance> Chat Command: /MES.Settings.EncounterType.CleanupUseDistance.Value Description: This setting allows you to specify if the clean-up process for this encounter type should remove grids that are too far away from players. Value can be true or false Setting: CleanupUseTimer XML: <CleanupUseTimer>Value</CleanupUseTimer> Chat Command: /MES.Settings.EncounterType.CleanupUseTimer.Value Description: This setting allows you to specify if the clean-up process for this encounter type should remove grids after a certain amount of time. Value can be true or false Setting: CleanupUseBlockLimit XML: <CleanupUseBlockLimit>Value</CleanupUseBlockLimit> Chat Command: /MES.Settings.EncounterType.CleanupUseBlockLimit.Value Description: This setting allows you to specify if the clean-up process for this encounter type should remove grids that exceed a certain block count. Value can be true or false Setting: CleanupDistanceStartsTimer XML: <CleanupDistanceStartsTimer>Value</CleanupDistanceStartsTimer> Chat Command: /MES.Settings.EncounterType.CleanupDistanceStartsTimer.Value Description: This setting allows you to specify if the clean-up process for this encounter type should start the clean-up timer for the grid after a player is outside the clean-up distance. CleanupUseDistance and CleanupUseTimer must both be set to true for this feature to work. Value can be true or false Setting: CleanupResetTimerWithinDistance XML: <CleanupResetTimerWithinDistance>Value</CleanupResetTimerWithinDistance> Chat Command: /MES.Settings.EncounterType.CleanupResetTimerWithinDistance.Value Description: This setting allows you to specify if CleanupDistanceStartsTimer is set to true and the player is within the clean-up distance limit, then the clean-up timer for that grid will reset to 0. CleanupDistanceStartsTimer must be set to true for this feature to work. Value can be true or false Setting: CleanupDistanceTrigger XML: <CleanupDistanceTrigger>Value</CleanupDistanceTrigger> Chat Command: /MES.Settings.EncounterType.CleanupDistanceTrigger.Value Description: This setting allows you to specify the maximum distance from the nearest player before the grid is removed if CleanupUseDistance is set to true . Value can be any number higher than 0 . Setting: CleanupTimerTrigger XML: <CleanupTimerTrigger>Value</CleanupTimerTrigger> Chat Command: /MES.Settings.EncounterType.CleanupTimerTrigger.Value Description: This setting allows you to specify the time limit (in seconds) before a grid is removed if CleanupUseTimer is set to true. Value can be set to any integer number higher than 0 Setting: CleanupBlockLimitTrigger XML: <CleanupBlockLimitTrigger>Value</CleanupBlockLimitTrigger> Chat Command: /MES.Settings.EncounterType.CleanupBlockLimitTrigger.Value Description: This setting allows you to specify the maximum amount of blocks a grid is allowed to have. Grids with a higher block count will be removed if CleanupUseBlockLimit is set to true . Value can be set to any integer number higher than 0 Setting: CleanupIncludeUnowned XML: <CleanupIncludeUnowned>Value</CleanupIncludeUnowned> Chat Command: /MES.Settings.EncounterType.CleanupIncludeUnowned.Value Description: This setting allows you to specify if unowned grids spawned by the spawner should also be included in the clean-up process. Value can be set to true or false . Setting: CleanupUnpoweredOverride XML: <CleanupUnpoweredOverride>Value</CleanupUnpoweredOverride> Chat Command: /MES.Settings.EncounterType.CleanupUnpoweredOverride.Value Description: This setting allows you to specify if different Distance and Timer values should be used if the target grid is unpowered. Value can be set to true or false . Setting: CleanupUnpoweredDistanceTrigger XML: <CleanupUnpoweredDistanceTrigger>Value</CleanupUnpoweredDistanceTrigger> Chat Command: /MES.Settings.EncounterType.CleanupUnpoweredDistanceTrigger.Value Description: This setting allows you to specify the maximum distance from the nearest player before the unpowered grid is removed if CleanupUseDistance and CleanupUnpoweredOverride is set to true . Value can be any number higher than 0 . Setting: CleanupUnpoweredTimerTrigger XML: <CleanupUnpoweredTimerTrigger>Value</CleanupUnpoweredTimerTrigger> Chat Command: /MES.Settings.EncounterType.CleanupUnpoweredTimerTrigger.Value Description: This setting allows you to specify the time limit (in seconds) before the unpowered grid is removed if CleanupUseTimer and CleanupUnpoweredOverride is set to true. Value can be set to any integer number higher than 0 Setting: UseBlockDisable XML: <UseBlockDisable>Value</UseBlockDisable> Chat Command: /MES.Settings.EncounterType.UseBlockDisable.Value Description: This setting allows you to specify if certain blocks on the NPC grid should be disabled after spawning. Value can be set to true or false Setting: DisableBlocksByType XML: <DisableBlocksByType> <string>Value1</string> <string>Value2</string> </DisableBlocksByType> Chat Command (Add): /MES.Settings.General.DisableBlocksByType.Add.Value Chat Command (Remove): /MES.Settings.General.DisableBlocksByType.Remove.Value Description: This setting allows you to specify one or more Block Types (using their TypeId) that will be disabled on NPC grids when they spawn. To add more types to the list, simply create a new line between the <DisableBlocksByType> and </DisableBlocksByType> tags and enter the following <string>Value</string> - Replace Value with the exact name of the Block TypeId you want to Disable. Setting: DisableBlocksByDefinitionId XML: <DisableBlocksByDefinitionId> <string>Value1</string> <string>Value2</string> </DisableBlocksByDefinitionId> Chat Command (Add): /MES.Settings.General.DisableBlocksByDefinitionId.Add.Value Chat Command (Remove): /MES.Settings.General.DisableBlocksByDefinitionId.Remove.Value Description: This setting allows you to specify one or more Block Types (using their MyDefinitionId string) that will be disabled on NPC grids when they spawn. To add more types to the list, simply create a new line between the <DisableBlocksByDefinitionId> and </DisableBlocksByDefinitionId> tags and enter the following <string>Value</string> - Replace Value with the exact name of the Block MyDefinitionId you want to Disable.","title":"AdminConfig_Clean-Up.md"},{"location":"AdminConfig_Combat/","text":"AdminConfig_Combat.md Content will release with update 2.68.0 You can find the Grids Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-Combat.xml . The settings you can modify are listed below: Setting: EnableCombatPhaseSystem XML: <EnableCombatPhaseSystem>Value</EnableCombatPhaseSystem> Chat Command: /MES.Settings.Combat.EnableCombatPhaseSystem.Value Description: This setting allows you to specify if the Combat Phase system should be used. This system sets 2 timers that alternate a Peace phase and a Combat phase. During the Combat phase, you may find more actively hostile encounters. Setting: MinCombatPhaseSeconds XML: <MinCombatPhaseSeconds>Value</MinCombatPhaseSeconds> Chat Command: /MES.Settings.Combat.MinCombatPhaseSeconds.Value Description: Specifies the minimum length of time a Combat phase can last. Setting: MaxCombatPhaseSeconds XML: <MaxCombatPhaseSeconds>Value</MaxCombatPhaseSeconds> Chat Command: /MES.Settings.Combat.MaxCombatPhaseSeconds.Value Description: Specifies the maximum length of time a Combat phase can last. Setting: MinPeacePhaseSeconds XML: <MinPeacePhaseSeconds>Value</MinPeacePhaseSeconds> Chat Command: /MES.Settings.Combat.MinPeacePhaseSeconds.Value Description: Specifies the minimum length of time a Peace phase can last. Setting: MaxPeacePhaseSeconds XML: <MaxPeacePhaseSeconds>Value</MaxPeacePhaseSeconds> Chat Command: /MES.Settings.Combat.MaxPeacePhaseSeconds.Value Description: Specifies the maximum length of time a Peace phase can last. Setting: CombatPhaseModIdOverride XML: <CombatPhaseModIdOverride> <string>Value1</string> <string>Value2</string> </CombatPhaseModIdOverride> Chat Command (Add): /MES.Settings.Combat.CombatPhaseModIdOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.CombatPhaseModIdOverride.Remove.Value Description: Allows you to specify one or more Mod IDs that will have their encounters registered as Combat phase only encounters. To add more IDs to the list, simply create a new line between the <CombatPhaseModIdOverride> and </CombatPhaseModIdOverride> tags and enter the following <string>Value</string> - Replace Value with the Mod ID you want to register. Setting: AllPhaseModIdOverride XML: <AllPhaseModIdOverride> <string>Value1</string> <string>Value2</string> </AllPhaseModIdOverride> Chat Command (Add): /MES.Settings.Combat.AllPhaseModIdOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.AllPhaseModIdOverride.Remove.Value Description: Allows you to specify one or more Mod IDs that will have their encounters registered to be able to spawn during Combat and Peace phases. To add more IDs to the list, simply create a new line between the <AllPhaseModIdOverride> and </AllPhaseModIdOverride> tags and enter the following <string>Value</string> - Replace Value with the Mod ID you want to register. Setting: CombatPhaseSpawnGroupOverride XML: <CombatPhaseSpawnGroupOverride> <string>Value1</string> <string>Value2</string> </CombatPhaseSpawnGroupOverride> Chat Command (Add): /MES.Settings.Combat.CombatPhaseSpawnGroupOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.CombatPhaseSpawnGroupOverride.Remove.Value Description: Allows you to specify one or more SpawnGroup Names that will have their encounters registered as Combat phase only encounters. To add more Names to the list, simply create a new line between the <CombatPhaseSpawnGroupOverride> and </CombatPhaseSpawnGroupOverride> tags and enter the following <string>Value</string> - Replace Value with the SpawnGroup you want to register. Setting: AllPhaseSpawnGroupOverride XML: <AllPhaseSpawnGroupOverride> <string>Value1</string> <string>Value2</string> </AllPhaseSpawnGroupOverride> Chat Command (Add): /MES.Settings.Combat.AllPhaseSpawnGroupOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.AllPhaseSpawnGroupOverride.Remove.Value Description: Allows you to specify one or more SpawnGroup Names that will have their encounters registered to be able to spawn during Combat and Peace phases. To add more Names to the list, simply create a new line between the <AllPhaseSpawnGroupOverride> and </AllPhaseSpawnGroupOverride> tags and enter the following <string>Value</string> - Replace Value with the SpawnGroup you want to register. Setting: UseCombatPhaseSpawnTimerMultiplier XML: <UseCombatPhaseSpawnTimerMultiplier>Value</UseCombatPhaseSpawnTimerMultiplier> Chat Command: /MES.Settings.Combat.UseCombatPhaseSpawnTimerMultiplier.Value Description: Allows you to specify if the Combat Phase spawn timers should be increased or decreased. Example: Setting to 2 would mean encounters spawn twice as quickly during Combat, while setting to 0.5 would result in them taking twice as long to spawn. Setting: CombatPhaseSpawnTimerMultiplier XML: <CombatPhaseSpawnTimerMultiplier>Value</CombatPhaseSpawnTimerMultiplier> Chat Command: /MES.Settings.Combat.CombatPhaseSpawnTimerMultiplier.Value Description: Specifies the multiplier that is applied to the Spawn Timer increments if using the UseCombatPhaseSpawnTimerMultiplier option. Setting: AnnouncePhaseChanges XML: <AnnouncePhaseChanges>Value</AnnouncePhaseChanges> Chat Command: /MES.Settings.Combat.AnnouncePhaseChanges.Value Description: Allows you to specify if an announcement should be broadcast to players when Combat and Peace phases are changed.","title":"AdminConfig_Combat.md"},{"location":"AdminConfig_Combat/#adminconfig_combatmd","text":"Content will release with update 2.68.0 You can find the Grids Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-Combat.xml . The settings you can modify are listed below: Setting: EnableCombatPhaseSystem XML: <EnableCombatPhaseSystem>Value</EnableCombatPhaseSystem> Chat Command: /MES.Settings.Combat.EnableCombatPhaseSystem.Value Description: This setting allows you to specify if the Combat Phase system should be used. This system sets 2 timers that alternate a Peace phase and a Combat phase. During the Combat phase, you may find more actively hostile encounters. Setting: MinCombatPhaseSeconds XML: <MinCombatPhaseSeconds>Value</MinCombatPhaseSeconds> Chat Command: /MES.Settings.Combat.MinCombatPhaseSeconds.Value Description: Specifies the minimum length of time a Combat phase can last. Setting: MaxCombatPhaseSeconds XML: <MaxCombatPhaseSeconds>Value</MaxCombatPhaseSeconds> Chat Command: /MES.Settings.Combat.MaxCombatPhaseSeconds.Value Description: Specifies the maximum length of time a Combat phase can last. Setting: MinPeacePhaseSeconds XML: <MinPeacePhaseSeconds>Value</MinPeacePhaseSeconds> Chat Command: /MES.Settings.Combat.MinPeacePhaseSeconds.Value Description: Specifies the minimum length of time a Peace phase can last. Setting: MaxPeacePhaseSeconds XML: <MaxPeacePhaseSeconds>Value</MaxPeacePhaseSeconds> Chat Command: /MES.Settings.Combat.MaxPeacePhaseSeconds.Value Description: Specifies the maximum length of time a Peace phase can last. Setting: CombatPhaseModIdOverride XML: <CombatPhaseModIdOverride> <string>Value1</string> <string>Value2</string> </CombatPhaseModIdOverride> Chat Command (Add): /MES.Settings.Combat.CombatPhaseModIdOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.CombatPhaseModIdOverride.Remove.Value Description: Allows you to specify one or more Mod IDs that will have their encounters registered as Combat phase only encounters. To add more IDs to the list, simply create a new line between the <CombatPhaseModIdOverride> and </CombatPhaseModIdOverride> tags and enter the following <string>Value</string> - Replace Value with the Mod ID you want to register. Setting: AllPhaseModIdOverride XML: <AllPhaseModIdOverride> <string>Value1</string> <string>Value2</string> </AllPhaseModIdOverride> Chat Command (Add): /MES.Settings.Combat.AllPhaseModIdOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.AllPhaseModIdOverride.Remove.Value Description: Allows you to specify one or more Mod IDs that will have their encounters registered to be able to spawn during Combat and Peace phases. To add more IDs to the list, simply create a new line between the <AllPhaseModIdOverride> and </AllPhaseModIdOverride> tags and enter the following <string>Value</string> - Replace Value with the Mod ID you want to register. Setting: CombatPhaseSpawnGroupOverride XML: <CombatPhaseSpawnGroupOverride> <string>Value1</string> <string>Value2</string> </CombatPhaseSpawnGroupOverride> Chat Command (Add): /MES.Settings.Combat.CombatPhaseSpawnGroupOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.CombatPhaseSpawnGroupOverride.Remove.Value Description: Allows you to specify one or more SpawnGroup Names that will have their encounters registered as Combat phase only encounters. To add more Names to the list, simply create a new line between the <CombatPhaseSpawnGroupOverride> and </CombatPhaseSpawnGroupOverride> tags and enter the following <string>Value</string> - Replace Value with the SpawnGroup you want to register. Setting: AllPhaseSpawnGroupOverride XML: <AllPhaseSpawnGroupOverride> <string>Value1</string> <string>Value2</string> </AllPhaseSpawnGroupOverride> Chat Command (Add): /MES.Settings.Combat.AllPhaseSpawnGroupOverride.Add.Value Chat Command (Remove): /MES.Settings.Combat.AllPhaseSpawnGroupOverride.Remove.Value Description: Allows you to specify one or more SpawnGroup Names that will have their encounters registered to be able to spawn during Combat and Peace phases. To add more Names to the list, simply create a new line between the <AllPhaseSpawnGroupOverride> and </AllPhaseSpawnGroupOverride> tags and enter the following <string>Value</string> - Replace Value with the SpawnGroup you want to register. Setting: UseCombatPhaseSpawnTimerMultiplier XML: <UseCombatPhaseSpawnTimerMultiplier>Value</UseCombatPhaseSpawnTimerMultiplier> Chat Command: /MES.Settings.Combat.UseCombatPhaseSpawnTimerMultiplier.Value Description: Allows you to specify if the Combat Phase spawn timers should be increased or decreased. Example: Setting to 2 would mean encounters spawn twice as quickly during Combat, while setting to 0.5 would result in them taking twice as long to spawn. Setting: CombatPhaseSpawnTimerMultiplier XML: <CombatPhaseSpawnTimerMultiplier>Value</CombatPhaseSpawnTimerMultiplier> Chat Command: /MES.Settings.Combat.CombatPhaseSpawnTimerMultiplier.Value Description: Specifies the multiplier that is applied to the Spawn Timer increments if using the UseCombatPhaseSpawnTimerMultiplier option. Setting: AnnouncePhaseChanges XML: <AnnouncePhaseChanges>Value</AnnouncePhaseChanges> Chat Command: /MES.Settings.Combat.AnnouncePhaseChanges.Value Description: Allows you to specify if an announcement should be broadcast to players when Combat and Peace phases are changed.","title":"AdminConfig_Combat.md"},{"location":"AdminConfig_Creatures/","text":"AdminConfig_Creatures.md You can find the Creatures Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-Creatures.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.Creatures.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: OverrideVanillaCreatureSpawns XML: <OverrideVanillaCreatureSpawns>Value</OverrideVanillaCreatureSpawns> Chat Command: /MES.Settings.Creatures.OverrideVanillaCreatureSpawns.Value Description: This setting allows you to override the vanilla creature spawner so MES is exclusively responsible for spawning creatures / bots. This option has the same effect as loading the Planet Creature Spawner mod. Setting: MinCreatureSpawnTime XML: <MinCreatureSpawnTime>Value</MinCreatureSpawnTime> Chat Command: /MES.Settings.Creatures.MinCreatureSpawnTime.Value Description: This setting allows you to set the minimum amount of time it takes for a creature spawn to happen near a player. Time is measured in seconds. Setting: MaxCreatureSpawnTime XML: <MaxCreatureSpawnTime>Value</MaxCreatureSpawnTime> Chat Command: /MES.Settings.Creatures.MaxCreatureSpawnTime.Value Description: This setting allows you to set the maximum amount of time it takes for a creature spawn to happen near a player. Time is measured in seconds. Setting: MaxPlayerAltitudeForSpawn XML: <MaxPlayerAltitudeForSpawn>Value</MaxPlayerAltitudeForSpawn> Chat Command: /MES.Settings.Creatures.MaxPlayerAltitudeForSpawn.Value Description: This setting allows you to set the maximum altitude from the planet surface that a player must be within in order to be eligible to spawn a creature / bot encounter. Setting: CoordsAttemptsPerCreature XML: <CoordsAttemptsPerCreature>Value</CoordsAttemptsPerCreature> Chat Command: /MES.Settings.Creatures.CoordsAttemptsPerCreature.Value Description: This setting allows you to set the maximum amount of attempts that coordinate generation for creature spawning will be attempted for areas where they may have difficulty spawning. Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Creatures.md"},{"location":"AdminConfig_Creatures/#adminconfig_creaturesmd","text":"You can find the Creatures Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-Creatures.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.Creatures.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: OverrideVanillaCreatureSpawns XML: <OverrideVanillaCreatureSpawns>Value</OverrideVanillaCreatureSpawns> Chat Command: /MES.Settings.Creatures.OverrideVanillaCreatureSpawns.Value Description: This setting allows you to override the vanilla creature spawner so MES is exclusively responsible for spawning creatures / bots. This option has the same effect as loading the Planet Creature Spawner mod. Setting: MinCreatureSpawnTime XML: <MinCreatureSpawnTime>Value</MinCreatureSpawnTime> Chat Command: /MES.Settings.Creatures.MinCreatureSpawnTime.Value Description: This setting allows you to set the minimum amount of time it takes for a creature spawn to happen near a player. Time is measured in seconds. Setting: MaxCreatureSpawnTime XML: <MaxCreatureSpawnTime>Value</MaxCreatureSpawnTime> Chat Command: /MES.Settings.Creatures.MaxCreatureSpawnTime.Value Description: This setting allows you to set the maximum amount of time it takes for a creature spawn to happen near a player. Time is measured in seconds. Setting: MaxPlayerAltitudeForSpawn XML: <MaxPlayerAltitudeForSpawn>Value</MaxPlayerAltitudeForSpawn> Chat Command: /MES.Settings.Creatures.MaxPlayerAltitudeForSpawn.Value Description: This setting allows you to set the maximum altitude from the planet surface that a player must be within in order to be eligible to spawn a creature / bot encounter. Setting: CoordsAttemptsPerCreature XML: <CoordsAttemptsPerCreature>Value</CoordsAttemptsPerCreature> Chat Command: /MES.Settings.Creatures.CoordsAttemptsPerCreature.Value Description: This setting allows you to set the maximum amount of attempts that coordinate generation for creature spawning will be attempted for areas where they may have difficulty spawning. Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Creatures.md"},{"location":"AdminConfig_General/","text":"AdminConfig_General.md You can find the General Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-General.xml . The settings you can modify are listed below: Setting: EnableLegacySpaceCargoShipDetection XML: <EnableLegacySpaceCargoShipDetection>Value</EnableLegacySpaceCargoShipDetection> Chat Command: /MES.Settings.General.EnableLegacySpaceCargoShipDetection.Value Description: This setting allows you to specify if older Cargo Ship mods that do not contain Keens new <IsCargoShip> tag should still be considered for spawning by the Spawner. Default value is true . Value can be replaced with true or false Setting: UseModIdSelectionForSpawning XML: <UseModIdSelectionForSpawning>Value</UseModIdSelectionForSpawning> Chat Command: /MES.Settings.General.UseModIdSelectionForSpawning.Value Description: This setting allows you to specify if the spawner should sort all SpawnGroups by mod ID first, choose a random mod ID, and then spawn a random SpawnGroup from that mod ID. This is useful if you have mods loaded with lots of SpawnGroups that may outweigh spawning for other encounter mods. Default value is true . Value can be replaced with true or false Setting: UseWeightedModIdSelection XML: <UseWeightedModIdSelection>Value</UseWeightedModIdSelection> Chat Command: /MES.Settings.General.UseWeightedModIdSelection.Value Description: This setting allows you to specify if the encounter mods with more encounters should be weighed higher if UseModIdSelectionForSpawning is enabled. Default value is true . Value can be replaced with true or false Setting: LowWeightModIdSpawnGroups XML: <LowWeightModIdSpawnGroups>Value</LowWeightModIdSpawnGroups> Chat Command: /MES.Settings.General.LowWeightModIdSpawnGroups.Value Description: This setting allows you to specify how many SpawnGroups a mod must have (or less) to be considered Low weighted, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: LowWeightModIdModifier XML: <LowWeightModIdModifier>Value</LowWeightModIdModifier> Chat Command: /MES.Settings.General.LowWeightModIdModifier.Value Description: This setting allows you to specify how many points a mod ID is worth if its considered Low weight, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: MediumWeightModIdSpawnGroups XML: <MediumWeightModIdSpawnGroups>Value</MediumWeightModIdSpawnGroups> Chat Command: /MES.Settings.General.MediumWeightModIdSpawnGroups.Value Description: This setting allows you to specify how many SpawnGroups a mod must have (between LowWeightModIdSpawnGroups value and this value) to be considered Medium weighted, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: MediumWeightModIdModifier XML: <MediumWeightModIdModifier>Value</MediumWeightModIdModifier> Chat Command: /MES.Settings.General.MediumWeightModIdModifier.Value Description: This setting allows you to specify how many points a mod ID is worth if its considered Medium weight, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: HighWeightModIdSpawnGroups XML: <HighWeightModIdSpawnGroups>Value</HighWeightModIdSpawnGroups> Chat Command: /MES.Settings.General.HighWeightModIdSpawnGroups.Value Description: This setting allows you to specify how many SpawnGroups a mod must have (or higher) to be considered High weighted, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: HighWeightModIdModifier XML: <HighWeightModIdModifier>Value</HighWeightModIdModifier> Chat Command: /MES.Settings.General.HighWeightModIdModifier.Value Description: This setting allows you to specify how many points a mod ID is worth if its considered High weight, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: UseMaxNpcGrids XML: <UseMaxNpcGrids>Value</UseMaxNpcGrids> Chat Command: /MES.Settings.General.UseMaxNpcGrids.Value Description: This setting allows you to specify whether or not a global limit on NPC grids in the world should be used. Value can be replaced with true or false Setting: UseGlobalEventsTimers XML: <UseGlobalEventsTimers>Value</UseGlobalEventsTimers> Chat Command: /MES.Settings.General.UseGlobalEventsTimers.Value Description: This setting allows you to specify whether or not the mod should use the spawner timings from Global Events Definitions that are found on start-up. Value can be replaced with true or false Setting: IgnorePlanetWhitelists XML: <IgnorePlanetWhitelists>Value</IgnorePlanetWhitelists> Chat Command: /MES.Settings.General.IgnorePlanetWhitelists.Value Description: This setting allows you to specify if the spawner should ignore Planet Whitelists found in spawngroups. Value can be replaced with true or false Setting: IgnorePlanetBlacklists XML: <IgnorePlanetBlacklists>Value</IgnorePlanetBlacklists> Chat Command: /MES.Settings.General.IgnorePlanetBlacklists.Value Description: This setting allows you to specify if the spawner should ignore Planet Blacklists found in spawngroups. Value can be replaced with true or false Setting: ThreatRefreshTimerMinimum XML: <ThreatRefreshTimerMinimum>Value</ThreatRefreshTimerMinimum> Chat Command: /MES.Settings.General.ThreatRefreshTimerMinimum.Value Description: This setting specifies the minimum time a that grids threat scores are refreshed. The refresh doesn't happen at this interval all the time if nothing has spawned and requested a threat score scan. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: ThreatReductionHandicap XML: <ThreatReductionHandicap>Value</ThreatReductionHandicap> Chat Command: /MES.Settings.General.ThreatReductionHandicap.Value Description: This setting allows you to set a handicap that is subtracted from all threat scores. You can also provide a negative value for added challenge. Value can be replaced with any integer (Eg: 5 , -10 , 42 , etc) Setting: MaxGlobalNpcGrids XML: <MaxGlobalNpcGrids>Value</MaxGlobalNpcGrids> Chat Command: /MES.Settings.General.MaxGlobalNpcGrids.Value Description: If UseMaxNpcGrids is set to true , then this setting specifies how many NPCs are allow to exist in the world at once. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: PlayerWatcherTimerTrigger XML: <PlayerWatcherTimerTrigger>Value</PlayerWatcherTimerTrigger> Chat Command: /MES.Settings.General.PlayerWatcherTimerTrigger.Value Description: This setting specifies how often (in seconds) the spawner will check to see if it's time to spawn a new encounter near a player (the actual spawning times for encounters can be found in their respective configuration files). Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcDistanceCheckTimerTrigger XML: <NpcDistanceCheckTimerTrigger>Value</NpcDistanceCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcDistanceCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check an NPCs distance to the end of its travel path (for Space/Lunar/Planetary Cargo Ship Encounters). Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcOwnershipCheckTimerTrigger XML: <NpcOwnershipCheckTimerTrigger>Value</NpcOwnershipCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcOwnershipCheckTimerTrigger.Value Description: Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcCleanupCheckTimerTrigger XML: <NpcCleanupCheckTimerTrigger>Value</NpcCleanupCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcCleanupCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check an NPCs ownership to ensure players have not taken ownership of blocks. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcBlacklistCheckTimerTrigger XML: <NpcBlacklistCheckTimerTrigger>Value</NpcBlacklistCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcBlacklistCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check each NPC against clean-up settings for its particular encounter type. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: SpawnedVoxelCheckTimerTrigger XML: <SpawnedVoxelCheckTimerTrigger>Value</SpawnedVoxelCheckTimerTrigger> Chat Command: /MES.Settings.General.SpawnedVoxelCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check to see if voxels spawned with the mod have grids nearby (Voxels are deleted if no grids are found nearby at the distance specified in SpawnedVoxelMinimumGridDistance ). Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: SpawnedVoxelMinimumGridDistance XML: <SpawnedVoxelMinimumGridDistance>Value</SpawnedVoxelMinimumGridDistance> Chat Command: /MES.Settings.General.SpawnedVoxelMinimumGridDistance.Value Description: This setting specifies the minimum distance that any grid must be from a mod-spawned voxel, otherwise it is deleted in clean-up. Value can be replaced with any number (Eg: 1000 , 5000 , 42000 , etc). Value should not be lower than 0 Setting: PlanetSpawnsDisableList XML: <PlanetSpawnsDisableList> <string>Value1</string> <string>Value2</string> </PlanetSpawnsDisableList> Chat Command (Add): /MES.Settings.General.PlanetSpawnsDisableList.Add.Value Chat Command (Remove): /MES.Settings.General.PlanetSpawnsDisableList.Remove.Value Description: This setting allows you to specify one or more planet names that spawns of any kind should not take place on. To add more names to the list, simply create a new line between the <PlanetSpawnsDisableList> and </PlanetSpawnsDisableList> tags and enter the following <string>Value</string> - Replace Value with the exact name of the planet subtypeid you want to restrict. Setting: NpcGridNameBlacklist XML: <NpcGridNameBlacklist> <string>Value1</string> <string>Value2</string> </NpcGridNameBlacklist> Chat Command (Add): /MES.Settings.General.NpcGridNameBlacklist.Add.Value Chat Command (Remove): /MES.Settings.General.NpcGridNameBlacklist.Remove.Value Description: This setting allows you to specify one or more grid names that will be automatically deleted if spawned with NPC ownership. To add more names to the list, simply create a new line between the <NpcGridNameBlacklist> and </NpcGridNameBlacklist> tags and enter the following <string>Value</string> - Replace Value with the exact name of the grid you want to BlackList. Setting: NpcSpawnGroupBlacklist XML: <NpcSpawnGroupBlacklist> <string>Value1</string> <string>Value2</string> </NpcSpawnGroupBlacklist> Chat Command (Add): /MES.Settings.General.NpcSpawnGroupBlacklist.Add.Value Chat Command (Remove): /MES.Settings.General.NpcSpawnGroupBlacklist.Remove.Value Description: This setting allows you to specify one or more SpawnGroups (using their SubtypeIds) that will be removed from the mod spawning pool. To add more groups to the list, simply create a new line between the <NpcSpawnGroupBlacklist> and </NpcSpawnGroupBlacklist> tags and enter the following <string>Value</string> - Replace Value with the exact name of the SpawnGroup SubtypeId you want to BlackList.","title":"AdminConfig_General.md"},{"location":"AdminConfig_General/#adminconfig_generalmd","text":"You can find the General Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-General.xml . The settings you can modify are listed below: Setting: EnableLegacySpaceCargoShipDetection XML: <EnableLegacySpaceCargoShipDetection>Value</EnableLegacySpaceCargoShipDetection> Chat Command: /MES.Settings.General.EnableLegacySpaceCargoShipDetection.Value Description: This setting allows you to specify if older Cargo Ship mods that do not contain Keens new <IsCargoShip> tag should still be considered for spawning by the Spawner. Default value is true . Value can be replaced with true or false Setting: UseModIdSelectionForSpawning XML: <UseModIdSelectionForSpawning>Value</UseModIdSelectionForSpawning> Chat Command: /MES.Settings.General.UseModIdSelectionForSpawning.Value Description: This setting allows you to specify if the spawner should sort all SpawnGroups by mod ID first, choose a random mod ID, and then spawn a random SpawnGroup from that mod ID. This is useful if you have mods loaded with lots of SpawnGroups that may outweigh spawning for other encounter mods. Default value is true . Value can be replaced with true or false Setting: UseWeightedModIdSelection XML: <UseWeightedModIdSelection>Value</UseWeightedModIdSelection> Chat Command: /MES.Settings.General.UseWeightedModIdSelection.Value Description: This setting allows you to specify if the encounter mods with more encounters should be weighed higher if UseModIdSelectionForSpawning is enabled. Default value is true . Value can be replaced with true or false Setting: LowWeightModIdSpawnGroups XML: <LowWeightModIdSpawnGroups>Value</LowWeightModIdSpawnGroups> Chat Command: /MES.Settings.General.LowWeightModIdSpawnGroups.Value Description: This setting allows you to specify how many SpawnGroups a mod must have (or less) to be considered Low weighted, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: LowWeightModIdModifier XML: <LowWeightModIdModifier>Value</LowWeightModIdModifier> Chat Command: /MES.Settings.General.LowWeightModIdModifier.Value Description: This setting allows you to specify how many points a mod ID is worth if its considered Low weight, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: MediumWeightModIdSpawnGroups XML: <MediumWeightModIdSpawnGroups>Value</MediumWeightModIdSpawnGroups> Chat Command: /MES.Settings.General.MediumWeightModIdSpawnGroups.Value Description: This setting allows you to specify how many SpawnGroups a mod must have (between LowWeightModIdSpawnGroups value and this value) to be considered Medium weighted, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: MediumWeightModIdModifier XML: <MediumWeightModIdModifier>Value</MediumWeightModIdModifier> Chat Command: /MES.Settings.General.MediumWeightModIdModifier.Value Description: This setting allows you to specify how many points a mod ID is worth if its considered Medium weight, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: HighWeightModIdSpawnGroups XML: <HighWeightModIdSpawnGroups>Value</HighWeightModIdSpawnGroups> Chat Command: /MES.Settings.General.HighWeightModIdSpawnGroups.Value Description: This setting allows you to specify how many SpawnGroups a mod must have (or higher) to be considered High weighted, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: HighWeightModIdModifier XML: <HighWeightModIdModifier>Value</HighWeightModIdModifier> Chat Command: /MES.Settings.General.HighWeightModIdModifier.Value Description: This setting allows you to specify how many points a mod ID is worth if its considered High weight, if UseWeightedModIdSelection is enabled. Value can be replaced with any Integer number (eg: 1 , 2 , 3 ) Setting: UseMaxNpcGrids XML: <UseMaxNpcGrids>Value</UseMaxNpcGrids> Chat Command: /MES.Settings.General.UseMaxNpcGrids.Value Description: This setting allows you to specify whether or not a global limit on NPC grids in the world should be used. Value can be replaced with true or false Setting: UseGlobalEventsTimers XML: <UseGlobalEventsTimers>Value</UseGlobalEventsTimers> Chat Command: /MES.Settings.General.UseGlobalEventsTimers.Value Description: This setting allows you to specify whether or not the mod should use the spawner timings from Global Events Definitions that are found on start-up. Value can be replaced with true or false Setting: IgnorePlanetWhitelists XML: <IgnorePlanetWhitelists>Value</IgnorePlanetWhitelists> Chat Command: /MES.Settings.General.IgnorePlanetWhitelists.Value Description: This setting allows you to specify if the spawner should ignore Planet Whitelists found in spawngroups. Value can be replaced with true or false Setting: IgnorePlanetBlacklists XML: <IgnorePlanetBlacklists>Value</IgnorePlanetBlacklists> Chat Command: /MES.Settings.General.IgnorePlanetBlacklists.Value Description: This setting allows you to specify if the spawner should ignore Planet Blacklists found in spawngroups. Value can be replaced with true or false Setting: ThreatRefreshTimerMinimum XML: <ThreatRefreshTimerMinimum>Value</ThreatRefreshTimerMinimum> Chat Command: /MES.Settings.General.ThreatRefreshTimerMinimum.Value Description: This setting specifies the minimum time a that grids threat scores are refreshed. The refresh doesn't happen at this interval all the time if nothing has spawned and requested a threat score scan. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: ThreatReductionHandicap XML: <ThreatReductionHandicap>Value</ThreatReductionHandicap> Chat Command: /MES.Settings.General.ThreatReductionHandicap.Value Description: This setting allows you to set a handicap that is subtracted from all threat scores. You can also provide a negative value for added challenge. Value can be replaced with any integer (Eg: 5 , -10 , 42 , etc) Setting: MaxGlobalNpcGrids XML: <MaxGlobalNpcGrids>Value</MaxGlobalNpcGrids> Chat Command: /MES.Settings.General.MaxGlobalNpcGrids.Value Description: If UseMaxNpcGrids is set to true , then this setting specifies how many NPCs are allow to exist in the world at once. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: PlayerWatcherTimerTrigger XML: <PlayerWatcherTimerTrigger>Value</PlayerWatcherTimerTrigger> Chat Command: /MES.Settings.General.PlayerWatcherTimerTrigger.Value Description: This setting specifies how often (in seconds) the spawner will check to see if it's time to spawn a new encounter near a player (the actual spawning times for encounters can be found in their respective configuration files). Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcDistanceCheckTimerTrigger XML: <NpcDistanceCheckTimerTrigger>Value</NpcDistanceCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcDistanceCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check an NPCs distance to the end of its travel path (for Space/Lunar/Planetary Cargo Ship Encounters). Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcOwnershipCheckTimerTrigger XML: <NpcOwnershipCheckTimerTrigger>Value</NpcOwnershipCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcOwnershipCheckTimerTrigger.Value Description: Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcCleanupCheckTimerTrigger XML: <NpcCleanupCheckTimerTrigger>Value</NpcCleanupCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcCleanupCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check an NPCs ownership to ensure players have not taken ownership of blocks. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: NpcBlacklistCheckTimerTrigger XML: <NpcBlacklistCheckTimerTrigger>Value</NpcBlacklistCheckTimerTrigger> Chat Command: /MES.Settings.General.NpcBlacklistCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check each NPC against clean-up settings for its particular encounter type. Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: SpawnedVoxelCheckTimerTrigger XML: <SpawnedVoxelCheckTimerTrigger>Value</SpawnedVoxelCheckTimerTrigger> Chat Command: /MES.Settings.General.SpawnedVoxelCheckTimerTrigger.Value Description: This setting specifies how often (in seconds) the mod will check to see if voxels spawned with the mod have grids nearby (Voxels are deleted if no grids are found nearby at the distance specified in SpawnedVoxelMinimumGridDistance ). Value can be replaced with any integer (Eg: 5 , 10 , 42 , etc) Setting: SpawnedVoxelMinimumGridDistance XML: <SpawnedVoxelMinimumGridDistance>Value</SpawnedVoxelMinimumGridDistance> Chat Command: /MES.Settings.General.SpawnedVoxelMinimumGridDistance.Value Description: This setting specifies the minimum distance that any grid must be from a mod-spawned voxel, otherwise it is deleted in clean-up. Value can be replaced with any number (Eg: 1000 , 5000 , 42000 , etc). Value should not be lower than 0 Setting: PlanetSpawnsDisableList XML: <PlanetSpawnsDisableList> <string>Value1</string> <string>Value2</string> </PlanetSpawnsDisableList> Chat Command (Add): /MES.Settings.General.PlanetSpawnsDisableList.Add.Value Chat Command (Remove): /MES.Settings.General.PlanetSpawnsDisableList.Remove.Value Description: This setting allows you to specify one or more planet names that spawns of any kind should not take place on. To add more names to the list, simply create a new line between the <PlanetSpawnsDisableList> and </PlanetSpawnsDisableList> tags and enter the following <string>Value</string> - Replace Value with the exact name of the planet subtypeid you want to restrict. Setting: NpcGridNameBlacklist XML: <NpcGridNameBlacklist> <string>Value1</string> <string>Value2</string> </NpcGridNameBlacklist> Chat Command (Add): /MES.Settings.General.NpcGridNameBlacklist.Add.Value Chat Command (Remove): /MES.Settings.General.NpcGridNameBlacklist.Remove.Value Description: This setting allows you to specify one or more grid names that will be automatically deleted if spawned with NPC ownership. To add more names to the list, simply create a new line between the <NpcGridNameBlacklist> and </NpcGridNameBlacklist> tags and enter the following <string>Value</string> - Replace Value with the exact name of the grid you want to BlackList. Setting: NpcSpawnGroupBlacklist XML: <NpcSpawnGroupBlacklist> <string>Value1</string> <string>Value2</string> </NpcSpawnGroupBlacklist> Chat Command (Add): /MES.Settings.General.NpcSpawnGroupBlacklist.Add.Value Chat Command (Remove): /MES.Settings.General.NpcSpawnGroupBlacklist.Remove.Value Description: This setting allows you to specify one or more SpawnGroups (using their SubtypeIds) that will be removed from the mod spawning pool. To add more groups to the list, simply create a new line between the <NpcSpawnGroupBlacklist> and </NpcSpawnGroupBlacklist> tags and enter the following <string>Value</string> - Replace Value with the exact name of the SpawnGroup SubtypeId you want to BlackList.","title":"AdminConfig_General.md"},{"location":"AdminConfig_Grid/","text":"AdminConfig_Grid.md You can find the Grids Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-Grids.xml . The settings you can modify are listed below: Setting: EnableGlobalNPCWeaponRandomizer XML: <EnableGlobalNPCWeaponRandomizer>Value</EnableGlobalNPCWeaponRandomizer> Chat Command: /MES.Settings.Grids.EnableGlobalNPCWeaponRandomizer.Value Description: This setting allows you to specify if NPC spawns should all have their weapons randomized. This is the same behavior provided by the NPC Weapon Upgrades mod. Value can be replaced with true or false Setting: EnableGlobalNPCShieldProvider XML: <EnableGlobalNPCShieldProvider>Value</EnableGlobalNPCShieldProvider> Chat Command: /MES.Settings.Grids.EnableGlobalNPCShieldProvider.Value Description: This setting allows you to specify if NPC spawns should have Defense Shield blocks added. This is the same behavior provided by the NPC Defense Shield Provider mod. Value can be replaced with true or false Setting: RandomWeaponChance XML: <RandomWeaponChance>Value</RandomWeaponChance> Chat Command: /MES.Settings.Grids.RandomWeaponChance.Value Description: This setting allows you to control the odds (out of 100) that a spawned grid will receive randomized weapons if using the EnableGlobalNPCWeaponRandomizer option (or the NPC Weapons Upgrades mod). SpawnGroups that enable randomized weapons on their own do not use this value. Setting: RandomWeaponSizeVariance XML: <RandomWeaponSizeVariance>Value</RandomWeaponSizeVariance> Chat Command: /MES.Settings.Grids.RandomWeaponSizeVariance.Value Description: This setting allows you to control the size variance of weapons that are replaced with the Weapon Randomizer / NPC Weapon Upgrades. The default value of -1 does not check for any variance. If set to 0 , then replaced weapons would need to be an exact match in size to be replaced. If set to a value like 2 , then the weapons allowed to be used for replacement can be 2 blocks bigger or smaller in all directions (X,Y,Z). Setting: WeaponReplacerBlacklist XML: <WeaponReplacerBlacklist> <string>Value1</string> <string>Value2</string> </WeaponReplacerBlacklist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerBlacklist.Remove.Value Description: This setting allows you to specify one or more Weapons that will not be used in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerBlacklist> and </WeaponReplacerBlacklist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Blacklist. Setting: WeaponReplacerWhitelist XML: <WeaponReplacerWhitelist> <string>Value1</string> <string>Value2</string> </WeaponReplacerWhitelist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerWhitelist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerWhitelist.Remove.Value Description: This setting allows you to specify one or more Weapons that will only be used in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerWhitelist> and </WeaponReplacerWhitelist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Whitelist. Setting: WeaponReplacerTargetBlacklist XML: <WeaponReplacerTargetBlacklist> <string>Value1</string> <string>Value2</string> </WeaponReplacerTargetBlacklist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerTargetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerTargetBlacklist.Remove.Value Description: This setting allows you to specify one or more Weapons that will not be replaced by random weapons in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerTargetBlacklist> and </WeaponReplacerTargetBlacklist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Blacklist. Setting: WeaponReplacerTargetWhitelist XML: <WeaponReplacerTargetWhitelist> <string>Value1</string> <string>Value2</string> </WeaponReplacerTargetWhitelist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerTargetWhitelist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerTargetWhitelist.Remove.Value Description: This setting allows you to specify one or more Weapons that will only be replaced in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerTargetWhitelist> and </WeaponReplacerTargetWhitelist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Whitelist. Setting: WeaponReplacerUseTotalGridMassMultiplier XML: <WeaponReplacerUseTotalGridMassMultiplier>Value</WeaponReplacerUseTotalGridMassMultiplier> Chat Command: /MES.Settings.Grids.WeaponReplacerUseTotalGridMassMultiplier.Value Description: This setting allows you to specify if randomized weapons should be limited by weight based on the total extra weight added to the grid. Value can be replaced with true or false Setting: WeaponReplacerTotalGridMassMultiplier XML: <WeaponReplacerTotalGridMassMultiplier>Value</WeaponReplacerTotalGridMassMultiplier> Chat Command: /MES.Settings.Grids.WeaponReplacerTotalGridMassMultiplier.Value Description: This setting allows you to specify the multiplier of weight that randomized weapons are allowed to increase the grid mass by if using WeaponReplacerUseTotalGridMassMultiplier . Example: If set to 1.5 , then the total grid mass would be allowed to be increased to no higher than 150% of its original weight. You can provide any number for this value. Setting: ShieldProviderChance XML: <ShieldProviderChance>Value</ShieldProviderChance> Chat Command: /MES.Settings.Grids.ShieldProviderChance.Value Description: This setting allows you to control the odds (out of 100) that a spawned grid will receive Defense Shields blocks if using the EnableGlobalNPCShieldProvider option (or the NPC Defense Shields Provider mod). SpawnGroups that enable Defense Shields on their own do not use this value. Setting: UseGlobalBlockReplacer XML: <UseGlobalBlockReplacer>Value</UseGlobalBlockReplacer> Chat Command: /MES.Settings.Grids.UseGlobalBlockReplacer.Value Description: This setting allows you to enable or disable the Global Block Replacement functionality in MES. With this enabled, you can specify block pairs or profiles that will replace blocks in all prefabs spawned through MES. Value can be replaced with true or false Setting: GlobalBlockReplacerReference XML: <GlobalBlockReplacerReference> <string>Value1</string> <string>Value2</string> </GlobalBlockReplacerReference> Chat Command (Add): /MES.Settings.Grids.GlobalBlockReplacerReference.Add.Value Chat Command (Remove): /MES.Settings.Grids.GlobalBlockReplacerReference.Remove.Value Description: This setting allows you to specify one or more Block Replacement Pairs that will be used if GlobalBlockReplacer is enabled. To add more pairs to the list, simply create a new line between the <GlobalBlockReplacerReference> and </GlobalBlockReplacerReference> tags and enter the following <string>Value</string> - Value is replaced with two block IDs, separated with the \\| symbol (eg: MyObjectBuilder_LargeGatlingTurret/(null)\\|MyObjectBuilder_LargeMissileTurret/(null) ). Block IDs can be easily retrieved using the chat command /MES.GetBlockDefinitions . Setting: GlobalBlockReplacerProfiles XML: <GlobalBlockReplacerProfiles> <string>Value1</string> <string>Value2</string> </GlobalBlockReplacerProfiles> Chat Command (Add): /MES.Settings.Grids.GlobalBlockReplacerProfiles.Add.Value Chat Command (Remove): /MES.Settings.Grids.GlobalBlockReplacerProfiles.Remove.Value Description: This setting allows you to specify one or more Block Replacement Profiles that will be used if GlobalBlockReplacer is enabled. To add more profiles to the list, simply create a new line between the <GlobalBlockReplacerProfiles> and </GlobalBlockReplacerProfiles> tags and enter the following <string>Value</string> - Value is replaced with the name of the Block Replacement Profile. Profile names can be found here . Setting: UseNonPhysicalAmmoForNPCs XML: <UseNonPhysicalAmmoForNPCs>Value</UseNonPhysicalAmmoForNPCs> Chat Command: /MES.Settings.Grids.UseNonPhysicalAmmoForNPCs.Value Description: This setting allows you to replace all physical ammo in NPC grids with non-physical ammo, meaning they will not drop ammo when weapons are destroyed or hacked. This can be useful for increasing the difficulty of your play-through. Value can be replaced with true or false Setting: RemoveContainerInventoryFromNPCs XML: <RemoveContainerInventoryFromNPCs>Value</RemoveContainerInventoryFromNPCs> Chat Command: /MES.Settings.Grids.RemoveContainerInventoryFromNPCs.Value Description: This setting allows you to remove any inventory items in the containers of NPC grids when spawned. This can be useful for increasing the difficulty of your play-through. Value can be replaced with true or false Setting: UseMaxAmmoInventoryWeight XML: <UseMaxAmmoInventoryWeight>Value</UseMaxAmmoInventoryWeight> Chat Command: /MES.Settings.Grids.UseMaxAmmoInventoryWeight.Value Description: This setting allows you to control the maximum weight of all ammo added to a grid when it is being auto-replenished at spawn. This can help address issues where modded weapons using heavy ammo can weigh a ship down so much it cannot maintain flight. Value can be replaced with true or false Setting: MaxAmmoInventoryWeight XML: <MaxAmmoInventoryWeight>Value</MaxAmmoInventoryWeight> Chat Command: /MES.Settings.Grids.MaxAmmoInventoryWeight.Value Description: This setting allows you to determine the maximum weapon inventory mass that is allowed to be filled with ammo if using the UseMaxAmmoInventoryWeight option. Value should be any number greater than 0 Setting: RandomizedWeaponsUseFullRange XML: <RandomizedWeaponsUseFullRange>Value</RandomizedWeaponsUseFullRange> Chat Command: /MES.Settings.Grids.RandomizedWeaponsUseFullRange.Value Description: This setting specifies whether NPCs with Randomized Weapons should have their weapon ranges maximized at spawn. May conflict with Behavior controls that manually set weapon ranges. Value can be replaced with true or false Setting: GlobalReplenishmentProfiles XML: <GlobalReplenishmentProfiles> <string>Value1</string> <string>Value2</string> </GlobalReplenishmentProfiles> Chat Command (Add): /MES.Settings.Grids.GlobalReplenishmentProfiles.Add.Value Chat Command (Remove): /MES.Settings.Grids.GlobalReplenishmentProfiles.Remove.Value Description: This setting allows you to specify one or more Global Replenishment Profile names that are used to restrict how much inventory a grid receives when its systems are replenished at spawn. Value should be replaced with any Replenishment Profile SubtypeId.","title":"AdminConfig_Grid.md"},{"location":"AdminConfig_Grid/#adminconfig_gridmd","text":"You can find the Grids Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-Grids.xml . The settings you can modify are listed below: Setting: EnableGlobalNPCWeaponRandomizer XML: <EnableGlobalNPCWeaponRandomizer>Value</EnableGlobalNPCWeaponRandomizer> Chat Command: /MES.Settings.Grids.EnableGlobalNPCWeaponRandomizer.Value Description: This setting allows you to specify if NPC spawns should all have their weapons randomized. This is the same behavior provided by the NPC Weapon Upgrades mod. Value can be replaced with true or false Setting: EnableGlobalNPCShieldProvider XML: <EnableGlobalNPCShieldProvider>Value</EnableGlobalNPCShieldProvider> Chat Command: /MES.Settings.Grids.EnableGlobalNPCShieldProvider.Value Description: This setting allows you to specify if NPC spawns should have Defense Shield blocks added. This is the same behavior provided by the NPC Defense Shield Provider mod. Value can be replaced with true or false Setting: RandomWeaponChance XML: <RandomWeaponChance>Value</RandomWeaponChance> Chat Command: /MES.Settings.Grids.RandomWeaponChance.Value Description: This setting allows you to control the odds (out of 100) that a spawned grid will receive randomized weapons if using the EnableGlobalNPCWeaponRandomizer option (or the NPC Weapons Upgrades mod). SpawnGroups that enable randomized weapons on their own do not use this value. Setting: RandomWeaponSizeVariance XML: <RandomWeaponSizeVariance>Value</RandomWeaponSizeVariance> Chat Command: /MES.Settings.Grids.RandomWeaponSizeVariance.Value Description: This setting allows you to control the size variance of weapons that are replaced with the Weapon Randomizer / NPC Weapon Upgrades. The default value of -1 does not check for any variance. If set to 0 , then replaced weapons would need to be an exact match in size to be replaced. If set to a value like 2 , then the weapons allowed to be used for replacement can be 2 blocks bigger or smaller in all directions (X,Y,Z). Setting: WeaponReplacerBlacklist XML: <WeaponReplacerBlacklist> <string>Value1</string> <string>Value2</string> </WeaponReplacerBlacklist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerBlacklist.Remove.Value Description: This setting allows you to specify one or more Weapons that will not be used in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerBlacklist> and </WeaponReplacerBlacklist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Blacklist. Setting: WeaponReplacerWhitelist XML: <WeaponReplacerWhitelist> <string>Value1</string> <string>Value2</string> </WeaponReplacerWhitelist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerWhitelist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerWhitelist.Remove.Value Description: This setting allows you to specify one or more Weapons that will only be used in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerWhitelist> and </WeaponReplacerWhitelist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Whitelist. Setting: WeaponReplacerTargetBlacklist XML: <WeaponReplacerTargetBlacklist> <string>Value1</string> <string>Value2</string> </WeaponReplacerTargetBlacklist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerTargetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerTargetBlacklist.Remove.Value Description: This setting allows you to specify one or more Weapons that will not be replaced by random weapons in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerTargetBlacklist> and </WeaponReplacerTargetBlacklist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Blacklist. Setting: WeaponReplacerTargetWhitelist XML: <WeaponReplacerTargetWhitelist> <string>Value1</string> <string>Value2</string> </WeaponReplacerTargetWhitelist> Chat Command (Add): /MES.Settings.Grids.WeaponReplacerTargetWhitelist.Add.Value Chat Command (Remove): /MES.Settings.Grids.WeaponReplacerTargetWhitelist.Remove.Value Description: This setting allows you to specify one or more Weapons that will only be replaced in NPC Weapon Randomization. To add more weapons to the list, simply create a new line between the <WeaponReplacerTargetWhitelist> and </WeaponReplacerTargetWhitelist> tags and enter the following <string>Value</string> - Replace Value either the SubtypeName, DefinitionId, or ModID of the weapon(s) you want to Whitelist. Setting: WeaponReplacerUseTotalGridMassMultiplier XML: <WeaponReplacerUseTotalGridMassMultiplier>Value</WeaponReplacerUseTotalGridMassMultiplier> Chat Command: /MES.Settings.Grids.WeaponReplacerUseTotalGridMassMultiplier.Value Description: This setting allows you to specify if randomized weapons should be limited by weight based on the total extra weight added to the grid. Value can be replaced with true or false Setting: WeaponReplacerTotalGridMassMultiplier XML: <WeaponReplacerTotalGridMassMultiplier>Value</WeaponReplacerTotalGridMassMultiplier> Chat Command: /MES.Settings.Grids.WeaponReplacerTotalGridMassMultiplier.Value Description: This setting allows you to specify the multiplier of weight that randomized weapons are allowed to increase the grid mass by if using WeaponReplacerUseTotalGridMassMultiplier . Example: If set to 1.5 , then the total grid mass would be allowed to be increased to no higher than 150% of its original weight. You can provide any number for this value. Setting: ShieldProviderChance XML: <ShieldProviderChance>Value</ShieldProviderChance> Chat Command: /MES.Settings.Grids.ShieldProviderChance.Value Description: This setting allows you to control the odds (out of 100) that a spawned grid will receive Defense Shields blocks if using the EnableGlobalNPCShieldProvider option (or the NPC Defense Shields Provider mod). SpawnGroups that enable Defense Shields on their own do not use this value. Setting: UseGlobalBlockReplacer XML: <UseGlobalBlockReplacer>Value</UseGlobalBlockReplacer> Chat Command: /MES.Settings.Grids.UseGlobalBlockReplacer.Value Description: This setting allows you to enable or disable the Global Block Replacement functionality in MES. With this enabled, you can specify block pairs or profiles that will replace blocks in all prefabs spawned through MES. Value can be replaced with true or false Setting: GlobalBlockReplacerReference XML: <GlobalBlockReplacerReference> <string>Value1</string> <string>Value2</string> </GlobalBlockReplacerReference> Chat Command (Add): /MES.Settings.Grids.GlobalBlockReplacerReference.Add.Value Chat Command (Remove): /MES.Settings.Grids.GlobalBlockReplacerReference.Remove.Value Description: This setting allows you to specify one or more Block Replacement Pairs that will be used if GlobalBlockReplacer is enabled. To add more pairs to the list, simply create a new line between the <GlobalBlockReplacerReference> and </GlobalBlockReplacerReference> tags and enter the following <string>Value</string> - Value is replaced with two block IDs, separated with the \\| symbol (eg: MyObjectBuilder_LargeGatlingTurret/(null)\\|MyObjectBuilder_LargeMissileTurret/(null) ). Block IDs can be easily retrieved using the chat command /MES.GetBlockDefinitions . Setting: GlobalBlockReplacerProfiles XML: <GlobalBlockReplacerProfiles> <string>Value1</string> <string>Value2</string> </GlobalBlockReplacerProfiles> Chat Command (Add): /MES.Settings.Grids.GlobalBlockReplacerProfiles.Add.Value Chat Command (Remove): /MES.Settings.Grids.GlobalBlockReplacerProfiles.Remove.Value Description: This setting allows you to specify one or more Block Replacement Profiles that will be used if GlobalBlockReplacer is enabled. To add more profiles to the list, simply create a new line between the <GlobalBlockReplacerProfiles> and </GlobalBlockReplacerProfiles> tags and enter the following <string>Value</string> - Value is replaced with the name of the Block Replacement Profile. Profile names can be found here . Setting: UseNonPhysicalAmmoForNPCs XML: <UseNonPhysicalAmmoForNPCs>Value</UseNonPhysicalAmmoForNPCs> Chat Command: /MES.Settings.Grids.UseNonPhysicalAmmoForNPCs.Value Description: This setting allows you to replace all physical ammo in NPC grids with non-physical ammo, meaning they will not drop ammo when weapons are destroyed or hacked. This can be useful for increasing the difficulty of your play-through. Value can be replaced with true or false Setting: RemoveContainerInventoryFromNPCs XML: <RemoveContainerInventoryFromNPCs>Value</RemoveContainerInventoryFromNPCs> Chat Command: /MES.Settings.Grids.RemoveContainerInventoryFromNPCs.Value Description: This setting allows you to remove any inventory items in the containers of NPC grids when spawned. This can be useful for increasing the difficulty of your play-through. Value can be replaced with true or false Setting: UseMaxAmmoInventoryWeight XML: <UseMaxAmmoInventoryWeight>Value</UseMaxAmmoInventoryWeight> Chat Command: /MES.Settings.Grids.UseMaxAmmoInventoryWeight.Value Description: This setting allows you to control the maximum weight of all ammo added to a grid when it is being auto-replenished at spawn. This can help address issues where modded weapons using heavy ammo can weigh a ship down so much it cannot maintain flight. Value can be replaced with true or false Setting: MaxAmmoInventoryWeight XML: <MaxAmmoInventoryWeight>Value</MaxAmmoInventoryWeight> Chat Command: /MES.Settings.Grids.MaxAmmoInventoryWeight.Value Description: This setting allows you to determine the maximum weapon inventory mass that is allowed to be filled with ammo if using the UseMaxAmmoInventoryWeight option. Value should be any number greater than 0 Setting: RandomizedWeaponsUseFullRange XML: <RandomizedWeaponsUseFullRange>Value</RandomizedWeaponsUseFullRange> Chat Command: /MES.Settings.Grids.RandomizedWeaponsUseFullRange.Value Description: This setting specifies whether NPCs with Randomized Weapons should have their weapon ranges maximized at spawn. May conflict with Behavior controls that manually set weapon ranges. Value can be replaced with true or false Setting: GlobalReplenishmentProfiles XML: <GlobalReplenishmentProfiles> <string>Value1</string> <string>Value2</string> </GlobalReplenishmentProfiles> Chat Command (Add): /MES.Settings.Grids.GlobalReplenishmentProfiles.Add.Value Chat Command (Remove): /MES.Settings.Grids.GlobalReplenishmentProfiles.Remove.Value Description: This setting allows you to specify one or more Global Replenishment Profile names that are used to restrict how much inventory a grid receives when its systems are replenished at spawn. Value should be replaced with any Replenishment Profile SubtypeId.","title":"AdminConfig_Grid.md"},{"location":"AdminConfig_Planetary%20Cargo%20Ships/","text":"AdminConfig_Planetary Cargo Ships.md You can find the Planetary Cargo Ships Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-PlanetaryCargoShips.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.PlanetaryCargoShips.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: FirstSpawnTime XML: <FirstSpawnTime>Value</FirstSpawnTime> Chat Command: /MES.Settings.PlanetaryCargoShips.FirstSpawnTime.Value Description: This setting allows you to set how long (in seconds) after the game starts until the first Cargo Ship Spawn Event triggers. Value can be replaced with any integer number (no lower than 0 ). Setting: MinSpawnTime XML: <MinSpawnTime>Value</MinSpawnTime> Chat Command: /MES.Settings.PlanetaryCargoShips.MinSpawnTime.Value Description: This setting allows you to set the minimum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxSpawnTime ). Setting: MaxSpawnTime XML: <MaxSpawnTime>Value</MaxSpawnTime> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawnTime.Value Description: This setting allows you to set the maximum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be higher than MinSpawnTime ). Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxShipsPerArea.Value Description: This setting allows you to specify how many Planetary Cargo Ships can be present in a specified distance from the player. If there are more than the Value in this setting, then no other ships will spawn. The area size is determined in the AreaSize setting below. Value can be replaced with any integer number (no lower than 0 ). Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.PlanetaryCargoShips.AreaSize.Value Description: This setting allows you to specify the area radius when checking for existing Planetary Cargo Ships for MaxShipsPerArea . Value can be replaced with any number (no lower than 0 ). Setting: MaxSpawnAttempts XML: <MaxSpawnAttempts>Value</MaxSpawnAttempts> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawnAttempts.Value Description: This setting allows you to specify how many times the spawner should attempt to find a valid random travel path for the Cargo Ship during the spawning phase. Value can be replaced with any integer number (no lower than 0 ). Setting: PlayerSurfaceAltitude XML: <PlayerSurfaceAltitude>Value</PlayerSurfaceAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.PlayerSurfaceAltitude.Value Description: This setting allows you to specify the minimum altitude from the surface the player must be for a Planetary Cargo Ship spawn event to trigger. Value can be any number higher than 0 Setting: MinPathDistanceFromPlayer XML: <MinPathDistanceFromPlayer>Value</MinPathDistanceFromPlayer> Chat Command: /MES.Settings.PlanetaryCargoShips.MinPathDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance the Cargo Ship travel path should be created from the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistanceFromPlayer ). Setting: MaxPathDistanceFromPlayer XML: <MaxPathDistanceFromPlayer>Value</MaxPathDistanceFromPlayer> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxPathDistanceFromPlayer.Value Description: This setting allows you to specify the maximum distance the Cargo Ship travel path should be created from the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be higher than MinPathDistanceFromPlayer ). Setting: MinSpawnFromGrids XML: <MinSpawnFromGrids>Value</MinSpawnFromGrids> Chat Command: /MES.Settings.PlanetaryCargoShips.MinSpawnFromGrids.Value Description: This setting allows you to specify the minimum distance the encounter should spawn from other grids and players. Value can be replaced with any number (no lower than 0 ). Setting: MinAirDensity XML: <MinAirDensity>Value</MinAirDensity> Chat Command: /MES.Settings.PlanetaryCargoShips.MinAirDensity.Value Description: This setting allows you to specify the minimum air density at the spawning coords in order for a Planetary Cargo Ship to spawn. This setting is ignored if the SpawnGroup is using the [PlanetRequiresAtmo:false] tag. Value can be any number between 0 and 1 . Setting: MinSpawningAltitude XML: <MinSpawningAltitude>Value</MinSpawningAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.MinSpawningAltitude.Value Description: This setting allows you to specify the minimum altitude from the surface a Planetary Cargo Ship can spawn. Value can be any number higher than 0 and lower than MaxSpawningAltitude Setting: MaxSpawningAltitude XML: <MaxSpawningAltitude>Value</MaxSpawningAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawningAltitude.Value Description: This setting allows you to specify the maximum altitude from the surface a Planetary Cargo Ship can spawn. Value can be any number higher than 0 and higher than MinSpawningAltitude Setting: MinPathAltitude XML: <MinPathAltitude>Value</MinPathAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.MinPathAltitude.Value Description: This setting allows you to specify the minimum altitude from the surface the cargo ship path should be from start to end. Value can be any number higher than 0 Setting: MinPathDistance XML: <MinPathDistance>Value</MinPathDistance> Chat Command: /MES.Settings.PlanetaryCargoShips.MinPathDistance.Value Description: This setting allows you to specify the minimum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistance ). Setting: MaxPathDistance XML: <MaxPathDistance>Value</MaxPathDistance> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxPathDistance.Value Description: This setting allows you to specify the maximum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MinPathDistance ). Setting: PathStepCheckDistance XML: <PathStepCheckDistance>Value</PathStepCheckDistance> Chat Command: /MES.Settings.PlanetaryCargoShips.PathStepCheckDistance.Value Description: This setting allows you to specify the distance increment that is used when the spawner checks the Cargo Ship travel path for obstructions / low terrain / etc. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromEndPath XML: <DespawnDistanceFromEndPath>Value</DespawnDistanceFromEndPath> Chat Command: /MES.Settings.PlanetaryCargoShips.DespawnDistanceFromEndPath.Value Description: This setting allows you to specify how far from the end of the Cargo Ship travel path the ship will initiate its despawn. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.PlanetaryCargoShips.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: UseMinimumSpeed XML: <UseMinimumSpeed>Value</UseMinimumSpeed> Chat Command: /MES.Settings.PlanetaryCargoShips.UseMinimumSpeed.Value Description: This setting allows you to specify if cargo ships should move at a minimum speed at spawn. If the speed limit specified in the spawn group is lower than the MinimumSpeed value, then that value will be applied. Value can be set to true or false Setting: MinimumSpeed XML: <MinimumSpeed>Value</MinimumSpeed> Chat Command: /MES.Settings.PlanetaryCargoShips.MinimumSpeed.Value Description: This setting allows you to specify the minimum speed a Cargo Ship should be moving at spawn if UseMinimumSpeed is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseSpeedOverride XML: <UseSpeedOverride>Value</UseSpeedOverride> Chat Command: /MES.Settings.PlanetaryCargoShips.UseSpeedOverride.Value Description: This setting allows you to specify if cargo ships should all use a specific speed. The SpeedOverride value would be the speed used. Value can be set to true or false Setting: SpeedOverride XML: <SpeedOverride>Value</SpeedOverride> Chat Command: /MES.Settings.PlanetaryCargoShips.SpeedOverride.Value Description: This setting allows you to specify the speed a Cargo Ship should be moving at spawn if UseSpeedOverride is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.PlanetaryCargoShips.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Planetary Cargo Ships if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Planetary Cargo Ships.md"},{"location":"AdminConfig_Planetary%20Cargo%20Ships/#adminconfig_planetary-cargo-shipsmd","text":"You can find the Planetary Cargo Ships Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-PlanetaryCargoShips.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.PlanetaryCargoShips.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: FirstSpawnTime XML: <FirstSpawnTime>Value</FirstSpawnTime> Chat Command: /MES.Settings.PlanetaryCargoShips.FirstSpawnTime.Value Description: This setting allows you to set how long (in seconds) after the game starts until the first Cargo Ship Spawn Event triggers. Value can be replaced with any integer number (no lower than 0 ). Setting: MinSpawnTime XML: <MinSpawnTime>Value</MinSpawnTime> Chat Command: /MES.Settings.PlanetaryCargoShips.MinSpawnTime.Value Description: This setting allows you to set the minimum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxSpawnTime ). Setting: MaxSpawnTime XML: <MaxSpawnTime>Value</MaxSpawnTime> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawnTime.Value Description: This setting allows you to set the maximum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be higher than MinSpawnTime ). Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxShipsPerArea.Value Description: This setting allows you to specify how many Planetary Cargo Ships can be present in a specified distance from the player. If there are more than the Value in this setting, then no other ships will spawn. The area size is determined in the AreaSize setting below. Value can be replaced with any integer number (no lower than 0 ). Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.PlanetaryCargoShips.AreaSize.Value Description: This setting allows you to specify the area radius when checking for existing Planetary Cargo Ships for MaxShipsPerArea . Value can be replaced with any number (no lower than 0 ). Setting: MaxSpawnAttempts XML: <MaxSpawnAttempts>Value</MaxSpawnAttempts> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawnAttempts.Value Description: This setting allows you to specify how many times the spawner should attempt to find a valid random travel path for the Cargo Ship during the spawning phase. Value can be replaced with any integer number (no lower than 0 ). Setting: PlayerSurfaceAltitude XML: <PlayerSurfaceAltitude>Value</PlayerSurfaceAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.PlayerSurfaceAltitude.Value Description: This setting allows you to specify the minimum altitude from the surface the player must be for a Planetary Cargo Ship spawn event to trigger. Value can be any number higher than 0 Setting: MinPathDistanceFromPlayer XML: <MinPathDistanceFromPlayer>Value</MinPathDistanceFromPlayer> Chat Command: /MES.Settings.PlanetaryCargoShips.MinPathDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance the Cargo Ship travel path should be created from the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistanceFromPlayer ). Setting: MaxPathDistanceFromPlayer XML: <MaxPathDistanceFromPlayer>Value</MaxPathDistanceFromPlayer> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxPathDistanceFromPlayer.Value Description: This setting allows you to specify the maximum distance the Cargo Ship travel path should be created from the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be higher than MinPathDistanceFromPlayer ). Setting: MinSpawnFromGrids XML: <MinSpawnFromGrids>Value</MinSpawnFromGrids> Chat Command: /MES.Settings.PlanetaryCargoShips.MinSpawnFromGrids.Value Description: This setting allows you to specify the minimum distance the encounter should spawn from other grids and players. Value can be replaced with any number (no lower than 0 ). Setting: MinAirDensity XML: <MinAirDensity>Value</MinAirDensity> Chat Command: /MES.Settings.PlanetaryCargoShips.MinAirDensity.Value Description: This setting allows you to specify the minimum air density at the spawning coords in order for a Planetary Cargo Ship to spawn. This setting is ignored if the SpawnGroup is using the [PlanetRequiresAtmo:false] tag. Value can be any number between 0 and 1 . Setting: MinSpawningAltitude XML: <MinSpawningAltitude>Value</MinSpawningAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.MinSpawningAltitude.Value Description: This setting allows you to specify the minimum altitude from the surface a Planetary Cargo Ship can spawn. Value can be any number higher than 0 and lower than MaxSpawningAltitude Setting: MaxSpawningAltitude XML: <MaxSpawningAltitude>Value</MaxSpawningAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawningAltitude.Value Description: This setting allows you to specify the maximum altitude from the surface a Planetary Cargo Ship can spawn. Value can be any number higher than 0 and higher than MinSpawningAltitude Setting: MinPathAltitude XML: <MinPathAltitude>Value</MinPathAltitude> Chat Command: /MES.Settings.PlanetaryCargoShips.MinPathAltitude.Value Description: This setting allows you to specify the minimum altitude from the surface the cargo ship path should be from start to end. Value can be any number higher than 0 Setting: MinPathDistance XML: <MinPathDistance>Value</MinPathDistance> Chat Command: /MES.Settings.PlanetaryCargoShips.MinPathDistance.Value Description: This setting allows you to specify the minimum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistance ). Setting: MaxPathDistance XML: <MaxPathDistance>Value</MaxPathDistance> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxPathDistance.Value Description: This setting allows you to specify the maximum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MinPathDistance ). Setting: PathStepCheckDistance XML: <PathStepCheckDistance>Value</PathStepCheckDistance> Chat Command: /MES.Settings.PlanetaryCargoShips.PathStepCheckDistance.Value Description: This setting allows you to specify the distance increment that is used when the spawner checks the Cargo Ship travel path for obstructions / low terrain / etc. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromEndPath XML: <DespawnDistanceFromEndPath>Value</DespawnDistanceFromEndPath> Chat Command: /MES.Settings.PlanetaryCargoShips.DespawnDistanceFromEndPath.Value Description: This setting allows you to specify how far from the end of the Cargo Ship travel path the ship will initiate its despawn. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.PlanetaryCargoShips.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: UseMinimumSpeed XML: <UseMinimumSpeed>Value</UseMinimumSpeed> Chat Command: /MES.Settings.PlanetaryCargoShips.UseMinimumSpeed.Value Description: This setting allows you to specify if cargo ships should move at a minimum speed at spawn. If the speed limit specified in the spawn group is lower than the MinimumSpeed value, then that value will be applied. Value can be set to true or false Setting: MinimumSpeed XML: <MinimumSpeed>Value</MinimumSpeed> Chat Command: /MES.Settings.PlanetaryCargoShips.MinimumSpeed.Value Description: This setting allows you to specify the minimum speed a Cargo Ship should be moving at spawn if UseMinimumSpeed is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseSpeedOverride XML: <UseSpeedOverride>Value</UseSpeedOverride> Chat Command: /MES.Settings.PlanetaryCargoShips.UseSpeedOverride.Value Description: This setting allows you to specify if cargo ships should all use a specific speed. The SpeedOverride value would be the speed used. Value can be set to true or false Setting: SpeedOverride XML: <SpeedOverride>Value</SpeedOverride> Chat Command: /MES.Settings.PlanetaryCargoShips.SpeedOverride.Value Description: This setting allows you to specify the speed a Cargo Ship should be moving at spawn if UseSpeedOverride is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.PlanetaryCargoShips.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.PlanetaryCargoShips.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Planetary Cargo Ships if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Planetary Cargo Ships.md"},{"location":"AdminConfig_Planetary%20Installations/","text":"AdminConfig_Planetary Installations.md You can find the Planetary Installations Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-PlanetaryInstallations.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.PlanetaryInstallations.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: PlayerSpawnCooldown XML: <PlayerSpawnCooldown>Value</PlayerSpawnCooldown> Chat Command: /MES.Settings.PlanetaryInstallations.PlayerSpawnCooldown.Value Description: This setting allows you to specify the cooldown time (in seconds) after a Planetary Installation appears before another one can appear for the player. Value can be any integer number (should not be 0 or lower) Setting: SpawnTimerTrigger XML: <SpawnTimerTrigger>Value</SpawnTimerTrigger> Chat Command: /MES.Settings.PlanetaryInstallations.SpawnTimerTrigger.Value Description: This setting allows you to specify how often the script should measure the player's distance to see if they've travelled far enough to trigger a Planetary Installation spawn. Value can be any integer number (should not be 0 or lower) Setting: PlayerDistanceSpawnTrigger XML: <PlayerDistanceSpawnTrigger>Value</PlayerDistanceSpawnTrigger> Chat Command: /MES.Settings.PlanetaryInstallations.PlayerDistanceSpawnTrigger.Value Description: This settings allows you to specify the distance a player must travel in space before a Planetary Installation will spawn. Value can be any number (should not be 0 or lower) Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.PlanetaryInstallations.MaxShipsPerArea.Value Description: This setting allows you to specify if there can should be a maximum amount of Planetary Installation grids near the player area. The AreaSize property below specifies the radius to check. Value can be replaced with any integer number (no lower than 0 ). Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.PlanetaryInstallations.AreaSize.Value Description: This setting allows you to specify the area to check for existing Planetary Installation if MaxShipsPerArea is set to true . Value can be any number (should not be 0 or lower) Setting: PlayerMaximumDistanceFromSurface XML: <PlayerMaximumDistanceFromSurface>Value</PlayerMaximumDistanceFromSurface> Chat Command: /MES.Settings.PlanetaryInstallations.PlayerMaximumDistanceFromSurface.Value Description: This setting allows you to specify the maximum altitude from the surface the player must be for a Planetary Installation spawn event to trigger. Value can be any number higher than 0 Setting: MinimumSpawnDistanceFromPlayers XML: <MinimumSpawnDistanceFromPlayers>Value</MinimumSpawnDistanceFromPlayers> Chat Command: /MES.Settings.PlanetaryInstallations.MinimumSpawnDistanceFromPlayers.Value Description: This setting allows you to specify the minimum distance from the player that the station(s) will appear. Value can be any number higher than 0 and lower than MaximumSpawnDistanceFromPlayers Setting: MaximumSpawnDistanceFromPlayers XML: <MaximumSpawnDistanceFromPlayers>Value</MaximumSpawnDistanceFromPlayers> Chat Command: /MES.Settings.PlanetaryInstallations.MaximumSpawnDistanceFromPlayers.Value Description: This setting allows you to specify the maximum distance from the player that the station(s) will appear. Value can be any number higher than 0 and higher than MinimumSpawnDistanceFromPlayers Setting: AggressivePathCheck XML: <AggressivePathCheck>Value</AggressivePathCheck> Chat Command: /MES.Settings.PlanetaryInstallations.AggressivePathCheck.Value Description: This setting allows you to specify if the mod should perform terrain checks in 8 directions from the player. If set to false , the mod will only perform checks in 4 directions, which may result in a lower chance of finding a suitable spot to spawn the station(s). Value can be true or false Setting: SearchPathIncrement XML: <SearchPathIncrement>Value</SearchPathIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.SearchPathIncrement.Value Description: This setting allows you to specify the distance to the next terrain surface check area if a previous check fails. Value can be any number higher than 0 . Setting: MinimumSpawnDistanceFromOtherGrids XML: <MinimumSpawnDistanceFromOtherGrids>Value</MinimumSpawnDistanceFromOtherGrids> Chat Command: /MES.Settings.PlanetaryInstallations.MinimumSpawnDistanceFromOtherGrids.Value Description: This setting allows you to specify the minimum distance from other grids and players the station spawn coordinates must be. Value can be any number higher than 0 . Setting: MinimumTerrainVariance XML: <MinimumTerrainVariance>Value</MinimumTerrainVariance> Chat Command: /MES.Settings.PlanetaryInstallations.MinimumTerrainVariance.Value Description: This setting allows you to specify the minimum terrain variance that is allowed when checking a potential area for spawn coordinates. Value can be any number lower than 0 . Setting: MaximumTerrainVariance XML: <MaximumTerrainVariance>Value</MaximumTerrainVariance> Chat Command: /MES.Settings.PlanetaryInstallations.MaximumTerrainVariance.Value Description: This setting allows you to specify the maximum terrain variance that is allowed when checking a potential area for spawn coordinates. Value can be any number higher than 0 . Setting: AggressiveTerrainCheck XML: <AggressiveTerrainCheck>Value</AggressiveTerrainCheck> Chat Command: /MES.Settings.PlanetaryInstallations.AggressiveTerrainCheck.Value Description: This setting allows you to specify if the mod should check a potenial spawning area in 8 directions to ensure the terrain is level (using MinimumTerrainVariance and MaximumTerrainVariance ). If set to false , only 4 directions will be used, which could result in more uneven terrain being used to spawn stations. Value can be true or false . Setting: TerrainCheckIncrementDistance XML: <TerrainCheckIncrementDistance>Value</TerrainCheckIncrementDistance> Chat Command: /MES.Settings.PlanetaryInstallations.TerrainCheckIncrementDistance.Value Description: This setting allows you to specify how far each directional step from the proposed spawn coords should be checked. Value can be any number higher than 0 Setting: SmallTerrainCheckDistance XML: <SmallTerrainCheckDistance>Value</SmallTerrainCheckDistance> Chat Command: /MES.Settings.PlanetaryInstallations.SmallTerrainCheckDistance.Value Description: This setting allows you to specify how far from the proposed spawn coords should be checked for small stations. Value can be any number higher than 0 Setting: MediumSpawnChanceBaseValue XML: <MediumSpawnChanceBaseValue>Value</MediumSpawnChanceBaseValue> Chat Command: /MES.Settings.PlanetaryInstallations.MediumSpawnChanceBaseValue.Value Description: This setting allows you to specify the base chance a medium station has of appearing instead of a small station. Value can be any integer number between 0 and 100 . Setting: MediumSpawnChanceIncrement XML: <MediumSpawnChanceIncrement>Value</MediumSpawnChanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.MediumSpawnChanceIncrement.Value Description: This setting allows you to specify how much the MediumSpawnChanceBaseValue increases for every small station that spawns. Value can be any integer number between 0 and 100 . Setting: MediumSpawnDistanceIncrement XML: <MediumSpawnDistanceIncrement>Value</MediumSpawnDistanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.MediumSpawnDistanceIncrement.Value Description: This setting allows you to specify the additional distance from players that is added to MinimumSpawnDistanceFromPlayers and MaximumSpawnDistanceFromPlayers when spawning a medium station. Value can be any number higher than 0 Setting: MediumTerrainCheckDistance XML: <MediumTerrainCheckDistance>Value</MediumTerrainCheckDistance> Chat Command: /MES.Settings.PlanetaryInstallations.MediumTerrainCheckDistance.Value Description: This setting allows you to specify how far from the proposed spawn coords should be checked for medium stations. Value can be any number higher than 0 Setting: LargeSpawnChanceBaseValue XML: <LargeSpawnChanceBaseValue>Value</LargeSpawnChanceBaseValue> Chat Command: /MES.Settings.PlanetaryInstallations.LargeSpawnChanceBaseValue.Value Description: This setting allows you to specify the base chance a large station has of appearing instead of a medium station. Value can be any integer number between 0 and 100 . Setting: LargeSpawnChanceIncrement XML: <LargeSpawnChanceIncrement>Value</LargeSpawnChanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.LargeSpawnChanceIncrement.Value Description: This setting allows you to specify how much the LargeSpawnChanceBaseValue increases for every medium station that spawns. Value can be any integer number between 0 and 100 . Setting: LargeSpawnDistanceIncrement XML: <LargeSpawnDistanceIncrement>Value</LargeSpawnDistanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.LargeSpawnDistanceIncrement.Value Description: This setting allows you to specify the additional distance from players that is added to MinimumSpawnDistanceFromPlayers and MaximumSpawnDistanceFromPlayers when spawning a large station. Value can be any number higher than 0 Setting: LargeTerrainCheckDistance XML: <LargeTerrainCheckDistance>Value</LargeTerrainCheckDistance> Chat Command: /MES.Settings.PlanetaryInstallations.LargeTerrainCheckDistance.Value Description: This setting allows you to specify how far from the proposed spawn coords should be checked for large stations. Value can be any number higher than 0 Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Planetary Installations if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Planetary Installations.md"},{"location":"AdminConfig_Planetary%20Installations/#adminconfig_planetary-installationsmd","text":"You can find the Planetary Installations Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-PlanetaryInstallations.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.PlanetaryInstallations.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: PlayerSpawnCooldown XML: <PlayerSpawnCooldown>Value</PlayerSpawnCooldown> Chat Command: /MES.Settings.PlanetaryInstallations.PlayerSpawnCooldown.Value Description: This setting allows you to specify the cooldown time (in seconds) after a Planetary Installation appears before another one can appear for the player. Value can be any integer number (should not be 0 or lower) Setting: SpawnTimerTrigger XML: <SpawnTimerTrigger>Value</SpawnTimerTrigger> Chat Command: /MES.Settings.PlanetaryInstallations.SpawnTimerTrigger.Value Description: This setting allows you to specify how often the script should measure the player's distance to see if they've travelled far enough to trigger a Planetary Installation spawn. Value can be any integer number (should not be 0 or lower) Setting: PlayerDistanceSpawnTrigger XML: <PlayerDistanceSpawnTrigger>Value</PlayerDistanceSpawnTrigger> Chat Command: /MES.Settings.PlanetaryInstallations.PlayerDistanceSpawnTrigger.Value Description: This settings allows you to specify the distance a player must travel in space before a Planetary Installation will spawn. Value can be any number (should not be 0 or lower) Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.PlanetaryInstallations.MaxShipsPerArea.Value Description: This setting allows you to specify if there can should be a maximum amount of Planetary Installation grids near the player area. The AreaSize property below specifies the radius to check. Value can be replaced with any integer number (no lower than 0 ). Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.PlanetaryInstallations.AreaSize.Value Description: This setting allows you to specify the area to check for existing Planetary Installation if MaxShipsPerArea is set to true . Value can be any number (should not be 0 or lower) Setting: PlayerMaximumDistanceFromSurface XML: <PlayerMaximumDistanceFromSurface>Value</PlayerMaximumDistanceFromSurface> Chat Command: /MES.Settings.PlanetaryInstallations.PlayerMaximumDistanceFromSurface.Value Description: This setting allows you to specify the maximum altitude from the surface the player must be for a Planetary Installation spawn event to trigger. Value can be any number higher than 0 Setting: MinimumSpawnDistanceFromPlayers XML: <MinimumSpawnDistanceFromPlayers>Value</MinimumSpawnDistanceFromPlayers> Chat Command: /MES.Settings.PlanetaryInstallations.MinimumSpawnDistanceFromPlayers.Value Description: This setting allows you to specify the minimum distance from the player that the station(s) will appear. Value can be any number higher than 0 and lower than MaximumSpawnDistanceFromPlayers Setting: MaximumSpawnDistanceFromPlayers XML: <MaximumSpawnDistanceFromPlayers>Value</MaximumSpawnDistanceFromPlayers> Chat Command: /MES.Settings.PlanetaryInstallations.MaximumSpawnDistanceFromPlayers.Value Description: This setting allows you to specify the maximum distance from the player that the station(s) will appear. Value can be any number higher than 0 and higher than MinimumSpawnDistanceFromPlayers Setting: AggressivePathCheck XML: <AggressivePathCheck>Value</AggressivePathCheck> Chat Command: /MES.Settings.PlanetaryInstallations.AggressivePathCheck.Value Description: This setting allows you to specify if the mod should perform terrain checks in 8 directions from the player. If set to false , the mod will only perform checks in 4 directions, which may result in a lower chance of finding a suitable spot to spawn the station(s). Value can be true or false Setting: SearchPathIncrement XML: <SearchPathIncrement>Value</SearchPathIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.SearchPathIncrement.Value Description: This setting allows you to specify the distance to the next terrain surface check area if a previous check fails. Value can be any number higher than 0 . Setting: MinimumSpawnDistanceFromOtherGrids XML: <MinimumSpawnDistanceFromOtherGrids>Value</MinimumSpawnDistanceFromOtherGrids> Chat Command: /MES.Settings.PlanetaryInstallations.MinimumSpawnDistanceFromOtherGrids.Value Description: This setting allows you to specify the minimum distance from other grids and players the station spawn coordinates must be. Value can be any number higher than 0 . Setting: MinimumTerrainVariance XML: <MinimumTerrainVariance>Value</MinimumTerrainVariance> Chat Command: /MES.Settings.PlanetaryInstallations.MinimumTerrainVariance.Value Description: This setting allows you to specify the minimum terrain variance that is allowed when checking a potential area for spawn coordinates. Value can be any number lower than 0 . Setting: MaximumTerrainVariance XML: <MaximumTerrainVariance>Value</MaximumTerrainVariance> Chat Command: /MES.Settings.PlanetaryInstallations.MaximumTerrainVariance.Value Description: This setting allows you to specify the maximum terrain variance that is allowed when checking a potential area for spawn coordinates. Value can be any number higher than 0 . Setting: AggressiveTerrainCheck XML: <AggressiveTerrainCheck>Value</AggressiveTerrainCheck> Chat Command: /MES.Settings.PlanetaryInstallations.AggressiveTerrainCheck.Value Description: This setting allows you to specify if the mod should check a potenial spawning area in 8 directions to ensure the terrain is level (using MinimumTerrainVariance and MaximumTerrainVariance ). If set to false , only 4 directions will be used, which could result in more uneven terrain being used to spawn stations. Value can be true or false . Setting: TerrainCheckIncrementDistance XML: <TerrainCheckIncrementDistance>Value</TerrainCheckIncrementDistance> Chat Command: /MES.Settings.PlanetaryInstallations.TerrainCheckIncrementDistance.Value Description: This setting allows you to specify how far each directional step from the proposed spawn coords should be checked. Value can be any number higher than 0 Setting: SmallTerrainCheckDistance XML: <SmallTerrainCheckDistance>Value</SmallTerrainCheckDistance> Chat Command: /MES.Settings.PlanetaryInstallations.SmallTerrainCheckDistance.Value Description: This setting allows you to specify how far from the proposed spawn coords should be checked for small stations. Value can be any number higher than 0 Setting: MediumSpawnChanceBaseValue XML: <MediumSpawnChanceBaseValue>Value</MediumSpawnChanceBaseValue> Chat Command: /MES.Settings.PlanetaryInstallations.MediumSpawnChanceBaseValue.Value Description: This setting allows you to specify the base chance a medium station has of appearing instead of a small station. Value can be any integer number between 0 and 100 . Setting: MediumSpawnChanceIncrement XML: <MediumSpawnChanceIncrement>Value</MediumSpawnChanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.MediumSpawnChanceIncrement.Value Description: This setting allows you to specify how much the MediumSpawnChanceBaseValue increases for every small station that spawns. Value can be any integer number between 0 and 100 . Setting: MediumSpawnDistanceIncrement XML: <MediumSpawnDistanceIncrement>Value</MediumSpawnDistanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.MediumSpawnDistanceIncrement.Value Description: This setting allows you to specify the additional distance from players that is added to MinimumSpawnDistanceFromPlayers and MaximumSpawnDistanceFromPlayers when spawning a medium station. Value can be any number higher than 0 Setting: MediumTerrainCheckDistance XML: <MediumTerrainCheckDistance>Value</MediumTerrainCheckDistance> Chat Command: /MES.Settings.PlanetaryInstallations.MediumTerrainCheckDistance.Value Description: This setting allows you to specify how far from the proposed spawn coords should be checked for medium stations. Value can be any number higher than 0 Setting: LargeSpawnChanceBaseValue XML: <LargeSpawnChanceBaseValue>Value</LargeSpawnChanceBaseValue> Chat Command: /MES.Settings.PlanetaryInstallations.LargeSpawnChanceBaseValue.Value Description: This setting allows you to specify the base chance a large station has of appearing instead of a medium station. Value can be any integer number between 0 and 100 . Setting: LargeSpawnChanceIncrement XML: <LargeSpawnChanceIncrement>Value</LargeSpawnChanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.LargeSpawnChanceIncrement.Value Description: This setting allows you to specify how much the LargeSpawnChanceBaseValue increases for every medium station that spawns. Value can be any integer number between 0 and 100 . Setting: LargeSpawnDistanceIncrement XML: <LargeSpawnDistanceIncrement>Value</LargeSpawnDistanceIncrement> Chat Command: /MES.Settings.PlanetaryInstallations.LargeSpawnDistanceIncrement.Value Description: This setting allows you to specify the additional distance from players that is added to MinimumSpawnDistanceFromPlayers and MaximumSpawnDistanceFromPlayers when spawning a large station. Value can be any number higher than 0 Setting: LargeTerrainCheckDistance XML: <LargeTerrainCheckDistance>Value</LargeTerrainCheckDistance> Chat Command: /MES.Settings.PlanetaryInstallations.LargeTerrainCheckDistance.Value Description: This setting allows you to specify how far from the proposed spawn coords should be checked for large stations. Value can be any number higher than 0 Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Planetary Installations if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Planetary Installations.md"},{"location":"AdminConfig_Random%20Encounters/","text":"AdminConfig_Random Encounters.md You can find the Random Encounters Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-RandomEncounters.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.RandomEncounters.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: PlayerSpawnCooldown XML: <PlayerSpawnCooldown>Value</PlayerSpawnCooldown> Chat Command: /MES.Settings.RandomEncounters.PlayerSpawnCooldown.Value Description: This setting allows you to specify the cooldown time (in seconds) after a Random Encounter appears before another one can appear for the player. Value can be any integer number (should not be 0 or lower) Setting: SpawnTimerTrigger XML: <SpawnTimerTrigger>Value</SpawnTimerTrigger> Chat Command: /MES.Settings.RandomEncounters.SpawnTimerTrigger.Value Description: This setting allows you to specify how often the script should measure the player's distance to see if they've travelled far enough to trigger a Random Encounter spawn. Value can be any integer number (should not be 0 or lower) Setting: PlayerTravelDistance XML: <PlayerTravelDistance>Value</PlayerTravelDistance> Chat Command: /MES.Settings.RandomEncounters.PlayerTravelDistance.Value Description: This settings allows you to specify the distance a player must travel in space before a Random Encounter will spawn. Value can be any number (should not be 0 or lower) Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.RandomEncounters.MaxShipsPerArea.Value Description: This setting allows you to specify if there can should be a maximum amount of Random Encounter grids near the player area. The AreaSize property below specifies the radius to check. Value can be true or false Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.RandomEncounters.AreaSize.Value Description: This setting allows you to specify the area to check for existing Random Encounters if MaxShipsPerArea is set to true . Value can be any number (should not be 0 or lower) Setting: MinSpawnDistanceFromPlayer XML: <MinSpawnDistanceFromPlayer>Value</MinSpawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.MinSpawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance a Random Encounter will appear from a player position. The distance is calculated as a random value between MinSpawnDistanceFromPlayer and MaxSpawnDistanceFromPlayer . Value can be any number (should not be 0 or lower and should be lower than MaxSpawnDistanceFromPlayer ) Setting: MaxSpawnDistanceFromPlayer XML: <MaxSpawnDistanceFromPlayer>Value</MaxSpawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.MaxSpawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance a Random Encounter will appear from a player position. The distance is calculated as a random value between MinSpawnDistanceFromPlayer and MaxSpawnDistanceFromPlayer . Value can be any number (should not be 0 or lower and should be higher than MinSpawnDistanceFromPlayer ) Setting: MinDistanceFromOtherEntities XML: <MinDistanceFromOtherEntities>Value</MinDistanceFromOtherEntities> Chat Command: /MES.Settings.RandomEncounters.MinDistanceFromOtherEntities.Value Description: This setting allows you to specify the minimum distance from other entities (grids, players, etc). Value can be any number higher than 0 Setting: SpawnAttempts XML: <SpawnAttempts>Value</SpawnAttempts> Chat Command: /MES.Settings.RandomEncounters.SpawnAttempts.Value Description: This setting allows you to specify how many attempts the mod should make to find a suitable spot to spawn the Random Encounter. Value can take any integer number higher than 0 Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Random Encounters if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Random Encounters.md"},{"location":"AdminConfig_Random%20Encounters/#adminconfig_random-encountersmd","text":"You can find the Random Encounters Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-RandomEncounters.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.RandomEncounters.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: PlayerSpawnCooldown XML: <PlayerSpawnCooldown>Value</PlayerSpawnCooldown> Chat Command: /MES.Settings.RandomEncounters.PlayerSpawnCooldown.Value Description: This setting allows you to specify the cooldown time (in seconds) after a Random Encounter appears before another one can appear for the player. Value can be any integer number (should not be 0 or lower) Setting: SpawnTimerTrigger XML: <SpawnTimerTrigger>Value</SpawnTimerTrigger> Chat Command: /MES.Settings.RandomEncounters.SpawnTimerTrigger.Value Description: This setting allows you to specify how often the script should measure the player's distance to see if they've travelled far enough to trigger a Random Encounter spawn. Value can be any integer number (should not be 0 or lower) Setting: PlayerTravelDistance XML: <PlayerTravelDistance>Value</PlayerTravelDistance> Chat Command: /MES.Settings.RandomEncounters.PlayerTravelDistance.Value Description: This settings allows you to specify the distance a player must travel in space before a Random Encounter will spawn. Value can be any number (should not be 0 or lower) Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.RandomEncounters.MaxShipsPerArea.Value Description: This setting allows you to specify if there can should be a maximum amount of Random Encounter grids near the player area. The AreaSize property below specifies the radius to check. Value can be true or false Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.RandomEncounters.AreaSize.Value Description: This setting allows you to specify the area to check for existing Random Encounters if MaxShipsPerArea is set to true . Value can be any number (should not be 0 or lower) Setting: MinSpawnDistanceFromPlayer XML: <MinSpawnDistanceFromPlayer>Value</MinSpawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.MinSpawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance a Random Encounter will appear from a player position. The distance is calculated as a random value between MinSpawnDistanceFromPlayer and MaxSpawnDistanceFromPlayer . Value can be any number (should not be 0 or lower and should be lower than MaxSpawnDistanceFromPlayer ) Setting: MaxSpawnDistanceFromPlayer XML: <MaxSpawnDistanceFromPlayer>Value</MaxSpawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.MaxSpawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance a Random Encounter will appear from a player position. The distance is calculated as a random value between MinSpawnDistanceFromPlayer and MaxSpawnDistanceFromPlayer . Value can be any number (should not be 0 or lower and should be higher than MinSpawnDistanceFromPlayer ) Setting: MinDistanceFromOtherEntities XML: <MinDistanceFromOtherEntities>Value</MinDistanceFromOtherEntities> Chat Command: /MES.Settings.RandomEncounters.MinDistanceFromOtherEntities.Value Description: This setting allows you to specify the minimum distance from other entities (grids, players, etc). Value can be any number higher than 0 Setting: SpawnAttempts XML: <SpawnAttempts>Value</SpawnAttempts> Chat Command: /MES.Settings.RandomEncounters.SpawnAttempts.Value Description: This setting allows you to specify how many attempts the mod should make to find a suitable spot to spawn the Random Encounter. Value can take any integer number higher than 0 Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.RandomEncounters.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Random Encounters if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.RandomEncounters.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups from appearing when this encounter type is used for spawning. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.Creatures.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter.","title":"AdminConfig_Random Encounters.md"},{"location":"AdminConfig_Space%20Cargo%20Ships/","text":"AdminConfig_Space Cargo Ships.md You can find the Space Cargo Ships Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-SpaceCargoShips.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.SpaceCargoShips.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: FirstSpawnTime XML: <FirstSpawnTime>Value</FirstSpawnTime> Chat Command: /MES.Settings.SpaceCargoShips.FirstSpawnTime.Value Description: This setting allows you to set how long (in seconds) after the game starts until the first Cargo Ship Spawn Event triggers. Value can be replaced with any integer number (no lower than 0 ). Setting: MinSpawnTime XML: <MinSpawnTime>Value</MinSpawnTime> Chat Command: /MES.Settings.SpaceCargoShips.MinSpawnTime.Value Description: This setting allows you to set the minimum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxSpawnTime ). Setting: MaxSpawnTime XML: <MaxSpawnTime>Value</MaxSpawnTime> Chat Command: /MES.Settings.SpaceCargoShips.MaxSpawnTime.Value Description: This setting allows you to set the maximum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be higher than MinSpawnTime ). Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.SpaceCargoShips.MaxShipsPerArea.Value Description: This setting allows you to specify how many Space Cargo Ships can be present in a specified distance from the player. If there are more than the Value in this setting, then no other ships will spawn. The area size is determined in the AreaSize setting below. Value can be replaced with any integer number (no lower than 0 ). Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.SpaceCargoShips.AreaSize.Value Description: This setting allows you to specify the area radius when checking for existing Space Cargo Ships for MaxShipsPerArea . Value can be replaced with any number (no lower than 0 ). Setting: MaxSpawnAttempts XML: <MaxSpawnAttempts>Value</MaxSpawnAttempts> Chat Command: /MES.Settings.SpaceCargoShips.MaxSpawnAttempts.Value Description: This setting allows you to specify how many times the spawner should attempt to find a valid random travel path for the Cargo Ship during the spawning phase. Value can be replaced with any integer number (no lower than 0 ). Setting: MinPathDistanceFromPlayer XML: <MinPathDistanceFromPlayer>Value</MinPathDistanceFromPlayer> Chat Command: /MES.Settings.SpaceCargoShips.MinPathDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance the Cargo Ship travel path should pass the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistanceFromPlayer ). Setting: MaxPathDistanceFromPlayer XML: <MaxPathDistanceFromPlayer>Value</MaxPathDistanceFromPlayer> Chat Command: /MES.Settings.SpaceCargoShips.MaxPathDistanceFromPlayer.Value Description: This setting allows you to specify the maximum distance the Cargo Ship travel path should pass the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be higher than MinPathDistanceFromPlayer ). Setting: MinLunarSpawnHeight XML: <MinLunarSpawnHeight>Value</MinLunarSpawnHeight> Chat Command: /MES.Settings.SpaceCargoShips.MinLunarSpawnHeight.Value Description: This setting allows you to specify the minimum surface altitude the Cargo Ship travel path should be above the player. The distance is a random number between MinLunarSpawnHeight and MaxLunarSpawnHeight . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxLunarSpawnHeight ). Setting: MaxLunarSpawnHeight XML: <MaxLunarSpawnHeight>Value</MaxLunarSpawnHeight> Chat Command: /MES.Settings.SpaceCargoShips.MaxLunarSpawnHeight.Value Description: This setting allows you to specify the minimum surface altitude the Cargo Ship travel path should be above the player. The distance is a random number between MinLunarSpawnHeight and MaxLunarSpawnHeight . Value can be replaced with any integer number (no lower than 0 and should be higher than MinLunarSpawnHeight ). Setting: MinSpawnDistFromEntities XML: <MinSpawnDistFromEntities>Value</MinSpawnDistFromEntities> Chat Command: /MES.Settings.SpaceCargoShips.MinSpawnDistFromEntities.Value Description: This setting allows you to specify the minimum distance the encounter should spawn from other grids and players. Value can be replaced with any number (no lower than 0 ). Setting: MinPathDistance XML: <MinPathDistance>Value</MinPathDistance> Chat Command: /MES.Settings.SpaceCargoShips.MinPathDistance.Value Description: This setting allows you to specify the minimum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistance ). Setting: MaxPathDistance XML: <MaxPathDistance>Value</MaxPathDistance> Chat Command: /MES.Settings.SpaceCargoShips.MaxPathDistance.Value Description: This setting allows you to specify the maximum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MinPathDistance ). Setting: PathCheckStep XML: <PathCheckStep>Value</PathCheckStep> Chat Command: /MES.Settings.SpaceCargoShips.PathCheckStep.Value Description: This setting allows you to specify the distance increment that is used when the spawner checks the Cargo Ship travel path for obstructions / gravity / etc. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromEndPath XML: <DespawnDistanceFromEndPath>Value</DespawnDistanceFromEndPath> Chat Command: /MES.Settings.SpaceCargoShips.DespawnDistanceFromEndPath.Value Description: This setting allows you to specify how far from the end of the Cargo Ship travel path the ship will initiate its despawn. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.SpaceCargoShips.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: UseMinimumSpeed XML: <UseMinimumSpeed>Value</UseMinimumSpeed> Chat Command: /MES.Settings.SpaceCargoShips.UseMinimumSpeed.Value Description: This setting allows you to specify if cargo ships should move at a minimum speed at spawn. If the speed limit specified in the spawn group is lower than the MinimumSpeed value, then that value will be applied. Value can be set to true or false Setting: MinimumSpeed XML: <MinimumSpeed>Value</MinimumSpeed> Chat Command: /MES.Settings.SpaceCargoShips.MinimumSpeed.Value Description: This setting allows you to specify the minimum speed a Cargo Ship should be moving at spawn if UseMinimumSpeed is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseSpeedOverride XML: <UseSpeedOverride>Value</UseSpeedOverride> Chat Command: /MES.Settings.SpaceCargoShips.UseSpeedOverride.Value Description: This setting allows you to specify if cargo ships should all use a specific speed. The SpeedOverride value would be the speed used. Value can be set to true or false Setting: SpeedOverride XML: <SpeedOverride>Value</SpeedOverride> Chat Command: /MES.Settings.SpaceCargoShips.SpeedOverride.Value Description: This setting allows you to specify the speed a Cargo Ship should be moving at spawn if UseSpeedOverride is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.SpaceCargoShips.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.SpaceCargoShips.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Space Cargo Ships if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ).","title":"AdminConfig_Space Cargo Ships.md"},{"location":"AdminConfig_Space%20Cargo%20Ships/#adminconfig_space-cargo-shipsmd","text":"You can find the Space Cargo Ships Settings Configuration File in MySaveWorldFolder\\Storage\\1521905890.sbm_ModularEncountersSpawner\\Config-SpaceCargoShips.xml . The settings you can modify are listed below: Setting: EnableSpawns XML: <EnableSpawns>Value</EnableSpawns> Chat Command: /MES.Settings.SpaceCargoShips.EnableSpawns.Value Description: This setting allows you to Enable or Disable All Encounters from this Spawn Type. Setting: FirstSpawnTime XML: <FirstSpawnTime>Value</FirstSpawnTime> Chat Command: /MES.Settings.SpaceCargoShips.FirstSpawnTime.Value Description: This setting allows you to set how long (in seconds) after the game starts until the first Cargo Ship Spawn Event triggers. Value can be replaced with any integer number (no lower than 0 ). Setting: MinSpawnTime XML: <MinSpawnTime>Value</MinSpawnTime> Chat Command: /MES.Settings.SpaceCargoShips.MinSpawnTime.Value Description: This setting allows you to set the minimum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxSpawnTime ). Setting: MaxSpawnTime XML: <MaxSpawnTime>Value</MaxSpawnTime> Chat Command: /MES.Settings.SpaceCargoShips.MaxSpawnTime.Value Description: This setting allows you to set the maximum time (in seconds) until the next Cargo Ship Spawn Event triggers. The time trigger is a random number between MinSpawnTime and MaxSpawnTime . Value can be replaced with any integer number (no lower than 0 and should be higher than MinSpawnTime ). Setting: MaxShipsPerArea XML: <MaxShipsPerArea>Value</MaxShipsPerArea> Chat Command: /MES.Settings.SpaceCargoShips.MaxShipsPerArea.Value Description: This setting allows you to specify how many Space Cargo Ships can be present in a specified distance from the player. If there are more than the Value in this setting, then no other ships will spawn. The area size is determined in the AreaSize setting below. Value can be replaced with any integer number (no lower than 0 ). Setting: AreaSize XML: <AreaSize>Value</AreaSize> Chat Command: /MES.Settings.SpaceCargoShips.AreaSize.Value Description: This setting allows you to specify the area radius when checking for existing Space Cargo Ships for MaxShipsPerArea . Value can be replaced with any number (no lower than 0 ). Setting: MaxSpawnAttempts XML: <MaxSpawnAttempts>Value</MaxSpawnAttempts> Chat Command: /MES.Settings.SpaceCargoShips.MaxSpawnAttempts.Value Description: This setting allows you to specify how many times the spawner should attempt to find a valid random travel path for the Cargo Ship during the spawning phase. Value can be replaced with any integer number (no lower than 0 ). Setting: MinPathDistanceFromPlayer XML: <MinPathDistanceFromPlayer>Value</MinPathDistanceFromPlayer> Chat Command: /MES.Settings.SpaceCargoShips.MinPathDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance the Cargo Ship travel path should pass the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistanceFromPlayer ). Setting: MaxPathDistanceFromPlayer XML: <MaxPathDistanceFromPlayer>Value</MaxPathDistanceFromPlayer> Chat Command: /MES.Settings.SpaceCargoShips.MaxPathDistanceFromPlayer.Value Description: This setting allows you to specify the maximum distance the Cargo Ship travel path should pass the player position. The distance is a random number between MinPathDistanceFromPlayer and MaxPathDistanceFromPlayer . Value can be replaced with any integer number (no lower than 0 and should be higher than MinPathDistanceFromPlayer ). Setting: MinLunarSpawnHeight XML: <MinLunarSpawnHeight>Value</MinLunarSpawnHeight> Chat Command: /MES.Settings.SpaceCargoShips.MinLunarSpawnHeight.Value Description: This setting allows you to specify the minimum surface altitude the Cargo Ship travel path should be above the player. The distance is a random number between MinLunarSpawnHeight and MaxLunarSpawnHeight . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxLunarSpawnHeight ). Setting: MaxLunarSpawnHeight XML: <MaxLunarSpawnHeight>Value</MaxLunarSpawnHeight> Chat Command: /MES.Settings.SpaceCargoShips.MaxLunarSpawnHeight.Value Description: This setting allows you to specify the minimum surface altitude the Cargo Ship travel path should be above the player. The distance is a random number between MinLunarSpawnHeight and MaxLunarSpawnHeight . Value can be replaced with any integer number (no lower than 0 and should be higher than MinLunarSpawnHeight ). Setting: MinSpawnDistFromEntities XML: <MinSpawnDistFromEntities>Value</MinSpawnDistFromEntities> Chat Command: /MES.Settings.SpaceCargoShips.MinSpawnDistFromEntities.Value Description: This setting allows you to specify the minimum distance the encounter should spawn from other grids and players. Value can be replaced with any number (no lower than 0 ). Setting: MinPathDistance XML: <MinPathDistance>Value</MinPathDistance> Chat Command: /MES.Settings.SpaceCargoShips.MinPathDistance.Value Description: This setting allows you to specify the minimum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MaxPathDistance ). Setting: MaxPathDistance XML: <MaxPathDistance>Value</MaxPathDistance> Chat Command: /MES.Settings.SpaceCargoShips.MaxPathDistance.Value Description: This setting allows you to specify the maximum path distance the cargo ship will travel before despawning. The distance is a random number between MinPathDistance and MaxPathDistance . Value can be replaced with any integer number (no lower than 0 and should be lower than MinPathDistance ). Setting: PathCheckStep XML: <PathCheckStep>Value</PathCheckStep> Chat Command: /MES.Settings.SpaceCargoShips.PathCheckStep.Value Description: This setting allows you to specify the distance increment that is used when the spawner checks the Cargo Ship travel path for obstructions / gravity / etc. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromEndPath XML: <DespawnDistanceFromEndPath>Value</DespawnDistanceFromEndPath> Chat Command: /MES.Settings.SpaceCargoShips.DespawnDistanceFromEndPath.Value Description: This setting allows you to specify how far from the end of the Cargo Ship travel path the ship will initiate its despawn. Value can be replaced with any number (no lower than 0 ). Setting: DespawnDistanceFromPlayer XML: <DespawnDistanceFromPlayer>Value</DespawnDistanceFromPlayer> Chat Command: /MES.Settings.SpaceCargoShips.DespawnDistanceFromPlayer.Value Description: This setting allows you to specify the minimum distance players must be from the encounter before despawn is triggered. Value can be replaced with any number (no lower than 0 ). Setting: UseMinimumSpeed XML: <UseMinimumSpeed>Value</UseMinimumSpeed> Chat Command: /MES.Settings.SpaceCargoShips.UseMinimumSpeed.Value Description: This setting allows you to specify if cargo ships should move at a minimum speed at spawn. If the speed limit specified in the spawn group is lower than the MinimumSpeed value, then that value will be applied. Value can be set to true or false Setting: MinimumSpeed XML: <MinimumSpeed>Value</MinimumSpeed> Chat Command: /MES.Settings.SpaceCargoShips.MinimumSpeed.Value Description: This setting allows you to specify the minimum speed a Cargo Ship should be moving at spawn if UseMinimumSpeed is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseSpeedOverride XML: <UseSpeedOverride>Value</UseSpeedOverride> Chat Command: /MES.Settings.SpaceCargoShips.UseSpeedOverride.Value Description: This setting allows you to specify if cargo ships should all use a specific speed. The SpeedOverride value would be the speed used. Value can be set to true or false Setting: SpeedOverride XML: <SpeedOverride>Value</SpeedOverride> Chat Command: /MES.Settings.SpaceCargoShips.SpeedOverride.Value Description: This setting allows you to specify the speed a Cargo Ship should be moving at spawn if UseSpeedOverride is set to true . Value can be replaced with any number (no lower than 0 ). Setting: UseMaxSpawnGroupFrequency XML: <UseMaxSpawnGroupFrequency>Value</UseMaxSpawnGroupFrequency> Chat Command: /MES.Settings.SpaceCargoShips.UseMaxSpawnGroupFrequency.Value Description: This setting allows you to specify if the spawn group frequency should be set no higher than a provided value. The MaxSpawnGroupFrequency value would be the frequency used if the spawn group frequency is above that value. Value can be set to true or false Setting: MaxSpawnGroupFrequency XML: <MaxSpawnGroupFrequency>Value</MaxSpawnGroupFrequency> Chat Command: /MES.Settings.SpaceCargoShips.MaxSpawnGroupFrequency.Value Description: This setting allows you to specify the spawning frequency of Space Cargo Ships if UseMaxSpawnGroupFrequency is set to true . Value can be replaced with any number (no lower than 0 ).","title":"AdminConfig_Space Cargo Ships.md"},{"location":"AdminConfig_Spawn%20Filtering/","text":"AdminConfig_Spawn Filtering.md The values in this section can be found in multiple config files, specifically: SpaceCargoShips RandomEncounters PlanetaryCargoShips PlanetaryInstallations BossEncounters DroneEncounters These allow you to prevent certain SpawnGroups from appearing when they are spawned as a particular spawn type, or if the encounter is on a particular planet. Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.SpawnType.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups or mod ids from appearing when this encounter type is used for spawning. Replace SpawnType with the type of spawn you want to control against (eg: SpaceCargoShips ). Replace Value with the SpawnGroup subtypeId or mod Id. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.SpawnType.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter. Replace SpawnType with the type of spawn you want to control against (eg: SpaceCargoShips ). Replace Value with the Planet subtypeId. Setting: PlanetSpawnFilters Chat Command (Add): /MES.Settings.SpawnType.PlanetSpawnFilters.Add.PlanetId.Value Chat Command (Remove): /MES.Settings.SpawnType.PlanetSpawnFilters.Remove.PlanetId.Value Description: This setting allows you to blacklist certain encounters or entire mod IDs from spawning on certain planets. Replace SpawnType with the type of spawn you want to control against (eg: SpaceCargoShips ). Replace PlanetId with the EntityId of the planet you want to control spawning on (you can get this with the /MES.GESAP chat command while standing on the planet). Replace Value with the SpawnGroup subtypeId or mod Id.","title":"AdminConfig_Spawn Filtering.md"},{"location":"AdminConfig_Spawn%20Filtering/#adminconfig_spawn-filteringmd","text":"The values in this section can be found in multiple config files, specifically: SpaceCargoShips RandomEncounters PlanetaryCargoShips PlanetaryInstallations BossEncounters DroneEncounters These allow you to prevent certain SpawnGroups from appearing when they are spawned as a particular spawn type, or if the encounter is on a particular planet. Setting: SpawnTypeBlacklist XML: <SpawnTypeBlacklist>Value</SpawnTypeBlacklist> Chat Command (Add): /MES.Settings.SpawnType.SpawnTypeBlacklist.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.SpawnTypeBlacklist.Remove.Value Description: This setting allows you to blacklist certain spawngroups or mod ids from appearing when this encounter type is used for spawning. Replace SpawnType with the type of spawn you want to control against (eg: SpaceCargoShips ). Replace Value with the SpawnGroup subtypeId or mod Id. Setting: SpawnTypePlanetBlacklist XML: <SpawnTypePlanetBlacklist>Value</SpawnTypePlanetBlacklist> Chat Command (Add): /MES.Settings.SpawnType.SpawnTypePlanetBlacklist.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.SpawnTypePlanetBlacklist.Remove.Value Description: This setting allows you to blacklist certain planets from being able to spawn this type of encounter. Replace SpawnType with the type of spawn you want to control against (eg: SpaceCargoShips ). Replace Value with the Planet subtypeId. Setting: PlanetSpawnFilters Chat Command (Add): /MES.Settings.SpawnType.PlanetSpawnFilters.Add.PlanetId.Value Chat Command (Remove): /MES.Settings.SpawnType.PlanetSpawnFilters.Remove.PlanetId.Value Description: This setting allows you to blacklist certain encounters or entire mod IDs from spawning on certain planets. Replace SpawnType with the type of spawn you want to control against (eg: SpaceCargoShips ). Replace PlanetId with the EntityId of the planet you want to control spawning on (you can get this with the /MES.GESAP chat command while standing on the planet). Replace Value with the SpawnGroup subtypeId or mod Id.","title":"AdminConfig_Spawn Filtering.md"},{"location":"AdminConfig_Timeout/","text":"AdminConfig_Timeout.md These settings can be found in each of the encounter types configuration files. The settings listed here control the spawning timeout system for the encounter type. Timeouts occur if too many grids of a particular type (Space Cargo Ship, Random Encounter, etc) are spawned in an area within a short amount of time. If the limit is reached, then a cooldown timer is applied to the immediate area before any other spawns are allowed to occur. This helps mitigate larger groups of players working cooperatively being swamped with spawns if they are all in the same area. For the chat commands, replace EncounterType with any of the types of encounter from the other configurations (eg: SpaceCargoShips , RandomEncounters , etc) The settings you can modify are listed below: Setting: UseTimeout XML: <UseTimeout>Value</UseTimeout> Chat Command: /MES.Settings.EncounterType.UseTimeout.Value Description: This setting allows you to specify if Timeout should be enabled for this encounter type. Value can be true or false Setting: TimeoutRadius XML: <TimeoutRadius>Value</TimeoutRadius> Chat Command: /MES.Settings.EncounterType.TimeoutRadius.Value Description: This setting allows you to specify the radius from a spawn that a timeout will cover. Value can be 0 or higher Setting: TimeoutSpawnLimit XML: <TimeoutSpawnLimit>Value</TimeoutSpawnLimit> Chat Command: /MES.Settings.EncounterType.TimeoutSpawnLimit.Value Description: This setting allows you to specify the amount of spawns that can occur in a timeout area before the cooldown is applied. Value can be 0 or higher Setting: TimeoutDuration XML: <TimeoutDuration>Value</TimeoutDuration> Chat Command: /MES.Settings.EncounterType.TimeoutDuration.Value Description: This setting allows you to specify the amount of time (in seconds) that spawns will be restricted in an area if the cooldown is triggered. Value can be 0 or higher","title":"AdminConfig_Timeout.md"},{"location":"AdminConfig_Timeout/#adminconfig_timeoutmd","text":"These settings can be found in each of the encounter types configuration files. The settings listed here control the spawning timeout system for the encounter type. Timeouts occur if too many grids of a particular type (Space Cargo Ship, Random Encounter, etc) are spawned in an area within a short amount of time. If the limit is reached, then a cooldown timer is applied to the immediate area before any other spawns are allowed to occur. This helps mitigate larger groups of players working cooperatively being swamped with spawns if they are all in the same area. For the chat commands, replace EncounterType with any of the types of encounter from the other configurations (eg: SpaceCargoShips , RandomEncounters , etc) The settings you can modify are listed below: Setting: UseTimeout XML: <UseTimeout>Value</UseTimeout> Chat Command: /MES.Settings.EncounterType.UseTimeout.Value Description: This setting allows you to specify if Timeout should be enabled for this encounter type. Value can be true or false Setting: TimeoutRadius XML: <TimeoutRadius>Value</TimeoutRadius> Chat Command: /MES.Settings.EncounterType.TimeoutRadius.Value Description: This setting allows you to specify the radius from a spawn that a timeout will cover. Value can be 0 or higher Setting: TimeoutSpawnLimit XML: <TimeoutSpawnLimit>Value</TimeoutSpawnLimit> Chat Command: /MES.Settings.EncounterType.TimeoutSpawnLimit.Value Description: This setting allows you to specify the amount of spawns that can occur in a timeout area before the cooldown is applied. Value can be 0 or higher Setting: TimeoutDuration XML: <TimeoutDuration>Value</TimeoutDuration> Chat Command: /MES.Settings.EncounterType.TimeoutDuration.Value Description: This setting allows you to specify the amount of time (in seconds) that spawns will be restricted in an area if the cooldown is triggered. Value can be 0 or higher","title":"AdminConfig_Timeout.md"},{"location":"AdminConfig_Wave%20Spawner/","text":"AdminConfig_Wave Spawner.md The spawn types of SpaceCargoShips , PlanetaryCargoShips , and Creatures all have configuration options for Wave Spawning. When it is enabled, it will group players into clusters based on their distance from each other and after a special timer has reached the trigger time, it will execute several spawns of a type in the area of each cluster. You can customize the timings, distances, and spawn types with the commands/configs below. Replace SpawnType with one of the spawntypes above matching the configuration you want to change it for. Setting: EnableWaveSpawner XML: <EnableWaveSpawner>Value</EnableWaveSpawner> Chat Command: /MES.Settings.SpawnType.EnableWaveSpawner.Value Description: This setting allows you to specify if the Wave Spawner for Space Cargo Ships should be enabled. Default value is false . Value can be set to true or false Setting: UseSpecificRandomGroups XML: <UseSpecificRandomGroups> <string>Value1</string> <string>Value2</string> </UseSpecificRandomGroups> Chat Command (Add): /MES.Settings.SpawnType.UseSpecificRandomGroups.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.UseSpecificRandomGroups.Remove.Value Description: This setting allows you to specify one or more specific SpawnGroups that will only be used with the Space Cargo Ship Wave Spawner. To add more SpawnGroups to the list, simply create a new line between the <UseSpecificRandomGroups> and </UseSpecificRandomGroups> tags and enter the following <string>Value</string> - Replace Value with the SubtypeName of the SpawnGroup. Setting: MinWaveSpawnTime XML: <MinWaveSpawnTime>Value</MinWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MinWaveSpawnTime.Value Description: This setting allows you to specify the Minimum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: MaxWaveSpawnTime XML: <MaxWaveSpawnTime>Value</MaxWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MaxWaveSpawnTime.Value Description: This setting allows you to specify the Maximum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: TotalSpawnEventsPerCluster XML: <TotalSpawnEventsPerCluster>Value</TotalSpawnEventsPerCluster> Chat Command: /MES.Settings.SpawnType.TotalSpawnEventsPerCluster.Value Description: This setting allows you to specify the number of SpawnGroups spawned at a Player Cluster during the Wave Spawn Event. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: TimeBetweenWaveSpawns XML: <TimeBetweenWaveSpawns>Value</TimeBetweenWaveSpawns> Chat Command: /MES.Settings.SpawnType.TimeBetweenWaveSpawns.Value Description: This setting allows you to specify the time (in seconds) between SpawnGroups being spawned during Wave Spawn Events. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: PlayerClusterDistance XML: <PlayerClusterDistance>Value</PlayerClusterDistance> Chat Command: /MES.Settings.SpawnType.PlayerClusterDistance.Value Description: This setting allows you to specify the max distance (in meters) that players within are considered a cluster (Waves spawn at clusters, not necessarily at individual players). Value can be replaced with any Integer number (eg: 5000 , 10000 , 15000 )","title":"AdminConfig_Wave Spawner.md"},{"location":"AdminConfig_Wave%20Spawner/#adminconfig_wave-spawnermd","text":"The spawn types of SpaceCargoShips , PlanetaryCargoShips , and Creatures all have configuration options for Wave Spawning. When it is enabled, it will group players into clusters based on their distance from each other and after a special timer has reached the trigger time, it will execute several spawns of a type in the area of each cluster. You can customize the timings, distances, and spawn types with the commands/configs below. Replace SpawnType with one of the spawntypes above matching the configuration you want to change it for. Setting: EnableWaveSpawner XML: <EnableWaveSpawner>Value</EnableWaveSpawner> Chat Command: /MES.Settings.SpawnType.EnableWaveSpawner.Value Description: This setting allows you to specify if the Wave Spawner for Space Cargo Ships should be enabled. Default value is false . Value can be set to true or false Setting: UseSpecificRandomGroups XML: <UseSpecificRandomGroups> <string>Value1</string> <string>Value2</string> </UseSpecificRandomGroups> Chat Command (Add): /MES.Settings.SpawnType.UseSpecificRandomGroups.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.UseSpecificRandomGroups.Remove.Value Description: This setting allows you to specify one or more specific SpawnGroups that will only be used with the Space Cargo Ship Wave Spawner. To add more SpawnGroups to the list, simply create a new line between the <UseSpecificRandomGroups> and </UseSpecificRandomGroups> tags and enter the following <string>Value</string> - Replace Value with the SubtypeName of the SpawnGroup. Setting: MinWaveSpawnTime XML: <MinWaveSpawnTime>Value</MinWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MinWaveSpawnTime.Value Description: This setting allows you to specify the Minimum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: MaxWaveSpawnTime XML: <MaxWaveSpawnTime>Value</MaxWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MaxWaveSpawnTime.Value Description: This setting allows you to specify the Maximum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: TotalSpawnEventsPerCluster XML: <TotalSpawnEventsPerCluster>Value</TotalSpawnEventsPerCluster> Chat Command: /MES.Settings.SpawnType.TotalSpawnEventsPerCluster.Value Description: This setting allows you to specify the number of SpawnGroups spawned at a Player Cluster during the Wave Spawn Event. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: TimeBetweenWaveSpawns XML: <TimeBetweenWaveSpawns>Value</TimeBetweenWaveSpawns> Chat Command: /MES.Settings.SpawnType.TimeBetweenWaveSpawns.Value Description: This setting allows you to specify the time (in seconds) between SpawnGroups being spawned during Wave Spawn Events. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: PlayerClusterDistance XML: <PlayerClusterDistance>Value</PlayerClusterDistance> Chat Command: /MES.Settings.SpawnType.PlayerClusterDistance.Value Description: This setting allows you to specify the max distance (in meters) that players within are considered a cluster (Waves spawn at clusters, not necessarily at individual players). Value can be replaced with any Integer number (eg: 5000 , 10000 , 15000 )","title":"AdminConfig_Wave Spawner.md"},{"location":"Autopilot/","text":"Autopilot.md Autopilot Profiles in RivalAI allow you to specify a set of rules that are use for how the NPC ship moves to various waypoints and targets. You can attach your Autopilot Profiles to any Behavior Profile by adding a [AutopilotData:Value] tag to the Behavior and replace Value with the SubtypeId of your Autopilot Profile. Example: [AutopilotData:RAI-ExampleAutopilotProfile] It is important that you use a unique SubtypeId for each Autopilot Profile you create, otherwise they may not work correctly. Here's an example of how a Autopilot Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleAutopilotProfile</SubtypeId> </Id> <Description> [RivalAI Autopilot] [SlowDownOnWaypointApproach:true] [ExtraSlowDownDistance:150] [FlyLevelWithGravity:false] [AllowStrafing:true] [StrafeMinDurationMs:1000] [StrafeMaxDurationMs:1500] </Description> </EntityComponent> </EntityComponents> </Definitions> It's also important to note that all the tags below can also be used in the main Behavior profile as well. However, you must be careful when doing so. If you add individual tags before defining an entire AutopilotData tag, all those changes will be overwritten by the Autopilot Profile provided. If provided after the AutopilotData tag, that should be safe - and can be an easy way to make minor adjustments without having to provide an entirely new autopilot profile! Below are the tags you are able to use in your Autopilot Profiles. They are divided into several categories based on what they control. Behavior Collision General Leading Offset Planet Rotation Special Speed Strafe Thrust Behavior This section contains tags that only work with specific behaviors. Tag: EngageDistanceSpace Tag Format: [EngageDistanceSpace:Value] Description: This tag specifies the max distance from a target waypoint (while in space) before an NPC will switch to its EngageTarget mode (which usually involves rotating to target and strafe). Allowed Values: Any Number Greater Than 0 Value Must be Equal or Lower than DisengageDistanceSpace Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: DisengageDistanceSpace Tag Format: [DisengageDistanceSpace:Value] Description: This tag specifies the minimum distance from a target waypoint (while in space) that an NPC will remain in EngageTarget mode (which usually involves rotating to target and strafe), otherwise will be switched back to a mode where it approach the target instead. Allowed Values: Any Number Greater Than 0 Value Must be Equal or Higher than EngageDistanceSpace Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: EngageDistancePlanet Tag Format: [EngageDistancePlanet:Value] Description: This tag specifies the max distance from a target waypoint (while in gravity) before an NPC will switch to its EngageTarget mode (which usually involves rotating to target and strafe). Allowed Values: Any Number Greater Than 0 Value Must be Equal or Lower than DisengageDistanceSpace Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: DisengageDistancePlanet Tag Format: [DisengageDistancePlanet:Value] Description: This tag specifies the minimum distance from a target waypoint (while in gravity) that an NPC will remain in EngageTarget mode (which usually involves rotating to target and strafe), otherwise will be switched back to a mode where it approach the target instead. Allowed Values: Any Number Greater Than 0 Value Must be Equal or Higher than EngageDistancePlanet Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: WaypointWaitTimeTrigger Tag Format: [WaypointWaitTimeTrigger:Value] Description: This tag specifies the time that an NPC will wait at a waypoint after reaching it. Allowed Values: Any Number Greater Than 0 Behaviors: CargoShip HorseFighter Horsefly Multiple Tag Allowed: No Tag: WaypointAbandonTimeTrigger Tag Format: [WaypointAbandonTimeTrigger:Value] Description: This tag specifies the time until an NPC will recalculate their current waypoint if they have not reached it yet. Allowed Values: Any Number Greater Than 0 Behaviors: HorseFighter Horsefly Multiple Tag Allowed: No Collision This section contains tags that control collision detection. Tag: UseVelocityCollisionEvasion Tag Format: [UseVelocityCollisionEvasion:Value] Description: This tag specifies if the behavior should detect and attempt avoiding collisions in the direction the NPC is travelling in. Allowed Values: true false Multiple Tag Allowed: No Tag: CollisionEvasionWaypointDistance Tag Format: [CollisionEvasionWaypointDistance:Value] Description: This tag specifies how far from an NPCs current position it should try to move off its current path when avoiding a collision. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CollisionFallEvasionWaypointDistance Tag Format: [CollisionFallEvasionWaypointDistance:Value] Description: This tag specifies the distance from an NPCs current position it should try to fly to if attempting to recover from a fall collision on a planet. Fall collisions are considered if your NPCs velocity direction is within 15 degrees of the planet center direction. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CollisionEvasionResumeDistance Tag Format: [CollisionEvasionResumeDistance:Value] Description: This tag specifies the distance from a collision evasion waypoint the NPC must reach before it resumes its regular path. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CollisionEvasionResumeTime Tag Format: [CollisionEvasionResumeTime:Value] Description: This tag specifies the maximum time an NPC can spend trying to reach a collision evasion waypoint before it will abandon the attempt and resume its regular path. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No General This section contains tags that don't quite fit in the other categories. Tag: DisableInertiaDampeners Tag Format: [DisableInertiaDampeners:Value] Description: This tag specifies if the ship Inertia Dampeners should be disabled. For most behaviors, this is not recommended, but the tag exists for cases if/when it might be necessary. Allowed Values: true false Multiple Tag Allowed: No Tag: WaypointTolerance Tag Format: [WaypointTolerance:Value] Description: This tag specifies the distance from a waypoint or target before some behaviors will perform other actions. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: UseVerticalRetreat Tag Format: [UseVerticalRetreat:Value] Description: This tag specifies if the Despawn coordinates should be calculated in an upward direction when an NPC is retreating. Allowed Values: true false Multiple Tag Allowed: No Leading This section contains tags that control if NPC should lead a target with weapons. Tag: UseProjectileLeadPrediction Tag Format: [UseProjectileLeadPrediction:Value] Description: This tag specifies if a ship should try to aim ahead of a moving target so projectiles have a better chance to hit. Allowed Values: true false Multiple Tag Allowed: No Offset This section contains tags that control the offset distances some behaviors will use. Tag: OffsetSpaceMinDistFromTarget Tag Format: [OffsetSpaceMinDistFromTarget:Value] Description: This tag specifies the minimum distance from a target (in space) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetSpaceMaxDistFromTarget Tag Format: [OffsetSpaceMaxDistFromTarget:Value] Description: This tag specifies the maximum distance from a target (in space) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMinDistFromTarget Tag Format: [OffsetPlanetMinDistFromTarget:Value] Description: This tag specifies the minimum distance from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMaxDistFromTarget Tag Format: [OffsetPlanetMaxDistFromTarget:Value] Description: This tag specifies the maximum distance from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMinTargetAltitude Tag Format: [OffsetPlanetMinTargetAltitude:Value] Description: This tag specifies the minimum altitude from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMaxTargetAltitude Tag Format: [OffsetPlanetMaxTargetAltitude:Value] Description: This tag specifies the maximum altitude from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ReverseOffsetDistAltAboveHeight Tag Format: [ReverseOffsetDistAltAboveHeight:Value] Description: This tag specifies if the min and max values of the OffsetPlanet tags should be swapped (altitude becomes distance, distance becomes altitude) if the target is above a certain altitude. This is useful for behaviors that might want to stay high above targets while their near the ground, and fly further away when they're higher in the air. Allowed Values: true false Multiple Tag Allowed: No Tag: ReverseOffsetHeight Tag Format: [ReverseOffsetHeight:Value] Description: This tag specifies the maximum altitude a target can be from the ground before the altitude and distance offset distances are swapped. Only applies when ReverseOffsetDistAltAboveHeight is true Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: PadDistanceFromTarget Tag Format: [PadDistanceFromTarget:Value] Description: This tag specifies extra distance from a target (in the direction of the NPC) that will be considered its target coordinates. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Planet This section contains tags that control how behaviors react to planetary terrain. Tag: FlyLevelWithGravity Tag Format: [FlyLevelWithGravity:Value] Description: This tag specifies if a ship should fly perpendicular to the planet gravity direction, keeping level with the ground similar to how vanilla autopilot does. This is more useful on larger ships, or ships that use turrets as a primary offensive choice. Allowed Values: true false Multiple Tag Allowed: No Tag: LevelWithGravityWhenIdle Tag Format: [LevelWithGravityWhenIdle:Value] Description: This tag specifies if a ship should rotate perpendicular to the planet gravity direction, keeping level with the ground similar to how vanilla autopilot does. This would happen when a ship arrives and is waiting at a waypoint. Allowed Values: true false Multiple Tag Allowed: No Tag: IdealPlanetAltitude Tag Format: [IdealPlanetAltitude:Value] Description: This tag specifies the ideal altitude an NPC should travel at while travelling to a waypoint or target on a planet. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MinimumPlanetAltitude Tag Format: [MinimumPlanetAltitude:Value] Description: This tag specifies the minimum distance an NPC should travel at while travelling to a waypoint or target on a planet. If the NPC needs to adjust its altitude at any point, it will attempt to climb back to the IdealPlanetAltitude value Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: AltitudeTolerance Tag Format: [AltitudeTolerance:Value] Description: This tag specifies the distance from the IdealPlanetAltitude value that the NPC must be within to resume its regular path travel if it was correcting altitude. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MinAngleForLeveledDescent Tag Format: [MinAngleForLeveledDescent:Value] Description: This tag specifies the minimum angle using the direction from the NPC to the waypoint and the direction from the NPC to UP before the NPC will begin to descend to the waypoint's altitude. This only works with FlyLevelWithGravity enabled. Default value is 0 Allowed Values: 0 to 180 Multiple Tag Allowed: No Tag: MaxAngleForLeveledAscent Tag Format: [MaxAngleForLeveledAscent:Value] Description: This tag specifies the maximum angle using the direction from the NPC to the waypoint and the direction from the NPC to UP that the NPC is allowed to ascend to the waypoint's altitude. This only works with FlyLevelWithGravity enabled. Default value is 180 Allowed Values: 0 to 180 Multiple Tag Allowed: No Tag: MaxVerticalSpeed Tag Format: [MaxVerticalSpeed:Value] Description: This tag specifies the maximum speed that a ship is allow to move on the Y axis (up and down) while using the FlyLevelWithGravity tag. Allowed Values: Any Number Greater or Equal to 0 Multiple Tag Allowed: No Tag: UseSurfaceHoverThrustMode Tag Format: [UseSurfaceHoverThrustMode:Value] Description: This tag specifies if a ship should try to maintain the IdealPlanetAltitude at all times, regardless of the actual target/waypoint altitude. Allowed Values: true false Multiple Tag Allowed: No Tag: HoverPathStepDistance Tag Format: [HoverPathStepDistance:Value] Description: This tag specifies the distance ahead of the ship that it will check the next terrain elevation at. It will also use this value multiplied by 4 when detecting whether or not it needs to ascend up a steep hill of cliff. Allowed Values: Any Number Greater or Equal to 0 Multiple Tag Allowed: No Tag: UseWaterPatrolMode Tag Format: [UseWaterPatrolMode:Value] Description: This tag specifies if a ship should use water related navigation similar to what is found in the Nautical behavior. This only works with certain behavior subclasses. Allowed Values: true false Behaviors: Escort Patrol Multiple Tag Allowed: No Rotation This section contains tags that control rotation of the NPC grid. Tag: RotationMultiplier Tag Format: [RotationMultiplier:Value] Description: This tag specifies a multiplier that is applied to gyro rotation calculations for some behaviors. 2 would be double, while 0.5 would be half. Keep in mind this does multiply the gyro force, only the strength or rotation in each direction. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: LimitRotationSpeed Tag Format: [LimitRotationSpeed:Value] Description: This tag specifies if the NPC ship should limit rotation magnitude on each of its rotation axis to the amount specified in MaxRotationMagnitude . This tag is useful for reducing 'targeting wobble' with grids that have stronger gyro rotation. Allowed Values: true false Multiple Tag Allowed: No Tag: MaxRotationMagnitude Tag Format: [MaxRotationMagnitude:Value] Description: This tag specifies the maximum magnitude (in radians) that each rotation axis is allowed to rotate at if LimitRotationSpeed is true. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Special This section contains tags for special autopilot modes such as Barrel Roll and Ramming. Tag: BarrelRollMinDurationMs Tag Format: [BarrelRollMinDurationMs:Value] Description: This tag specifies the minimum time (in ms) a ship will spend rolling if BarrelRoll is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be lower than BarrelRollMaxDurationMs if tag is provided. Multiple Tag Allowed: No Tag: BarrelRollMaxDurationMs Tag Format: [BarrelRollMaxDurationMs:Value] Description: This tag specifies the maximum time (in ms) a ship will spend rolling if BarrelRoll is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be higher than BarrelRollMinDurationMs if tag is provided. Multiple Tag Allowed: No Tag: RamMinDurationMs Tag Format: [RamMinDurationMs:Value] Description: This tag specifies the minimum time (in ms) a ship will spend attempting to fly into a target if Ramming is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be lower than RamMaxDurationMs if tag is provided. Multiple Tag Allowed: No Tag: RamMaxDurationMs Tag Format: [RamMaxDurationMs:Value] Description: This tag specifies the maximum time (in ms) a ship will spend attempting to fly into a target if Ramming is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be higher than RamMinDurationMs if tag is provided. Multiple Tag Allowed: No Speed This section contains tags that control speed of the NPC grid. Tag: IdealMaxSpeed Tag Format: [IdealMaxSpeed:Value] Description: This tag specifies the max speed that an NPC should attempt to travel at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: IdealMinSpeed Tag Format: [IdealMinSpeed:Value] Description: This tag specifies the minimum speed that a ship will try to slow down to when the SlowDownOnWaypointApproach tag is used. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxSpeedTolerance Tag Format: [MaxSpeedTolerance:Value] Description: This tag specifies the tolerance that is allowed for max speed. If speed is above or below IdealMaxSpeed by more than this value, speed correction will occur. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: SlowDownOnWaypointApproach Tag Format: [SlowDownOnWaypointApproach:Value] Description: This tag specifies if the NPC ship should attempt to slowdown upon approaching a waypoint. The slowdown distance is automatically calculated using the weight and braking force of the ship. Allowed Values: true false Multiple Tag Allowed: No Tag: ExtraSlowDownDistance Tag Format: [ExtraSlowDownDistance:Value] Description: This tag specifies extra stopping distance that is added to the calculation when the SlowDownOnWaypointApproach tag is used. Allowed Values: Any Number Equal or Greater Than 0 Multiple Tag Allowed: No Strafe This section contains tags that control strafing manuevers for behaviors that are capable of using it. Tag: AllowStrafing Tag Format: [AllowStrafing:Value] Description: This tag specifies if Strafing should be enabled for behaviors that are able to use it. Allowed Values: true false Multiple Tag Allowed: No Tag: StrafeMinDurationMs Tag Format: [StrafeMinDurationMs:Value] Description: This tag specifies the minimum time (in milliseconds) that a strafe manuever should last. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMaxDurationMs Tag Format: [StrafeMaxDurationMs:Value] Description: This tag specifies the maximum time (in milliseconds) that a strafe manuever should last. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMinCooldownMs Tag Format: [StrafeMinCooldownMs:Value] Description: This tag specifies the minimum time (in milliseconds) the behavior should wait between strafe manuevers. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMaxCooldownMs Tag Format: [StrafeMaxCooldownMs:Value] Description: This tag specifies the maximum time (in milliseconds) the behavior should wait between strafe manuevers. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeSpeedCutOff Tag Format: [StrafeSpeedCutOff:Value] Description: This tag specifies the speed an NPC must reach before a strafing manuever is terminated, regardless of time remaining for the strafe. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: StrafeDistanceCutOff Tag Format: [StrafeDistanceCutOff:Value] Description: This tag specifies the distance from where the strafe began that an NPC must reach before the strafing manuever is terminated, regardless of time remaining for the strafe. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMinimumTargetDistance Tag Format: [StrafeMinimumTargetDistance:Value] Description: This tag specifies the minimum distance from a target that the NPC must be at to be allowed to strafe in the direction of the target. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMinimumSafeAngleFromTarget Tag Format: [StrafeMinimumSafeAngleFromTarget:Value] Description: This tag specifies the minimum angle from a target for the strafe direction to be considered \"in the direction of the target\". Likely does not need to be changed from default value of 25 in most cases. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Thrust This section contains tags that control thrust properties. Tag: AngleAllowedForForwardThrust Tag Format: [AngleAllowedForForwardThrust:Value] Description: This tag specifies the maximum angle from the forward direction of an NPC before it will engage thrusters to travel to it. Only applicable to behaviors that do not use Keen Autopilot Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxVelocityAngleForSpeedControl Tag Format: [MaxVelocityAngleForSpeedControl:Value] Description: This tag specifies the maximum angle from the ship current velocity direction before it will attempt to use speed control. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No","title":"Autopilot.md"},{"location":"Autopilot/#autopilotmd","text":"Autopilot Profiles in RivalAI allow you to specify a set of rules that are use for how the NPC ship moves to various waypoints and targets. You can attach your Autopilot Profiles to any Behavior Profile by adding a [AutopilotData:Value] tag to the Behavior and replace Value with the SubtypeId of your Autopilot Profile. Example: [AutopilotData:RAI-ExampleAutopilotProfile] It is important that you use a unique SubtypeId for each Autopilot Profile you create, otherwise they may not work correctly. Here's an example of how a Autopilot Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleAutopilotProfile</SubtypeId> </Id> <Description> [RivalAI Autopilot] [SlowDownOnWaypointApproach:true] [ExtraSlowDownDistance:150] [FlyLevelWithGravity:false] [AllowStrafing:true] [StrafeMinDurationMs:1000] [StrafeMaxDurationMs:1500] </Description> </EntityComponent> </EntityComponents> </Definitions> It's also important to note that all the tags below can also be used in the main Behavior profile as well. However, you must be careful when doing so. If you add individual tags before defining an entire AutopilotData tag, all those changes will be overwritten by the Autopilot Profile provided. If provided after the AutopilotData tag, that should be safe - and can be an easy way to make minor adjustments without having to provide an entirely new autopilot profile! Below are the tags you are able to use in your Autopilot Profiles. They are divided into several categories based on what they control. Behavior Collision General Leading Offset Planet Rotation Special Speed Strafe Thrust","title":"Autopilot.md"},{"location":"Autopilot/#behavior","text":"This section contains tags that only work with specific behaviors. Tag: EngageDistanceSpace Tag Format: [EngageDistanceSpace:Value] Description: This tag specifies the max distance from a target waypoint (while in space) before an NPC will switch to its EngageTarget mode (which usually involves rotating to target and strafe). Allowed Values: Any Number Greater Than 0 Value Must be Equal or Lower than DisengageDistanceSpace Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: DisengageDistanceSpace Tag Format: [DisengageDistanceSpace:Value] Description: This tag specifies the minimum distance from a target waypoint (while in space) that an NPC will remain in EngageTarget mode (which usually involves rotating to target and strafe), otherwise will be switched back to a mode where it approach the target instead. Allowed Values: Any Number Greater Than 0 Value Must be Equal or Higher than EngageDistanceSpace Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: EngageDistancePlanet Tag Format: [EngageDistancePlanet:Value] Description: This tag specifies the max distance from a target waypoint (while in gravity) before an NPC will switch to its EngageTarget mode (which usually involves rotating to target and strafe). Allowed Values: Any Number Greater Than 0 Value Must be Equal or Lower than DisengageDistanceSpace Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: DisengageDistancePlanet Tag Format: [DisengageDistancePlanet:Value] Description: This tag specifies the minimum distance from a target waypoint (while in gravity) that an NPC will remain in EngageTarget mode (which usually involves rotating to target and strafe), otherwise will be switched back to a mode where it approach the target instead. Allowed Values: Any Number Greater Than 0 Value Must be Equal or Higher than EngageDistancePlanet Behaviors: Fighter HorseFighter Hunter Nautical Multiple Tag Allowed: No Tag: WaypointWaitTimeTrigger Tag Format: [WaypointWaitTimeTrigger:Value] Description: This tag specifies the time that an NPC will wait at a waypoint after reaching it. Allowed Values: Any Number Greater Than 0 Behaviors: CargoShip HorseFighter Horsefly Multiple Tag Allowed: No Tag: WaypointAbandonTimeTrigger Tag Format: [WaypointAbandonTimeTrigger:Value] Description: This tag specifies the time until an NPC will recalculate their current waypoint if they have not reached it yet. Allowed Values: Any Number Greater Than 0 Behaviors: HorseFighter Horsefly Multiple Tag Allowed: No","title":"Behavior"},{"location":"Autopilot/#collision","text":"This section contains tags that control collision detection. Tag: UseVelocityCollisionEvasion Tag Format: [UseVelocityCollisionEvasion:Value] Description: This tag specifies if the behavior should detect and attempt avoiding collisions in the direction the NPC is travelling in. Allowed Values: true false Multiple Tag Allowed: No Tag: CollisionEvasionWaypointDistance Tag Format: [CollisionEvasionWaypointDistance:Value] Description: This tag specifies how far from an NPCs current position it should try to move off its current path when avoiding a collision. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CollisionFallEvasionWaypointDistance Tag Format: [CollisionFallEvasionWaypointDistance:Value] Description: This tag specifies the distance from an NPCs current position it should try to fly to if attempting to recover from a fall collision on a planet. Fall collisions are considered if your NPCs velocity direction is within 15 degrees of the planet center direction. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CollisionEvasionResumeDistance Tag Format: [CollisionEvasionResumeDistance:Value] Description: This tag specifies the distance from a collision evasion waypoint the NPC must reach before it resumes its regular path. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CollisionEvasionResumeTime Tag Format: [CollisionEvasionResumeTime:Value] Description: This tag specifies the maximum time an NPC can spend trying to reach a collision evasion waypoint before it will abandon the attempt and resume its regular path. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No","title":"Collision"},{"location":"Autopilot/#general","text":"This section contains tags that don't quite fit in the other categories. Tag: DisableInertiaDampeners Tag Format: [DisableInertiaDampeners:Value] Description: This tag specifies if the ship Inertia Dampeners should be disabled. For most behaviors, this is not recommended, but the tag exists for cases if/when it might be necessary. Allowed Values: true false Multiple Tag Allowed: No Tag: WaypointTolerance Tag Format: [WaypointTolerance:Value] Description: This tag specifies the distance from a waypoint or target before some behaviors will perform other actions. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: UseVerticalRetreat Tag Format: [UseVerticalRetreat:Value] Description: This tag specifies if the Despawn coordinates should be calculated in an upward direction when an NPC is retreating. Allowed Values: true false Multiple Tag Allowed: No","title":"General"},{"location":"Autopilot/#leading","text":"This section contains tags that control if NPC should lead a target with weapons. Tag: UseProjectileLeadPrediction Tag Format: [UseProjectileLeadPrediction:Value] Description: This tag specifies if a ship should try to aim ahead of a moving target so projectiles have a better chance to hit. Allowed Values: true false Multiple Tag Allowed: No","title":"Leading"},{"location":"Autopilot/#offset","text":"This section contains tags that control the offset distances some behaviors will use. Tag: OffsetSpaceMinDistFromTarget Tag Format: [OffsetSpaceMinDistFromTarget:Value] Description: This tag specifies the minimum distance from a target (in space) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetSpaceMaxDistFromTarget Tag Format: [OffsetSpaceMaxDistFromTarget:Value] Description: This tag specifies the maximum distance from a target (in space) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMinDistFromTarget Tag Format: [OffsetPlanetMinDistFromTarget:Value] Description: This tag specifies the minimum distance from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMaxDistFromTarget Tag Format: [OffsetPlanetMaxDistFromTarget:Value] Description: This tag specifies the maximum distance from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMinTargetAltitude Tag Format: [OffsetPlanetMinTargetAltitude:Value] Description: This tag specifies the minimum altitude from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: OffsetPlanetMaxTargetAltitude Tag Format: [OffsetPlanetMaxTargetAltitude:Value] Description: This tag specifies the maximum altitude from a target (on planet) that some behaviors will create a random offset position at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: ReverseOffsetDistAltAboveHeight Tag Format: [ReverseOffsetDistAltAboveHeight:Value] Description: This tag specifies if the min and max values of the OffsetPlanet tags should be swapped (altitude becomes distance, distance becomes altitude) if the target is above a certain altitude. This is useful for behaviors that might want to stay high above targets while their near the ground, and fly further away when they're higher in the air. Allowed Values: true false Multiple Tag Allowed: No Tag: ReverseOffsetHeight Tag Format: [ReverseOffsetHeight:Value] Description: This tag specifies the maximum altitude a target can be from the ground before the altitude and distance offset distances are swapped. Only applies when ReverseOffsetDistAltAboveHeight is true Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: PadDistanceFromTarget Tag Format: [PadDistanceFromTarget:Value] Description: This tag specifies extra distance from a target (in the direction of the NPC) that will be considered its target coordinates. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No","title":"Offset"},{"location":"Autopilot/#planet","text":"This section contains tags that control how behaviors react to planetary terrain. Tag: FlyLevelWithGravity Tag Format: [FlyLevelWithGravity:Value] Description: This tag specifies if a ship should fly perpendicular to the planet gravity direction, keeping level with the ground similar to how vanilla autopilot does. This is more useful on larger ships, or ships that use turrets as a primary offensive choice. Allowed Values: true false Multiple Tag Allowed: No Tag: LevelWithGravityWhenIdle Tag Format: [LevelWithGravityWhenIdle:Value] Description: This tag specifies if a ship should rotate perpendicular to the planet gravity direction, keeping level with the ground similar to how vanilla autopilot does. This would happen when a ship arrives and is waiting at a waypoint. Allowed Values: true false Multiple Tag Allowed: No Tag: IdealPlanetAltitude Tag Format: [IdealPlanetAltitude:Value] Description: This tag specifies the ideal altitude an NPC should travel at while travelling to a waypoint or target on a planet. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MinimumPlanetAltitude Tag Format: [MinimumPlanetAltitude:Value] Description: This tag specifies the minimum distance an NPC should travel at while travelling to a waypoint or target on a planet. If the NPC needs to adjust its altitude at any point, it will attempt to climb back to the IdealPlanetAltitude value Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: AltitudeTolerance Tag Format: [AltitudeTolerance:Value] Description: This tag specifies the distance from the IdealPlanetAltitude value that the NPC must be within to resume its regular path travel if it was correcting altitude. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MinAngleForLeveledDescent Tag Format: [MinAngleForLeveledDescent:Value] Description: This tag specifies the minimum angle using the direction from the NPC to the waypoint and the direction from the NPC to UP before the NPC will begin to descend to the waypoint's altitude. This only works with FlyLevelWithGravity enabled. Default value is 0 Allowed Values: 0 to 180 Multiple Tag Allowed: No Tag: MaxAngleForLeveledAscent Tag Format: [MaxAngleForLeveledAscent:Value] Description: This tag specifies the maximum angle using the direction from the NPC to the waypoint and the direction from the NPC to UP that the NPC is allowed to ascend to the waypoint's altitude. This only works with FlyLevelWithGravity enabled. Default value is 180 Allowed Values: 0 to 180 Multiple Tag Allowed: No Tag: MaxVerticalSpeed Tag Format: [MaxVerticalSpeed:Value] Description: This tag specifies the maximum speed that a ship is allow to move on the Y axis (up and down) while using the FlyLevelWithGravity tag. Allowed Values: Any Number Greater or Equal to 0 Multiple Tag Allowed: No Tag: UseSurfaceHoverThrustMode Tag Format: [UseSurfaceHoverThrustMode:Value] Description: This tag specifies if a ship should try to maintain the IdealPlanetAltitude at all times, regardless of the actual target/waypoint altitude. Allowed Values: true false Multiple Tag Allowed: No Tag: HoverPathStepDistance Tag Format: [HoverPathStepDistance:Value] Description: This tag specifies the distance ahead of the ship that it will check the next terrain elevation at. It will also use this value multiplied by 4 when detecting whether or not it needs to ascend up a steep hill of cliff. Allowed Values: Any Number Greater or Equal to 0 Multiple Tag Allowed: No Tag: UseWaterPatrolMode Tag Format: [UseWaterPatrolMode:Value] Description: This tag specifies if a ship should use water related navigation similar to what is found in the Nautical behavior. This only works with certain behavior subclasses. Allowed Values: true false Behaviors: Escort Patrol Multiple Tag Allowed: No","title":"Planet"},{"location":"Autopilot/#rotation","text":"This section contains tags that control rotation of the NPC grid. Tag: RotationMultiplier Tag Format: [RotationMultiplier:Value] Description: This tag specifies a multiplier that is applied to gyro rotation calculations for some behaviors. 2 would be double, while 0.5 would be half. Keep in mind this does multiply the gyro force, only the strength or rotation in each direction. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: LimitRotationSpeed Tag Format: [LimitRotationSpeed:Value] Description: This tag specifies if the NPC ship should limit rotation magnitude on each of its rotation axis to the amount specified in MaxRotationMagnitude . This tag is useful for reducing 'targeting wobble' with grids that have stronger gyro rotation. Allowed Values: true false Multiple Tag Allowed: No Tag: MaxRotationMagnitude Tag Format: [MaxRotationMagnitude:Value] Description: This tag specifies the maximum magnitude (in radians) that each rotation axis is allowed to rotate at if LimitRotationSpeed is true. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No","title":"Rotation"},{"location":"Autopilot/#special","text":"This section contains tags for special autopilot modes such as Barrel Roll and Ramming. Tag: BarrelRollMinDurationMs Tag Format: [BarrelRollMinDurationMs:Value] Description: This tag specifies the minimum time (in ms) a ship will spend rolling if BarrelRoll is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be lower than BarrelRollMaxDurationMs if tag is provided. Multiple Tag Allowed: No Tag: BarrelRollMaxDurationMs Tag Format: [BarrelRollMaxDurationMs:Value] Description: This tag specifies the maximum time (in ms) a ship will spend rolling if BarrelRoll is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be higher than BarrelRollMinDurationMs if tag is provided. Multiple Tag Allowed: No Tag: RamMinDurationMs Tag Format: [RamMinDurationMs:Value] Description: This tag specifies the minimum time (in ms) a ship will spend attempting to fly into a target if Ramming is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be lower than RamMaxDurationMs if tag is provided. Multiple Tag Allowed: No Tag: RamMaxDurationMs Tag Format: [RamMaxDurationMs:Value] Description: This tag specifies the maximum time (in ms) a ship will spend attempting to fly into a target if Ramming is activated from an Action Profile. Allowed Values: Any Number Greater Than 0 Value should be higher than RamMinDurationMs if tag is provided. Multiple Tag Allowed: No","title":"Special"},{"location":"Autopilot/#speed","text":"This section contains tags that control speed of the NPC grid. Tag: IdealMaxSpeed Tag Format: [IdealMaxSpeed:Value] Description: This tag specifies the max speed that an NPC should attempt to travel at. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: IdealMinSpeed Tag Format: [IdealMinSpeed:Value] Description: This tag specifies the minimum speed that a ship will try to slow down to when the SlowDownOnWaypointApproach tag is used. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxSpeedTolerance Tag Format: [MaxSpeedTolerance:Value] Description: This tag specifies the tolerance that is allowed for max speed. If speed is above or below IdealMaxSpeed by more than this value, speed correction will occur. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: SlowDownOnWaypointApproach Tag Format: [SlowDownOnWaypointApproach:Value] Description: This tag specifies if the NPC ship should attempt to slowdown upon approaching a waypoint. The slowdown distance is automatically calculated using the weight and braking force of the ship. Allowed Values: true false Multiple Tag Allowed: No Tag: ExtraSlowDownDistance Tag Format: [ExtraSlowDownDistance:Value] Description: This tag specifies extra stopping distance that is added to the calculation when the SlowDownOnWaypointApproach tag is used. Allowed Values: Any Number Equal or Greater Than 0 Multiple Tag Allowed: No","title":"Speed"},{"location":"Autopilot/#strafe","text":"This section contains tags that control strafing manuevers for behaviors that are capable of using it. Tag: AllowStrafing Tag Format: [AllowStrafing:Value] Description: This tag specifies if Strafing should be enabled for behaviors that are able to use it. Allowed Values: true false Multiple Tag Allowed: No Tag: StrafeMinDurationMs Tag Format: [StrafeMinDurationMs:Value] Description: This tag specifies the minimum time (in milliseconds) that a strafe manuever should last. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMaxDurationMs Tag Format: [StrafeMaxDurationMs:Value] Description: This tag specifies the maximum time (in milliseconds) that a strafe manuever should last. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMinCooldownMs Tag Format: [StrafeMinCooldownMs:Value] Description: This tag specifies the minimum time (in milliseconds) the behavior should wait between strafe manuevers. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMaxCooldownMs Tag Format: [StrafeMaxCooldownMs:Value] Description: This tag specifies the maximum time (in milliseconds) the behavior should wait between strafe manuevers. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: StrafeSpeedCutOff Tag Format: [StrafeSpeedCutOff:Value] Description: This tag specifies the speed an NPC must reach before a strafing manuever is terminated, regardless of time remaining for the strafe. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: StrafeDistanceCutOff Tag Format: [StrafeDistanceCutOff:Value] Description: This tag specifies the distance from where the strafe began that an NPC must reach before the strafing manuever is terminated, regardless of time remaining for the strafe. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMinimumTargetDistance Tag Format: [StrafeMinimumTargetDistance:Value] Description: This tag specifies the minimum distance from a target that the NPC must be at to be allowed to strafe in the direction of the target. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: StrafeMinimumSafeAngleFromTarget Tag Format: [StrafeMinimumSafeAngleFromTarget:Value] Description: This tag specifies the minimum angle from a target for the strafe direction to be considered \"in the direction of the target\". Likely does not need to be changed from default value of 25 in most cases. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No","title":"Strafe"},{"location":"Autopilot/#thrust","text":"This section contains tags that control thrust properties. Tag: AngleAllowedForForwardThrust Tag Format: [AngleAllowedForForwardThrust:Value] Description: This tag specifies the maximum angle from the forward direction of an NPC before it will engage thrusters to travel to it. Only applicable to behaviors that do not use Keen Autopilot Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxVelocityAngleForSpeedControl Tag Format: [MaxVelocityAngleForSpeedControl:Value] Description: This tag specifies the maximum angle from the ship current velocity direction before it will attempt to use speed control. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No","title":"Thrust"},{"location":"Bot-Spawn/","text":"Bot-Spawn.md Bot Spawn Profiles in Modular Encounters Systems allow you to specify a set of rules for how a bot is configured before it is spawned by the AiEnabled mod. Here's an example of how a Bot Spawn Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleBotSpawnProfile</SubtypeId> </Id> <Description> [MES Bot Spawn] [BotType:Police_Bot] [BotDisplayName:Combat Bot] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are all of the eligible tags you can use in your Bot Spawn Profiles: Tag: BotType Tag Format: [BotType:Value] Description: This tag specifies the type of bot that will be spawned. Allowed Values: Any Character type (the Name field in the SBC, not the SubtypeId) Multiple Tag Allowed: No Tag: BotBehavior Tag Format: [BotBehavior:Value] Description: This tag specifies the behavior that the spawned bot will use. If this tag is not defined, then it will use the default behavior that AiEnabled would use when spawning a bot of the selected type. Allowed Values: Any AiEnabled Behavior Role Multiple Tag Allowed: No Tag: BotDisplayName Tag Format: [BotDisplayName:Value] Description: This tag specifies the Display Name of the spawned bot. Allowed Values: Any Name Multiple Tag Allowed: No Tag: Color Tag Format: [Color:Value] Description: Specifies the Color (RGB 0-255) of the spawned bot character. Allowed Values: Any Vector3 Value using this format {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: CanUseAirNodes Tag Format: [CanUseAirNodes:Value] Description: This tag allows you to specify if the bot is able to use Air Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSpaceNodes Tag Format: [CanUseSpaceNodes:Value] Description: This tag allows you to specify if the bot is able to use Space Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: UseGroundNodesFirst Tag Format: [UseGroundNodesFirst:Value] Description: This tag allows you to specify if the bot should try to use ground nodes before using air / space nodes. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseWaterNodes Tag Format: [CanUseWaterNodes:Value] Description: This tag allows you to specify if the bot is able to use water nodes (ie underwater via Water Mod) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: WaterNodesOnly Tag Format: [WaterNodesOnly:Value] Description: This tag allows you to specify if the bot should only use water nodes (ie underwater only bot) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseLadders Tag Format: [CanUseLadders:Value] Description: This tag allows you to specify if the bot is able to climb ladders Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSeats Tag Format: [CanUseSeats:Value] Description: This tag allows you to specify if the bot is able to sit on seating blocks Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: DespawnTicks Tag Format: [DespawnTicks:Value] Description: This tag allows you to specify if the bot should despawn after a set number of game ticks. If value is 0 , then no timer is used. Allowed Value(s): Any Integer Greater/Equal To 0 Default Value(s): 0 Multiple Tags Allowed: No Tag: DeathSound Tag Format: [DeathSound:Value] Description: This tag allows you to specify a custom sound effect that is used when the bot dies. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: AttackSounds Tag Format: [AttackSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot attacks. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: PainSounds Tag Format: [PainSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot takes damage. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: IdleSounds Tag Format: [IdleSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is idle. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: TauntSounds Tag Format: [TauntSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is chasing a target. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: EmoteActions Tag Format: [EmoteActions:Value] Description: This tag allows you to specify one or more emote that are used by nomad bots randomly. Allowed Value(s): Any Emote SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ShotDeviationAngle Tag Format: [ShotDeviationAngle:Value] Description: This tag allows you to specify the angle of deviation that is applied to gunfire from this bot. Allowed Value(s): Any Number Greater/Equal To `0' Default Value(s): 1.5 Multiple Tags Allowed: No Tag: LeadTargets Tag Format: [LeadTargets:Value] Description: This tag allows you to specify if bots should try to lead their target while shooting at them. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: ToolSubtypeId Tag Format: [ToolSubtypeId:Value] Description: This tag allows you to specify a custom tool/weapon for the bot to use. Allowed Value(s): Any Vanilla Tool SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: CanDamageGrids Tag Format: [CanDamageGrids:Value] Description: This tag allows you to specify if the bot is able to damage grids (ie target blocks). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: TargetPriorities Tag Format: [TargetPriorities:Value] Description: This tag allows you to specify one or more target priorities that the bot will use when attacking. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyCharacter IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes Tag: RepairPriorities Tag Format: [RepairPriorities:Value] Description: This tag allows you to specify one or more repair priorities that the bot will use when repairing. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes","title":"Bot-Spawn.md"},{"location":"Bot-Spawn/#bot-spawnmd","text":"Bot Spawn Profiles in Modular Encounters Systems allow you to specify a set of rules for how a bot is configured before it is spawned by the AiEnabled mod. Here's an example of how a Bot Spawn Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleBotSpawnProfile</SubtypeId> </Id> <Description> [MES Bot Spawn] [BotType:Police_Bot] [BotDisplayName:Combat Bot] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are all of the eligible tags you can use in your Bot Spawn Profiles: Tag: BotType Tag Format: [BotType:Value] Description: This tag specifies the type of bot that will be spawned. Allowed Values: Any Character type (the Name field in the SBC, not the SubtypeId) Multiple Tag Allowed: No Tag: BotBehavior Tag Format: [BotBehavior:Value] Description: This tag specifies the behavior that the spawned bot will use. If this tag is not defined, then it will use the default behavior that AiEnabled would use when spawning a bot of the selected type. Allowed Values: Any AiEnabled Behavior Role Multiple Tag Allowed: No Tag: BotDisplayName Tag Format: [BotDisplayName:Value] Description: This tag specifies the Display Name of the spawned bot. Allowed Values: Any Name Multiple Tag Allowed: No Tag: Color Tag Format: [Color:Value] Description: Specifies the Color (RGB 0-255) of the spawned bot character. Allowed Values: Any Vector3 Value using this format {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: CanUseAirNodes Tag Format: [CanUseAirNodes:Value] Description: This tag allows you to specify if the bot is able to use Air Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSpaceNodes Tag Format: [CanUseSpaceNodes:Value] Description: This tag allows you to specify if the bot is able to use Space Nodes (ie Jetpack). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: UseGroundNodesFirst Tag Format: [UseGroundNodesFirst:Value] Description: This tag allows you to specify if the bot should try to use ground nodes before using air / space nodes. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseWaterNodes Tag Format: [CanUseWaterNodes:Value] Description: This tag allows you to specify if the bot is able to use water nodes (ie underwater via Water Mod) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: WaterNodesOnly Tag Format: [WaterNodesOnly:Value] Description: This tag allows you to specify if the bot should only use water nodes (ie underwater only bot) Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseLadders Tag Format: [CanUseLadders:Value] Description: This tag allows you to specify if the bot is able to climb ladders Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CanUseSeats Tag Format: [CanUseSeats:Value] Description: This tag allows you to specify if the bot is able to sit on seating blocks Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: DespawnTicks Tag Format: [DespawnTicks:Value] Description: This tag allows you to specify if the bot should despawn after a set number of game ticks. If value is 0 , then no timer is used. Allowed Value(s): Any Integer Greater/Equal To 0 Default Value(s): 0 Multiple Tags Allowed: No Tag: DeathSound Tag Format: [DeathSound:Value] Description: This tag allows you to specify a custom sound effect that is used when the bot dies. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: AttackSounds Tag Format: [AttackSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot attacks. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: PainSounds Tag Format: [PainSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot takes damage. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: IdleSounds Tag Format: [IdleSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is idle. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: TauntSounds Tag Format: [TauntSounds:Value] Description: This tag allows you to specify one or more custom sound effects that are used when the bot is chasing a target. Allowed Value(s): Any Audio SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: EmoteActions Tag Format: [EmoteActions:Value] Description: This tag allows you to specify one or more emote that are used by nomad bots randomly. Allowed Value(s): Any Emote SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ShotDeviationAngle Tag Format: [ShotDeviationAngle:Value] Description: This tag allows you to specify the angle of deviation that is applied to gunfire from this bot. Allowed Value(s): Any Number Greater/Equal To `0' Default Value(s): 1.5 Multiple Tags Allowed: No Tag: LeadTargets Tag Format: [LeadTargets:Value] Description: This tag allows you to specify if bots should try to lead their target while shooting at them. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: ToolSubtypeId Tag Format: [ToolSubtypeId:Value] Description: This tag allows you to specify a custom tool/weapon for the bot to use. Allowed Value(s): Any Vanilla Tool SubtypeId Default Value(s): N/A Multiple Tags Allowed: No Tag: CanDamageGrids Tag Format: [CanDamageGrids:Value] Description: This tag allows you to specify if the bot is able to damage grids (ie target blocks). Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: TargetPriorities Tag Format: [TargetPriorities:Value] Description: This tag allows you to specify one or more target priorities that the bot will use when attacking. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyCharacter IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes Tag: RepairPriorities Tag Format: [RepairPriorities:Value] Description: This tag allows you to specify one or more repair priorities that the bot will use when repairing. Add them in priority order. Remove entries to have the bot ignore them completely (requires at least one entry for this to take effect). Allowed Value(s): IMyUserControllableGun IMyShipController IMyPowerProducer IMyThrust IMyGyro IMyProductionBlock IMyDoor IMyProgrammableBlock IMyProjector IMyConveyor IMyCargoContainer IMyFunctionalBlock IMyTerminalBlock IMyCubeBlock IMySlimBlock Default Value(s): All allowed values Multiple Tags Allowed: Yes","title":"Bot-Spawn.md"},{"location":"Bugs%2C-Issues%2C-or-Crashes/","text":"Bugs,-Issues,-or-Crashes.md If you are having issues with the mods I curate, please read through this document. Reporting Issues/Crashes while using Torch and/or Plugins If you are experiencing issues or crashing with any of my mods while using Torch and any of its plugins (or any plugins at all), I will ask that you reproduce the issues in an environment where Torch/Plugins are not involved before I consider investigating. The reason I am taking this stance is because I have dealt with several instances of 'False Positive' issue/crash reports when Torch/Plugins are involved. This wastes a lot of my time since I end up chasing issues that do not actually exist in my mods. I understand many server operators prefer to use Torch/Plugins, but because of the unpredictible nature of those types of add-ons, I have no way to ensure that my mods will function properly when server admins choose to use them. If you need a quick way to test mods in a Standard Dedicated Server, I recommend downloading the Dedicated Server software from your Steam Tools and loading/creating a world to test on your local machine. It will likely run a little choppy, but does provide a quick and easy way to test for specific bugs. Crashes If you are seeing a situation where one of my mods is causing the game/server to crash (either to the desktop or the main menu), you MUST provide a complete log file before I will investigate . Without the log file, I cannot see what method/process is responsible for the crash and cannot fix it. A snippet of the stack trace is often not sufficient, please provide the entire log. If you are playing in Single Player or Hosting Local Multiplayer, you can find the most recent logs by doing the following: Press Windows Key + R Enter %AppData%\\SpaceEngineers and Press OK Look for files called SpaceEngineers_YYYYMMDD_HHMMSSmmm.log ( YYYYMMDD_HHMMSSmmm will appear instead as a bunch of numbers representing a time stamp for when you started the session) Identify the most recent log from when the crash occured. The easiest way to provide me with the log file is to upload it on my Discord Server . If you are playing on a Dedicated Server, then the logs are usually found in the SpaceEngineersDedicated folder and follow the naming format SpaceEngineersDedicated_YYYYMMDD_HHMMSSmmm.log . If you are using a 3rd party hosting company, they may have the logs stored in other directories. Consult with their support services if you are unsure how to locate them. Issues If you are experiencing issues that could not be resolved in the other troubleshooting pages, try the following steps first: Remove any unrelated mods, and test to see if the issue persists. If the issue doesn't persist, then add the removed mods back a few at a time until you can narrow down which is causing the conflict. If you find another mod that is conflicting, let me know which mod(s) are causing the issue. If the issue does persist, note any relevant steps to reproduce the issue and provide them to me on the Workshop Page Comments or the Discord Server . Try clearing your mod cache (Keep in mind this will force steam to redownload all workshop items you are currently subscribed to). Right Click on Space Engineers in your Steam Client Library Navigate to Manage > Browse Local Files In the folder that opens, press Alt + UP twice on your keyboard. This should bring you to a folder called steamapps Open the workshop folder. Delete the appworkshop_244850.acf file. Open the content folder. Then open the 244850 folder. Delete everything inside of the 244850 folder. Restart Steam and wait for it to redownload your mod content. Common Issues and Resolutions Below is a list of some common issues you may run into, and some potential solutions: Issues With The Modular Encounters Systems: If you are having issues with Modular Encounters Systems, try following the steps in this guide , specifically in the Troubleshooting Encounters and Other Issues section. Many issues can be resolved with the advice found in that section. Logs Showing a Critical Error: Anytime a mod is reporting a Critical Error, it's almost always the result of a corrupted download from Steam. Try unsubscribing from the mod, restarting Steam, and then resubscribing to the mod. If that doesn't fix it, then follow the steps above regarding clearing your mod cache. Logs Show Mod Errors With Several Resource not found, setting to null messages: This typically means that your server cannot resolve the path directory for some icon files used by some modded definitions. This is typically not going to cause any real issues with the mod, despite how many times it can appear in the log. Logs Show Message Stating Reference issue detected (circular reference or wrong order) for mod one or more times: This message will often appear if you are using any mods that have other mods listed as dependencies. In reality there's no issue, it's just a poorly worded message by the devs to indicate that dependency mods are being loaded. You will often see this with mods using the Modular Encounters Systems, WeaponCore, and TextHudAPI - since they are some of the most common mods that other mods will use as dependencies. Steam Discussions Please refrain from posting issues in the Discussions sections of my mod pages. The main Comments section is fine, but on most of my mod pages I do not have notifications turned on for Discussions, so I will probably miss them if you post them there.","title":"Bugs,-Issues,-or-Crashes.md"},{"location":"Bugs%2C-Issues%2C-or-Crashes/#bugs-issues-or-crashesmd","text":"If you are having issues with the mods I curate, please read through this document.","title":"Bugs,-Issues,-or-Crashes.md"},{"location":"Bugs%2C-Issues%2C-or-Crashes/#reporting-issuescrashes-while-using-torch-andor-plugins","text":"If you are experiencing issues or crashing with any of my mods while using Torch and any of its plugins (or any plugins at all), I will ask that you reproduce the issues in an environment where Torch/Plugins are not involved before I consider investigating. The reason I am taking this stance is because I have dealt with several instances of 'False Positive' issue/crash reports when Torch/Plugins are involved. This wastes a lot of my time since I end up chasing issues that do not actually exist in my mods. I understand many server operators prefer to use Torch/Plugins, but because of the unpredictible nature of those types of add-ons, I have no way to ensure that my mods will function properly when server admins choose to use them. If you need a quick way to test mods in a Standard Dedicated Server, I recommend downloading the Dedicated Server software from your Steam Tools and loading/creating a world to test on your local machine. It will likely run a little choppy, but does provide a quick and easy way to test for specific bugs.","title":"Reporting Issues/Crashes while using Torch and/or Plugins"},{"location":"Bugs%2C-Issues%2C-or-Crashes/#crashes","text":"If you are seeing a situation where one of my mods is causing the game/server to crash (either to the desktop or the main menu), you MUST provide a complete log file before I will investigate . Without the log file, I cannot see what method/process is responsible for the crash and cannot fix it. A snippet of the stack trace is often not sufficient, please provide the entire log. If you are playing in Single Player or Hosting Local Multiplayer, you can find the most recent logs by doing the following: Press Windows Key + R Enter %AppData%\\SpaceEngineers and Press OK Look for files called SpaceEngineers_YYYYMMDD_HHMMSSmmm.log ( YYYYMMDD_HHMMSSmmm will appear instead as a bunch of numbers representing a time stamp for when you started the session) Identify the most recent log from when the crash occured. The easiest way to provide me with the log file is to upload it on my Discord Server . If you are playing on a Dedicated Server, then the logs are usually found in the SpaceEngineersDedicated folder and follow the naming format SpaceEngineersDedicated_YYYYMMDD_HHMMSSmmm.log . If you are using a 3rd party hosting company, they may have the logs stored in other directories. Consult with their support services if you are unsure how to locate them.","title":"Crashes"},{"location":"Bugs%2C-Issues%2C-or-Crashes/#issues","text":"If you are experiencing issues that could not be resolved in the other troubleshooting pages, try the following steps first: Remove any unrelated mods, and test to see if the issue persists. If the issue doesn't persist, then add the removed mods back a few at a time until you can narrow down which is causing the conflict. If you find another mod that is conflicting, let me know which mod(s) are causing the issue. If the issue does persist, note any relevant steps to reproduce the issue and provide them to me on the Workshop Page Comments or the Discord Server . Try clearing your mod cache (Keep in mind this will force steam to redownload all workshop items you are currently subscribed to). Right Click on Space Engineers in your Steam Client Library Navigate to Manage > Browse Local Files In the folder that opens, press Alt + UP twice on your keyboard. This should bring you to a folder called steamapps Open the workshop folder. Delete the appworkshop_244850.acf file. Open the content folder. Then open the 244850 folder. Delete everything inside of the 244850 folder. Restart Steam and wait for it to redownload your mod content.","title":"Issues"},{"location":"Bugs%2C-Issues%2C-or-Crashes/#common-issues-and-resolutions","text":"Below is a list of some common issues you may run into, and some potential solutions: Issues With The Modular Encounters Systems: If you are having issues with Modular Encounters Systems, try following the steps in this guide , specifically in the Troubleshooting Encounters and Other Issues section. Many issues can be resolved with the advice found in that section. Logs Showing a Critical Error: Anytime a mod is reporting a Critical Error, it's almost always the result of a corrupted download from Steam. Try unsubscribing from the mod, restarting Steam, and then resubscribing to the mod. If that doesn't fix it, then follow the steps above regarding clearing your mod cache. Logs Show Mod Errors With Several Resource not found, setting to null messages: This typically means that your server cannot resolve the path directory for some icon files used by some modded definitions. This is typically not going to cause any real issues with the mod, despite how many times it can appear in the log. Logs Show Message Stating Reference issue detected (circular reference or wrong order) for mod one or more times: This message will often appear if you are using any mods that have other mods listed as dependencies. In reality there's no issue, it's just a poorly worded message by the devs to indicate that dependency mods are being loaded. You will often see this with mods using the Modular Encounters Systems, WeaponCore, and TextHudAPI - since they are some of the most common mods that other mods will use as dependencies.","title":"Common Issues and Resolutions"},{"location":"Bugs%2C-Issues%2C-or-Crashes/#steam-discussions","text":"Please refrain from posting issues in the Discussions sections of my mod pages. The main Comments section is fine, but on most of my mod pages I do not have notifications turned on for Discussions, so I will probably miss them if you post them there.","title":"Steam Discussions"},{"location":"Chat/","text":"Chat.md Chat Profiles in Rival AI are used to display chat messages and screen notifications at certain intervals or when certain behavior events are triggered. You can attach your Chat Profiles to any Action Profile by linking the Chat Profile SubtypeId. It is important that you use a unique SubtypeId for each Chat Profile you create, otherwise they may not work correctly. Here is an example of how a Chat Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleChatProfile</SubtypeId> </Id> <Description> [RivalAI Chat] [UseChat:true] [StartsReady:true] [Chance:50] [MaxChats:1] [BroadcastRandomly:true] [Author:Drone Fighter] [Color:Red] [ChatMessages:Hello {PlayerName}, we meet again!] [ChatAudio:GreetingSoundId-A] [BroadcastChatType:Chat] [ChatMessages:How many times do we gotta teach you this lesson old man!] [ChatAudio:GreetingSoundId-B] [BroadcastChatType:Chat] </Description> </EntityComponent> </EntityComponents> </Definitions> The above profile could be attached to an Action Profile that is attached to a PlayerNear Trigger Profile. It is configured to play one message from the messages provided randomly - and only has a 50% chance of broadcasting the message, then it will no longer broadcast from this Chat Profile. Using the settings included in this document, you can have Chat or Notifications that play at timed intervals, or when specific events are triggered in a Trigger Profile. When specifying chat messages in the tags below, there are special tags you can include in your message to dynamically change the text. {PlayerName} - will be replaced with the name of the player receiving the message. {AntennaName} - will be replaced with the name of the sending antenna (highest range antenna is used.) This also works for the Author Name as well. {Faction} - will be replaced with the Faction Tag of the NPC. {GPS} - will be replaced with the GPS coordinates of the grid broadcasting the message (should only use this with chat). {GridName} - will be replaced with the name of the sending grid. This also works for the Author Name as well. Below are the tags you are able to use in your Chat Profiles: Tag: UseChat Tag Format: [UseChat:Value] Description: This tag specifies if the Chat Profile should be enabled. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTime Tag Format: [MinTime:Value] Description: This tag specifies the minimum time (in seconds) before the next Chat message is broadcasted Allowed Values: Any Integer Greater Than 0 Value Must Be Less Than MaxTime Multiple Tag Allowed: No Tag: MaxTime Tag Format: [MaxTime:Value] Description: This tag specifies the maximum time (in seconds) before the next Chat message is broadcasted Allowed Values: Any Integer Greater Than 0 Value Must Be Greater Than MinTime Multiple Tag Allowed: No Tag: StartsReady Tag Format: [StartsReady:Value] Description: This tag specifies if the Chat timer should be ready to broadcast when the Chat Profile is triggered. Allowed Values: true false Multiple Tag Allowed: No Tag: Chance Tag Format: [Chance:Value] Description: This tag specifies the chance ( 100 being always, and 0 being never) that the Chat will broadcast when the Chat Profile is triggered. Allowed Values: Any Integer From 0 to 100 Multiple Tag Allowed: No Tag: MaxChats Tag Format: [MaxChats:Value] Description: This tag specifies the number of times the Chat Profile is allowed to broadcast. Allowed Values: Any Integer From 0 to 100 Multiple Tag Allowed: No Tag: BroadcastRandomly Tag Format: [BroadcastRandomly:Value] Description: This tag specifies if messages provided in your Chat Profile should be broadcasted in randomly. If false , they will be broadcasted from first to last. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoreAntennaRequirement Tag Format: [IgnoreAntennaRequirement:Value] Description: This tag specifies if the Active Antenna Block requirement for Chat/Notifications should be ignored. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoredAntennaRangeOverride Tag Format: [IgnoredAntennaRangeOverride:Value] Description: Specifies the range in meters from the Remote Control block that players will receive Chat/Notifications if the IgnoreAntennaRequirement is set to true . Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: Author Tag Format: [Author:Value] Description: This tag specifies the author displayed when the chat message appears (does not apply for notifications) Allowed Values: Any combination of words Do not use characters [ , ] , : Multiple Tag Allowed: No Tag: Color Tag Format: [Color:Value] Description: This tag specifies the color of the author name when the chat message appears. For notifications, this changes the entire message color. Allowed Values: Red Green Blue White Multiple Tag Allowed: No Tag: ChatMessages Tag Format: [ChatMessages:Value] Description: This tag allows you to specify the message(s) that gets displayed when the Chat is triggered. If multiple instances of this tag are provided, then they will play in order each time the action is triggered (or randomly if BroadcastRandomly is true ). Allowed Values: Any combination of words Do not use characters [ , ] , : Multiple Tag Allowed: Yes Tag: ChatAudio Tag Format: [ChatAudio:Value] Description: This tag specifies the sound file you want to play with your chat message. If providing multiple instances of this tag, the values must be provided in the same order you provided the ChatMessages , otherwise they may play in the wrong order. If a chat message should not play audio, provide the value None Allowed Values: SubtypeId of Audio you want to play. Multiple Tag Allowed: Yes Tag: BroadcastChatType Tag Format: [BroadcastChatType:Value] Description: This tag specifies if the Chat should broadcast as a Chat, Notification, or Both. If providing multiple instances of this tag, the values must be provided in the same order you provided the ChatMessages , otherwise they may trigger in the wrong order. Allowed Values: Chat Notify Both Multiple Tag Allowed: Yes Tag: ChatVolumeMultiplier Tag Format: [ChatVolumeMultiplier:Value] Description: This tag specifies the volume multiplier of audio provided with a particular chat message. To reduce volume by half, you would provide a floating value of 0.5 , etc. If providing multiple instances of this tag, the values must be provided in the same order you provided the ChatMessages and ChatAudio tags, otherwise they may trigger in the wrong order. Allowed Values: Any Value Between 0 and 1 Multiple Tag Allowed: Yes Tag: SendToAllOnlinePlayers Tag Format: [SendToAllOnlinePlayers:Value] Description: This tag specifies if chat message should be sent to all players currently online, regardless of their distance. Allowed Values: true false Multiple Tag Allowed: No Tag: GPSLabel Tag Format: [GPSLabel:Value] Description: This tag specifies the name of the GPS coordinates that are created if you use {GPS} in your chat message. Allowed Values: Any String Excluding Character : . Multiple Tag Allowed: No Tag: GPSOffset Tag Format: [GPSOffset :Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: no Tag: AllowDuplicatedMessages Tag Format: [AllowDuplicatedMessages:Value] Description: This tag allows you to specify if a chat/notification can be broadcast again if the previous message was the same. Allowed Value(s): true false Multiple Tags Allowed: No SendToSpecificPlayers Tag: SendToSpecificPlayers Tag Format: [SendToSpecificPlayers :Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes","title":"Chat.md"},{"location":"Chat/#chatmd","text":"Chat Profiles in Rival AI are used to display chat messages and screen notifications at certain intervals or when certain behavior events are triggered. You can attach your Chat Profiles to any Action Profile by linking the Chat Profile SubtypeId. It is important that you use a unique SubtypeId for each Chat Profile you create, otherwise they may not work correctly. Here is an example of how a Chat Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleChatProfile</SubtypeId> </Id> <Description> [RivalAI Chat] [UseChat:true] [StartsReady:true] [Chance:50] [MaxChats:1] [BroadcastRandomly:true] [Author:Drone Fighter] [Color:Red] [ChatMessages:Hello {PlayerName}, we meet again!] [ChatAudio:GreetingSoundId-A] [BroadcastChatType:Chat] [ChatMessages:How many times do we gotta teach you this lesson old man!] [ChatAudio:GreetingSoundId-B] [BroadcastChatType:Chat] </Description> </EntityComponent> </EntityComponents> </Definitions> The above profile could be attached to an Action Profile that is attached to a PlayerNear Trigger Profile. It is configured to play one message from the messages provided randomly - and only has a 50% chance of broadcasting the message, then it will no longer broadcast from this Chat Profile. Using the settings included in this document, you can have Chat or Notifications that play at timed intervals, or when specific events are triggered in a Trigger Profile. When specifying chat messages in the tags below, there are special tags you can include in your message to dynamically change the text. {PlayerName} - will be replaced with the name of the player receiving the message. {AntennaName} - will be replaced with the name of the sending antenna (highest range antenna is used.) This also works for the Author Name as well. {Faction} - will be replaced with the Faction Tag of the NPC. {GPS} - will be replaced with the GPS coordinates of the grid broadcasting the message (should only use this with chat). {GridName} - will be replaced with the name of the sending grid. This also works for the Author Name as well. Below are the tags you are able to use in your Chat Profiles: Tag: UseChat Tag Format: [UseChat:Value] Description: This tag specifies if the Chat Profile should be enabled. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTime Tag Format: [MinTime:Value] Description: This tag specifies the minimum time (in seconds) before the next Chat message is broadcasted Allowed Values: Any Integer Greater Than 0 Value Must Be Less Than MaxTime Multiple Tag Allowed: No Tag: MaxTime Tag Format: [MaxTime:Value] Description: This tag specifies the maximum time (in seconds) before the next Chat message is broadcasted Allowed Values: Any Integer Greater Than 0 Value Must Be Greater Than MinTime Multiple Tag Allowed: No Tag: StartsReady Tag Format: [StartsReady:Value] Description: This tag specifies if the Chat timer should be ready to broadcast when the Chat Profile is triggered. Allowed Values: true false Multiple Tag Allowed: No Tag: Chance Tag Format: [Chance:Value] Description: This tag specifies the chance ( 100 being always, and 0 being never) that the Chat will broadcast when the Chat Profile is triggered. Allowed Values: Any Integer From 0 to 100 Multiple Tag Allowed: No Tag: MaxChats Tag Format: [MaxChats:Value] Description: This tag specifies the number of times the Chat Profile is allowed to broadcast. Allowed Values: Any Integer From 0 to 100 Multiple Tag Allowed: No Tag: BroadcastRandomly Tag Format: [BroadcastRandomly:Value] Description: This tag specifies if messages provided in your Chat Profile should be broadcasted in randomly. If false , they will be broadcasted from first to last. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoreAntennaRequirement Tag Format: [IgnoreAntennaRequirement:Value] Description: This tag specifies if the Active Antenna Block requirement for Chat/Notifications should be ignored. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoredAntennaRangeOverride Tag Format: [IgnoredAntennaRangeOverride:Value] Description: Specifies the range in meters from the Remote Control block that players will receive Chat/Notifications if the IgnoreAntennaRequirement is set to true . Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: Author Tag Format: [Author:Value] Description: This tag specifies the author displayed when the chat message appears (does not apply for notifications) Allowed Values: Any combination of words Do not use characters [ , ] , : Multiple Tag Allowed: No Tag: Color Tag Format: [Color:Value] Description: This tag specifies the color of the author name when the chat message appears. For notifications, this changes the entire message color. Allowed Values: Red Green Blue White Multiple Tag Allowed: No Tag: ChatMessages Tag Format: [ChatMessages:Value] Description: This tag allows you to specify the message(s) that gets displayed when the Chat is triggered. If multiple instances of this tag are provided, then they will play in order each time the action is triggered (or randomly if BroadcastRandomly is true ). Allowed Values: Any combination of words Do not use characters [ , ] , : Multiple Tag Allowed: Yes Tag: ChatAudio Tag Format: [ChatAudio:Value] Description: This tag specifies the sound file you want to play with your chat message. If providing multiple instances of this tag, the values must be provided in the same order you provided the ChatMessages , otherwise they may play in the wrong order. If a chat message should not play audio, provide the value None Allowed Values: SubtypeId of Audio you want to play. Multiple Tag Allowed: Yes Tag: BroadcastChatType Tag Format: [BroadcastChatType:Value] Description: This tag specifies if the Chat should broadcast as a Chat, Notification, or Both. If providing multiple instances of this tag, the values must be provided in the same order you provided the ChatMessages , otherwise they may trigger in the wrong order. Allowed Values: Chat Notify Both Multiple Tag Allowed: Yes Tag: ChatVolumeMultiplier Tag Format: [ChatVolumeMultiplier:Value] Description: This tag specifies the volume multiplier of audio provided with a particular chat message. To reduce volume by half, you would provide a floating value of 0.5 , etc. If providing multiple instances of this tag, the values must be provided in the same order you provided the ChatMessages and ChatAudio tags, otherwise they may trigger in the wrong order. Allowed Values: Any Value Between 0 and 1 Multiple Tag Allowed: Yes Tag: SendToAllOnlinePlayers Tag Format: [SendToAllOnlinePlayers:Value] Description: This tag specifies if chat message should be sent to all players currently online, regardless of their distance. Allowed Values: true false Multiple Tag Allowed: No Tag: GPSLabel Tag Format: [GPSLabel:Value] Description: This tag specifies the name of the GPS coordinates that are created if you use {GPS} in your chat message. Allowed Values: Any String Excluding Character : . Multiple Tag Allowed: No Tag: GPSOffset Tag Format: [GPSOffset :Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: no Tag: AllowDuplicatedMessages Tag Format: [AllowDuplicatedMessages:Value] Description: This tag allows you to specify if a chat/notification can be broadcast again if the previous message was the same. Allowed Value(s): true false Multiple Tags Allowed: No","title":"Chat.md"},{"location":"Chat/#sendtospecificplayers","text":"Tag: SendToSpecificPlayers Tag Format: [SendToSpecificPlayers :Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes","title":"SendToSpecificPlayers"},{"location":"Command/","text":"Command.md Command Profiles in RivalAI allow you to specify a group of data that is broadcast from one encounter and then received by other encounters within antenna range (or outside, if you choose). It is important that you use a unique SubtypeId for each Command Profile you create, otherwise they may not work correctly. Here's an example of how a Command Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleCommandProfile</SubtypeId> </Id> <Description> [RivalAI Command] [CommandCode:TestCode] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Command Profiles. Tag: CommandCode Tag Format: [CommandCode:Value] Description: This tag specifies the code that is broadcasted with the command. Other NPCs must have Trigger Profiles matching this code to be able to receive and process it. Allowed Values: Any String Value Multiple Tag Allowed: No Tag: CommandDelayTicks Tag Format: [CommandDelayTicks:Value] Description: This tag specifies if there should be a delay before the command code is sent out from the originating NPC. Delay value is in game ticks (60 ticks = 1 second) Allowed Values: Any Integer Value Multiple Tag Allowed: No Tag: SingleRecipient Tag Format: [SingleRecipient:Value] Description: This tag specifies if the command should only process on the first receiver that is able to successfully process Actions after receiving it. Allowed Values: true false Multiple Tag Allowed: No Tag: MatchSenderReceiverOwners Tag Format: [MatchSenderReceiverOwners:Value] Description: This tag specifies if the command should only be processed on grids that match the owner of the command sender. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoreAntennaRequirement Tag Format: [IgnoreAntennaRequirement:Value] Description: This tag specifies if the command should ignore the antenna requirement to send to other encounters. Because no antenna is used, you must also provide a value to the Radius tag as well. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoreReceiverAntennaRequirement Tag Format: [IgnoreReceiverAntennaRequirement:Value] Description: This tag specifies if the command should be able to reach other grids that may not have an active antenna to receive the code with. Allowed Values: true false Multiple Tag Allowed: No Tag: Radius Tag Format: [Radius:Value] Description: This tag specifies the Radius from the sender that other encounters will receive the command if IgnoreAntennaRequirement is true. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxRadius Tag Format: [MaxRadius:Value] Description: This tag specifies the Maximum Radius from the sender that other encounters will receive the command, even if they are within antenna range of the sender. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: SendTargetEntityId Tag Format: [SendTargetEntityId:Value] Description: This tag specifies if the ID of the sender's current target should be sent with the command. Allowed Values: true false Multiple Tag Allowed: No Tag: SendDamagerEntityId Tag Format: [SendDamagerEntityId:Value] Description: This tag specifies if the ID of the last entity that damaged the sender should be sent with the command. Allowed Values: true false Multiple Tag Allowed: No Tag: SendWaypoint Tag Format: [SendWaypoint:Value] Description: This tag specifies if a waypoint profile should be generated and sent along with this command. Allowed Values: true false Multiple Tag Allowed: No Tag: Waypoint Tag Format: [Waypoint:Value] Description: This tag specifies the SubtypeId of a Waypoint Profile that you want to generate and include with your command when using SendWaypoint . Allowed Values: Any Waypoint Profile SubtypeId Multiple Tag Allowed: No Tag: SendGridValue Tag Format: [SendGridValue:Value] Description: This tag specifies if the Grid Value (aka Threat Score) of the broadcasting NPC should be sent with the command. Allowed Values: true false Multiple Tag Allowed: No","title":"Command.md"},{"location":"Command/#commandmd","text":"Command Profiles in RivalAI allow you to specify a group of data that is broadcast from one encounter and then received by other encounters within antenna range (or outside, if you choose). It is important that you use a unique SubtypeId for each Command Profile you create, otherwise they may not work correctly. Here's an example of how a Command Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleCommandProfile</SubtypeId> </Id> <Description> [RivalAI Command] [CommandCode:TestCode] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Command Profiles. Tag: CommandCode Tag Format: [CommandCode:Value] Description: This tag specifies the code that is broadcasted with the command. Other NPCs must have Trigger Profiles matching this code to be able to receive and process it. Allowed Values: Any String Value Multiple Tag Allowed: No Tag: CommandDelayTicks Tag Format: [CommandDelayTicks:Value] Description: This tag specifies if there should be a delay before the command code is sent out from the originating NPC. Delay value is in game ticks (60 ticks = 1 second) Allowed Values: Any Integer Value Multiple Tag Allowed: No Tag: SingleRecipient Tag Format: [SingleRecipient:Value] Description: This tag specifies if the command should only process on the first receiver that is able to successfully process Actions after receiving it. Allowed Values: true false Multiple Tag Allowed: No Tag: MatchSenderReceiverOwners Tag Format: [MatchSenderReceiverOwners:Value] Description: This tag specifies if the command should only be processed on grids that match the owner of the command sender. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoreAntennaRequirement Tag Format: [IgnoreAntennaRequirement:Value] Description: This tag specifies if the command should ignore the antenna requirement to send to other encounters. Because no antenna is used, you must also provide a value to the Radius tag as well. Allowed Values: true false Multiple Tag Allowed: No Tag: IgnoreReceiverAntennaRequirement Tag Format: [IgnoreReceiverAntennaRequirement:Value] Description: This tag specifies if the command should be able to reach other grids that may not have an active antenna to receive the code with. Allowed Values: true false Multiple Tag Allowed: No Tag: Radius Tag Format: [Radius:Value] Description: This tag specifies the Radius from the sender that other encounters will receive the command if IgnoreAntennaRequirement is true. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxRadius Tag Format: [MaxRadius:Value] Description: This tag specifies the Maximum Radius from the sender that other encounters will receive the command, even if they are within antenna range of the sender. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: SendTargetEntityId Tag Format: [SendTargetEntityId:Value] Description: This tag specifies if the ID of the sender's current target should be sent with the command. Allowed Values: true false Multiple Tag Allowed: No Tag: SendDamagerEntityId Tag Format: [SendDamagerEntityId:Value] Description: This tag specifies if the ID of the last entity that damaged the sender should be sent with the command. Allowed Values: true false Multiple Tag Allowed: No Tag: SendWaypoint Tag Format: [SendWaypoint:Value] Description: This tag specifies if a waypoint profile should be generated and sent along with this command. Allowed Values: true false Multiple Tag Allowed: No Tag: Waypoint Tag Format: [Waypoint:Value] Description: This tag specifies the SubtypeId of a Waypoint Profile that you want to generate and include with your command when using SendWaypoint . Allowed Values: Any Waypoint Profile SubtypeId Multiple Tag Allowed: No Tag: SendGridValue Tag Format: [SendGridValue:Value] Description: This tag specifies if the Grid Value (aka Threat Score) of the broadcasting NPC should be sent with the command. Allowed Values: true false Multiple Tag Allowed: No","title":"Command.md"},{"location":"Condition/","text":"Condition.md Condition Profiles in RivalAI allow you to define some extra conditions that must be met before a Trigger Profile can execute its Actions. It is important that you use a unique SubtypeId for each Condition Profile you create, otherwise they may not work correctly. Here's an example of how a Condition Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleConditionProfile</SubtypeId> </Id> <Description> [RivalAI Condition] [UseConditions:true] [MatchAnyCondition:true] </Description> </EntityComponent> </EntityComponents> </Definitions> Tag: UseConditions Tag Format: [UseConditions:Value] Description: This tag specifies if the Condition Profile should be active / used. Allowed Values: true false Multiple Tag Allowed: No Tag: MatchAnyCondition Tag Format: [MatchAnyCondition:Value] Description: This tag allows you to require if all conditions in the profile must be met ( false ), or if any condition can be met ( true ). Allowed Values: true false Multiple Tag Allowed: No Tag: CheckAllLoadedModIDs Tag Format: [CheckAllLoadedModIDs:Value] Description: This tag allows you to check for mods currently loaded in your game world. For this condition to be satisfied, all mod IDs included in AllModIDsToCheck must be present in the world. Allowed Values: true false Multiple Tag Allowed: No Tag: AllModIDsToCheck Tag Format: [AllModIDsToCheck:Value] Description: Specifies a mod ID you want to have checked if CheckAllLoadedModIDs is true . Allowed Values: Any Mod ID Multiple Tag Allowed: Yes Tag: CheckAnyLoadedModIDs Tag Format: [CheckAnyLoadedModIDs:Value] Description: This tag allows you to check for mods currently loaded in your game world. For this condition to be satisfied, any mod IDs included in AnyModIDsToCheck must be present in the world. Allowed Values: true false Multiple Tag Allowed: No Tag: AnyModIDsToCheck Tag Format: [AnyModIDsToCheck:Value] Description: Specifies a mod ID you want to have checked if CheckAnyLoadedModIDs is true . Allowed Values: Any Mod ID Multiple Tag Allowed: Yes Tag: CheckTrueBooleans Tag Format: [CheckTrueBooleans:Value] Description: This tag allows you to check for Boolean Variables stored in the Drone Behavior that are true . All provided variables must be true for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: TrueBooleans Tag Format: [TrueBooleans:Value] Description: Specifies the name of a Boolean Variable you want to have checked if CheckTrueBooleans is true . Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: AllowAnyTrueBoolean Tag Format: [AllowAnyTrueBoolean:Value] Description: This tag allows you to specify if the condition should pass if any of the provided boolean names evaluate as true. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckCustomCounters Tag Format: [CheckCustomCounters:Value] Description: This tag allows you to check for Integer Counter Variables stored in the Drone Behavior. All provided variables must be equal or higher for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: CustomCounters Tag Format: [CustomCounters:Value] Description: Specifies the name of an Integer Counter Variable you want to have checked if CheckCustomCounters is true . You must also provide a value to CustomCountersTargets as well for this tag to work. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: CustomCountersTargets Tag Format: [CustomCountersTargets:Value] Description: Specifies the target value of an Integer Counter Variable you want to have checked if CheckCustomCounters is true . You must also provide a value to CustomCounters as well for this tag to work. Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: Yes Tag: CounterCompareTypes Tag Format: [CounterCompareTypes:Value] Description: Specifies the logic used to determine if the behavior counter check passes or not for each provided counter. If no value is provided for a counter name, then GreaterOrEqual is used by default. Allowed Values: GreaterOrEqual Greater Equal NotEqual Less LessOrEqual Multiple Tag Allowed: Yes Tag: AllowAnyValidCounter Tag Format: [AllowAnyValidCounter:Value] Description: This tag allows you to specify if the condition should pass if any of the provided counters pass their check. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckTrueSandboxBooleans Tag Format: [CheckTrueSandboxBooleans:Value] Description: This tag allows you to check for Boolean Variables stored in the Save File that are true . All provided variables must be true for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: TrueSandboxBooleans Tag Format: [TrueSandboxBooleans:Value] Description: Specifies the name of a Sandbox Boolean Variable you want to have checked if CheckTrueSandboxBooleans is true . Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: AllowAnyTrueSandboxBoolean Tag Format: [AllowAnyTrueSandboxBoolean:Value] Description: This tag allows you to specify if the condition should pass if any of the provided boolean names evaluate as true. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckCustomSandboxCounters Tag Format: [CheckCustomSandboxCounters:Value] Description: This tag allows you to check for Integer Counter Variables stored in the Save File. All provided variables must be equal or higher for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: CustomSandboxCounters Tag Format: [CustomSandboxCounters:Value] Description: Specifies the name of an Integer Counter Variable you want to have checked if CheckCustomSandboxCounters is true . You must also provide a value to CustomSandboxCountersTargets as well for this tag to work. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: CustomSandboxCountersTargets Tag Format: [CustomSandboxCountersTargets:Value] Description: Specifies the target value of an Integer Counter Variable you want to have checked if CheckCustomSandboxCounters is true . You must also provide a value to CustomSandboxCounters as well for this tag to work. Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: Yes Tag: SandboxCounterCompareTypes Tag Format: [SandboxCounterCompareTypes:Value] Description: Specifies the logic used to determine if the sandbox counter check passes or not for each provided counter. If no value is provided for a counter name, then GreaterOrEqual is used by default. Allowed Values: GreaterOrEqual Greater Equal NotEqual Less LessOrEqual Multiple Tag Allowed: Yes Tag: AllowAnyValidSandboxCounter Tag Format: [AllowAnyValidSandboxCounter:Value] Description: This tag allows you to specify if the condition should pass if any of the provided counters pass their check. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckGridSpeed Tag Format: [CheckGridSpeed:Value] Description: This tag allows you to check the current NPC grid speed. For this condition to be satisfied, the grid speed must be between MinGridSpeed and MaxGridSpeed . Allowed Values: true false Multiple Tag Allowed: No Tag: MinGridSpeed Tag Format: [MinGridSpeed:Value] Description: The minimum grid speed that must be met if CheckGridSpeed is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxGridSpeed Multiple Tag Allowed: No Tag: MaxGridSpeed Tag Format: [MaxGridSpeed:Value] Description: The maximum grid speed that must be met if CheckGridSpeed is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinGridSpeed Multiple Tag Allowed: No Tag: CheckMESBlacklistedSpawnGroups Tag Format: [CheckMESBlacklistedSpawnGroups:Value] Description: This tag allows you to check the Modular Encounters Spawner NPC SpawnGroup Blacklist for entries. For this condition to be satisfied.. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawnGroupBlacklistContainsAll Tag Format: [SpawnGroupBlacklistContainsAll:Value] Description: Specifies the name of a SpawnGroup SubtypeID you want checked for if CheckMESBlacklistedSpawnGroups is true . If this tag contains values, then All values must be present in the BlackList for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: SpawnGroupBlacklistContainsAny Tag Format: [SpawnGroupBlacklistContainsAny:Value] Description: Specifies the name of a SpawnGroup SubtypeID you want checked for if CheckMESBlacklistedSpawnGroups is true . If this tag contains values, then Any of values must be present in the BlackList for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: UseRequiredFunctionalBlocks Tag Format: [UseRequiredFunctionalBlocks:Value] Description: Specifies if the condition should check for certain blocks that exist in a functional status on the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: RequiredAllFunctionalBlockNames Tag Format: [RequiredAllFunctionalBlockNames:Value] Description: Specifies the name of a Block you want checked for if UseRequiredFunctionalBlocks is true . If this tag contains values, then the grid must have All blocks (in a working/functional state) with names specified for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: RequiredAnyFunctionalBlockNames Tag Format: [RequiredAnyFunctionalBlockNames:Value] Description: Specifies the name of a Block you want checked for if UseRequiredFunctionalBlocks is true . If this tag contains values, then the grid must have Any blocks (in a working/functional state) with names specified for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: RequiredNoneFunctionalBlockNames Tag Format: [RequiredNoneFunctionalBlockNames:Value] Description: Specifies the name of a Block you want checked for if UseRequiredFunctionalBlocks is true . If this tag contains values, then the grid must have No blocks (in a working/functional state) with names specified for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: CheckTargetAltitudeDifference Tag Format: [CheckTargetAltitudeDifference:Value] Description: Specifies if the condition should check the altitude difference between itself and its current target. Only works if NPC has a valid target and the NPC is in planetary gravity. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetAltitudeDifference Tag Format: [MinTargetAltitudeDifference:Value] Description: The minimum target altitude difference that must be met if CheckTargetAltitudeDifference is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetAltitudeDifference Multiple Tag Allowed: No Tag: MaxTargetAltitudeDifference Tag Format: [MaxTargetAltitudeDifference:Value] Description: The maximum target altitude difference that must be met if CheckTargetAltitudeDifference is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetAltitudeDifference Multiple Tag Allowed: No Tag: CheckTargetDistance Tag Format: [CheckTargetDistance:Value] Description: Specifies if the condition should check the distance difference between itself and its current target. Only works if NPC has a valid target. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetDistance Tag Format: [MinTargetDistance:Value] Description: The minimum target distance difference that must be met if CheckTargetDistance is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetDistance Multiple Tag Allowed: No Tag: MaxTargetDistance Tag Format: [MaxTargetDistance:Value] Description: The maximum target distance difference that must be met if CheckTargetDistance is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetDistance Multiple Tag Allowed: No Tag: CheckTargetAngleFromForward Tag Format: [CheckTargetAngleFromForward:Value] Description: Specifies if the condition should check the angle difference between itself (forward direction) and its current target. Only works if NPC has a valid target. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetAngle Tag Format: [MinTargetAngle:Value] Description: The minimum target angle difference that must be met if CheckTargetAngleFromForward is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetAngle Multiple Tag Allowed: No Tag: MaxTargetAngle Tag Format: [MaxTargetAngle:Value] Description: The maximum target angle difference that must be met if CheckTargetAngleFromForward is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetAngle Multiple Tag Allowed: No Tag: CheckIfTargetIsChasing Tag Format: [CheckIfTargetIsChasing:Value] Description: Specifies if the condition should check the velocity direction angle from the current target to the NPC. Only works if NPC has a valid target. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetChaseAngle Tag Format: [MinTargetChaseAngle:Value] Description: The minimum target velocity angle difference that must be met if CheckIfTargetIsChasing is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetChaseAngle Multiple Tag Allowed: No Tag: MaxTargetChaseAngle Tag Format: [MaxTargetChaseAngle:Value] Description: The maximum target velocity angle difference that must be met if CheckIfTargetIsChasing is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetChaseAngle Multiple Tag Allowed: No Tag: CheckIfGridNameMatches Tag Format: [CheckIfGridNameMatches:Value] Description: Specifies if the condition should check the name of the NPC CubeGrid matches a provided value. Allowed Values: true false Multiple Tag Allowed: No Tag: AllowPartialGridNameMatches Tag Format: [AllowPartialGridNameMatches:Value] Description: Specifies if the NPC CubeGrid name can be a partial match instead of exact. Allowed Values: true false Multiple Tag Allowed: No Tag: GridNamesToCheck Tag Format: [GridNamesToCheck:Value] Description: Specifies the name(s) to check against the NPC CubeGrid name. Allowed Values: Any Grid Name Multiple Tag Allowed: Yes Tag: AltitudeCheck Tag Format: [AltitudeCheck:Value] Description: Specifies if the Altitude of the NPC should be checked for min/max values. Allowed Values: true false Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: The minimum NPC altitude that must be met if AltitudeCheck is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxAltitude Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: The maximum NPC altitude that must be met if AltitudeCheck is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinAltitude Multiple Tag Allowed: No Tag: CheckIfDamagerIsPlayer Tag Format: [CheckIfDamagerIsPlayer:Value] Description: If trigger was activated by a Damage event, this tag specifies if the Damager should be a Player Identity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckIfDamagerIsNpc Tag Format: [CheckIfDamagerIsNpc:Value] Description: If trigger was activated by a Damage event, this tag specifies if the Damager should be an NPC Identity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckIfTargetIsPlayerOwned Tag Format: [CheckIfTargetIsPlayerOwned:Value] Description: Specifies if the current NPC targer should be a Player Owned entity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckIfTargetIsNpcOwned Tag Format: [CheckIfTargetIsNpcOwned:Value] Description: Specifies if the current NPC targer should be an NPC Owned entity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckCommandGridValue Tag Format: [CheckCommandGridValue:Value] Description: If trigger was activated by a Command event, this tag specifies if a check should be performed on the Grid Value (aka Threat Score) of the NPC that sent the command. Allowed Values: true false Multiple Tag Allowed: No Tag: CommandGridValue Tag Format: [CommandGridValue:Value] Description: If using CheckCommandGridValue , this tag specifies the Grid Value that the received Grid Value from the command should be compared against. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CheckCommandGridValueCompare Tag Format: [CheckCommandGridValueCompare:Value] Description: If using CheckCommandGridValue , this tag specifies how the Received Grid Value is compared against the value provided in CommandGridValue . Allowed Values: Equal NotEqual Greater GreaterOrEqual Less LessOrEqual Multiple Tag Allowed: No Tag: CompareCommandGridValue Tag Format: [CompareCommandGridValue:Value] Description: If trigger was activated by a Command event, this tag specifies if a check should be performed on the Grid Value (aka Threat Score) of the NPC that sent the command. This check compares the received Grid Value directly against the value of the NPC that received the command / activated the trigger. Allowed Values: true false Multiple Tag Allowed: No Tag: CompareCommandGridValueMode Tag Format: [CompareCommandGridValueMode:Value] Description: If using CompareCommandGridValue , this tag specifies how the Received Grid Value is compared against the Grid Value of the NPC. Allowed Values: Equal NotEqual Greater GreaterOrEqual Less LessOrEqual Multiple Tag Allowed: No Tag: CompareCommandGridValueSelfMultiplier Tag Format: [CompareCommandGridValueSelfMultiplier:Value] Description: If using CompareCommandGridValue , this tag specifies a multiplier that is applied to the Grid Value of this NPC before the comparing of values is completed. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CommandGravityCheck Tag Format: [CommandGravityCheck:Value] Description: This tag allows you to specify if both NPCs involved with transmission of a command are inside the same gravity field. Allowed Value(s): true false Multiple Tags Allowed: No Tag: CommandGravityMatches Tag Format: [CommandGravityMatches:Value] Description: This tag allows you to specify if the gravity of both NPCs involved with the transmission of a Command should match. Allowed Value(s): true false Multiple Tags Allowed: No Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: This tag specifies if the Condition Profile should pass if the conditions fail. Should all conditions pass, then the profile would evalate as failed. Allowed Value(s): true false Multiple Tags Allowed: No Tag: CheckForBlocksOfType Tag Format: [CheckForBlocksOfType:Value] Description: This tag specifies if certain working/functional block types should be searched for on the grid. If all provided types are found (at least one block of each type), then this condition passes. Allowed Value(s): true false Multiple Tags Allowed: No Tag: BlocksOfType Tag Format: [BlocksOfType:Value] Description: This tag specifies the types of blocks that are searched for on the grid. Allowed Value(s): Any Block TypeId eg: MyObjectBuilder_BatteryBlock Multiple Tags Allowed: Yes Tag: CheckHorizonAngle Tag Format: [CheckHorizonAngle:Value] Description: This tag allows you to check the NPC current forward direction against the angle of the horizon (90 degree from 'up' on a planet) Allowed Value(s): true false Multiple Tags Allowed: No Tag: MinHorizonAngle Tag Format: [MinHorizonAngle:Value] Description: This tag allows you to specify the minimum angle that is checked against the horizon if using CheckHorizonAngle Allowed Value(s): Any Number Greater/Equal To 0 Value must be Less Than or Equal to MaxHorizonAngle if provided. Multiple Tags Allowed: No Tag: MaxHorizonAngle Tag Format: [MaxHorizonAngle:Value] Description: This tag allows you to specify the maximum angle that is checked against the horizon if using CheckHorizonAngle Allowed Value(s): Any Number Greater/Equal To 0 Value must be Less Than or Equal to MinHorizonAngle if provided. Multiple Tags Allowed: No Tag: CheckForSpawnConditions Tag Format: [CheckForSpawnConditions:Value] Description: This tag allows you to check if the encounter was spawned using a specific SpawnCondition Profile. Allowed Value(s): true false Multiple Tags Allowed: No Tag: RequiredSpawnConditions Tag Format: [RequiredSpawnConditions:Value] Description: This tag allows you to specify one or more SpawnCondition Profile SubtypeIds that will be checked against if using CheckForSpawnConditions . Allowed Value(s): Any String Value Multiple Tags Allowed: Yes Tag: CheckForPlanetaryLane Tag Format: [CheckForPlanetaryLane:Value] Description: This tag allows you to check if the encounter is currently inside or outside of a Planetary Lane. Allowed Value(s): true false Multiple Tags Allowed: No Tag: PlanetaryLanePassValue Tag Format: [PlanetaryLanePassValue:Value] Description: This tag specifies whether the grid must be in a planetary lane in order for the CheckForPlanetaryLane check to pass. Allowed Value(s): true false Multiple Tags Allowed: No Tag: IsAttackerHostile Tag Format: [IsAttackerHostile:Value] Description: This tag allows you to specify if the condition should check if the attacking entity has a hostile relation with the NPC. This tag should only be used on triggers using the Damage type. Allowed Value(s): true false Multiple Tags Allowed: No Tag: IsAttackerNeutral Tag Format: [IsAttackerNeutral:Value] Description: This tag allows you to specify if the condition should check if the attacking entity has a neutral relation with the NPC. This tag should only be used on triggers using the Damage type. Allowed Value(s): true false Multiple Tags Allowed: No Tag: IsAttackerFriendly Tag Format: [IsAttackerFriendly:Value] Description: This tag allows you to specify if the condition should check if the attacking entity has a friendly relation with the NPC. This tag should only be used on triggers using the Damage type. Allowed Value(s): true false Multiple Tags Allowed: No","title":"Condition.md"},{"location":"Condition/#conditionmd","text":"Condition Profiles in RivalAI allow you to define some extra conditions that must be met before a Trigger Profile can execute its Actions. It is important that you use a unique SubtypeId for each Condition Profile you create, otherwise they may not work correctly. Here's an example of how a Condition Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleConditionProfile</SubtypeId> </Id> <Description> [RivalAI Condition] [UseConditions:true] [MatchAnyCondition:true] </Description> </EntityComponent> </EntityComponents> </Definitions> Tag: UseConditions Tag Format: [UseConditions:Value] Description: This tag specifies if the Condition Profile should be active / used. Allowed Values: true false Multiple Tag Allowed: No Tag: MatchAnyCondition Tag Format: [MatchAnyCondition:Value] Description: This tag allows you to require if all conditions in the profile must be met ( false ), or if any condition can be met ( true ). Allowed Values: true false Multiple Tag Allowed: No Tag: CheckAllLoadedModIDs Tag Format: [CheckAllLoadedModIDs:Value] Description: This tag allows you to check for mods currently loaded in your game world. For this condition to be satisfied, all mod IDs included in AllModIDsToCheck must be present in the world. Allowed Values: true false Multiple Tag Allowed: No Tag: AllModIDsToCheck Tag Format: [AllModIDsToCheck:Value] Description: Specifies a mod ID you want to have checked if CheckAllLoadedModIDs is true . Allowed Values: Any Mod ID Multiple Tag Allowed: Yes Tag: CheckAnyLoadedModIDs Tag Format: [CheckAnyLoadedModIDs:Value] Description: This tag allows you to check for mods currently loaded in your game world. For this condition to be satisfied, any mod IDs included in AnyModIDsToCheck must be present in the world. Allowed Values: true false Multiple Tag Allowed: No Tag: AnyModIDsToCheck Tag Format: [AnyModIDsToCheck:Value] Description: Specifies a mod ID you want to have checked if CheckAnyLoadedModIDs is true . Allowed Values: Any Mod ID Multiple Tag Allowed: Yes Tag: CheckTrueBooleans Tag Format: [CheckTrueBooleans:Value] Description: This tag allows you to check for Boolean Variables stored in the Drone Behavior that are true . All provided variables must be true for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: TrueBooleans Tag Format: [TrueBooleans:Value] Description: Specifies the name of a Boolean Variable you want to have checked if CheckTrueBooleans is true . Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: AllowAnyTrueBoolean Tag Format: [AllowAnyTrueBoolean:Value] Description: This tag allows you to specify if the condition should pass if any of the provided boolean names evaluate as true. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckCustomCounters Tag Format: [CheckCustomCounters:Value] Description: This tag allows you to check for Integer Counter Variables stored in the Drone Behavior. All provided variables must be equal or higher for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: CustomCounters Tag Format: [CustomCounters:Value] Description: Specifies the name of an Integer Counter Variable you want to have checked if CheckCustomCounters is true . You must also provide a value to CustomCountersTargets as well for this tag to work. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: CustomCountersTargets Tag Format: [CustomCountersTargets:Value] Description: Specifies the target value of an Integer Counter Variable you want to have checked if CheckCustomCounters is true . You must also provide a value to CustomCounters as well for this tag to work. Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: Yes Tag: CounterCompareTypes Tag Format: [CounterCompareTypes:Value] Description: Specifies the logic used to determine if the behavior counter check passes or not for each provided counter. If no value is provided for a counter name, then GreaterOrEqual is used by default. Allowed Values: GreaterOrEqual Greater Equal NotEqual Less LessOrEqual Multiple Tag Allowed: Yes Tag: AllowAnyValidCounter Tag Format: [AllowAnyValidCounter:Value] Description: This tag allows you to specify if the condition should pass if any of the provided counters pass their check. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckTrueSandboxBooleans Tag Format: [CheckTrueSandboxBooleans:Value] Description: This tag allows you to check for Boolean Variables stored in the Save File that are true . All provided variables must be true for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: TrueSandboxBooleans Tag Format: [TrueSandboxBooleans:Value] Description: Specifies the name of a Sandbox Boolean Variable you want to have checked if CheckTrueSandboxBooleans is true . Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: AllowAnyTrueSandboxBoolean Tag Format: [AllowAnyTrueSandboxBoolean:Value] Description: This tag allows you to specify if the condition should pass if any of the provided boolean names evaluate as true. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckCustomSandboxCounters Tag Format: [CheckCustomSandboxCounters:Value] Description: This tag allows you to check for Integer Counter Variables stored in the Save File. All provided variables must be equal or higher for this condition to be satisfied. Allowed Values: true false Multiple Tag Allowed: No Tag: CustomSandboxCounters Tag Format: [CustomSandboxCounters:Value] Description: Specifies the name of an Integer Counter Variable you want to have checked if CheckCustomSandboxCounters is true . You must also provide a value to CustomSandboxCountersTargets as well for this tag to work. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: CustomSandboxCountersTargets Tag Format: [CustomSandboxCountersTargets:Value] Description: Specifies the target value of an Integer Counter Variable you want to have checked if CheckCustomSandboxCounters is true . You must also provide a value to CustomSandboxCounters as well for this tag to work. Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: Yes Tag: SandboxCounterCompareTypes Tag Format: [SandboxCounterCompareTypes:Value] Description: Specifies the logic used to determine if the sandbox counter check passes or not for each provided counter. If no value is provided for a counter name, then GreaterOrEqual is used by default. Allowed Values: GreaterOrEqual Greater Equal NotEqual Less LessOrEqual Multiple Tag Allowed: Yes Tag: AllowAnyValidSandboxCounter Tag Format: [AllowAnyValidSandboxCounter:Value] Description: This tag allows you to specify if the condition should pass if any of the provided counters pass their check. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckGridSpeed Tag Format: [CheckGridSpeed:Value] Description: This tag allows you to check the current NPC grid speed. For this condition to be satisfied, the grid speed must be between MinGridSpeed and MaxGridSpeed . Allowed Values: true false Multiple Tag Allowed: No Tag: MinGridSpeed Tag Format: [MinGridSpeed:Value] Description: The minimum grid speed that must be met if CheckGridSpeed is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxGridSpeed Multiple Tag Allowed: No Tag: MaxGridSpeed Tag Format: [MaxGridSpeed:Value] Description: The maximum grid speed that must be met if CheckGridSpeed is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinGridSpeed Multiple Tag Allowed: No Tag: CheckMESBlacklistedSpawnGroups Tag Format: [CheckMESBlacklistedSpawnGroups:Value] Description: This tag allows you to check the Modular Encounters Spawner NPC SpawnGroup Blacklist for entries. For this condition to be satisfied.. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawnGroupBlacklistContainsAll Tag Format: [SpawnGroupBlacklistContainsAll:Value] Description: Specifies the name of a SpawnGroup SubtypeID you want checked for if CheckMESBlacklistedSpawnGroups is true . If this tag contains values, then All values must be present in the BlackList for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: SpawnGroupBlacklistContainsAny Tag Format: [SpawnGroupBlacklistContainsAny:Value] Description: Specifies the name of a SpawnGroup SubtypeID you want checked for if CheckMESBlacklistedSpawnGroups is true . If this tag contains values, then Any of values must be present in the BlackList for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: UseRequiredFunctionalBlocks Tag Format: [UseRequiredFunctionalBlocks:Value] Description: Specifies if the condition should check for certain blocks that exist in a functional status on the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: RequiredAllFunctionalBlockNames Tag Format: [RequiredAllFunctionalBlockNames:Value] Description: Specifies the name of a Block you want checked for if UseRequiredFunctionalBlocks is true . If this tag contains values, then the grid must have All blocks (in a working/functional state) with names specified for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: RequiredAnyFunctionalBlockNames Tag Format: [RequiredAnyFunctionalBlockNames:Value] Description: Specifies the name of a Block you want checked for if UseRequiredFunctionalBlocks is true . If this tag contains values, then the grid must have Any blocks (in a working/functional state) with names specified for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: RequiredNoneFunctionalBlockNames Tag Format: [RequiredNoneFunctionalBlockNames:Value] Description: Specifies the name of a Block you want checked for if UseRequiredFunctionalBlocks is true . If this tag contains values, then the grid must have No blocks (in a working/functional state) with names specified for the condition to be satisfied. Allowed Values: Any name string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: CheckTargetAltitudeDifference Tag Format: [CheckTargetAltitudeDifference:Value] Description: Specifies if the condition should check the altitude difference between itself and its current target. Only works if NPC has a valid target and the NPC is in planetary gravity. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetAltitudeDifference Tag Format: [MinTargetAltitudeDifference:Value] Description: The minimum target altitude difference that must be met if CheckTargetAltitudeDifference is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetAltitudeDifference Multiple Tag Allowed: No Tag: MaxTargetAltitudeDifference Tag Format: [MaxTargetAltitudeDifference:Value] Description: The maximum target altitude difference that must be met if CheckTargetAltitudeDifference is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetAltitudeDifference Multiple Tag Allowed: No Tag: CheckTargetDistance Tag Format: [CheckTargetDistance:Value] Description: Specifies if the condition should check the distance difference between itself and its current target. Only works if NPC has a valid target. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetDistance Tag Format: [MinTargetDistance:Value] Description: The minimum target distance difference that must be met if CheckTargetDistance is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetDistance Multiple Tag Allowed: No Tag: MaxTargetDistance Tag Format: [MaxTargetDistance:Value] Description: The maximum target distance difference that must be met if CheckTargetDistance is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetDistance Multiple Tag Allowed: No Tag: CheckTargetAngleFromForward Tag Format: [CheckTargetAngleFromForward:Value] Description: Specifies if the condition should check the angle difference between itself (forward direction) and its current target. Only works if NPC has a valid target. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetAngle Tag Format: [MinTargetAngle:Value] Description: The minimum target angle difference that must be met if CheckTargetAngleFromForward is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetAngle Multiple Tag Allowed: No Tag: MaxTargetAngle Tag Format: [MaxTargetAngle:Value] Description: The maximum target angle difference that must be met if CheckTargetAngleFromForward is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetAngle Multiple Tag Allowed: No Tag: CheckIfTargetIsChasing Tag Format: [CheckIfTargetIsChasing:Value] Description: Specifies if the condition should check the velocity direction angle from the current target to the NPC. Only works if NPC has a valid target. Allowed Values: true false Multiple Tag Allowed: No Tag: MinTargetChaseAngle Tag Format: [MinTargetChaseAngle:Value] Description: The minimum target velocity angle difference that must be met if CheckIfTargetIsChasing is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxTargetChaseAngle Multiple Tag Allowed: No Tag: MaxTargetChaseAngle Tag Format: [MaxTargetChaseAngle:Value] Description: The maximum target velocity angle difference that must be met if CheckIfTargetIsChasing is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinTargetChaseAngle Multiple Tag Allowed: No Tag: CheckIfGridNameMatches Tag Format: [CheckIfGridNameMatches:Value] Description: Specifies if the condition should check the name of the NPC CubeGrid matches a provided value. Allowed Values: true false Multiple Tag Allowed: No Tag: AllowPartialGridNameMatches Tag Format: [AllowPartialGridNameMatches:Value] Description: Specifies if the NPC CubeGrid name can be a partial match instead of exact. Allowed Values: true false Multiple Tag Allowed: No Tag: GridNamesToCheck Tag Format: [GridNamesToCheck:Value] Description: Specifies the name(s) to check against the NPC CubeGrid name. Allowed Values: Any Grid Name Multiple Tag Allowed: Yes Tag: AltitudeCheck Tag Format: [AltitudeCheck:Value] Description: Specifies if the Altitude of the NPC should be checked for min/max values. Allowed Values: true false Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: The minimum NPC altitude that must be met if AltitudeCheck is true . Allowed Values: Any number equal or greater than 0 Must be lower than MaxAltitude Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: The maximum NPC altitude that must be met if AltitudeCheck is true . Allowed Values: Any number equal or greater than 0 Must be higher than MinAltitude Multiple Tag Allowed: No Tag: CheckIfDamagerIsPlayer Tag Format: [CheckIfDamagerIsPlayer:Value] Description: If trigger was activated by a Damage event, this tag specifies if the Damager should be a Player Identity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckIfDamagerIsNpc Tag Format: [CheckIfDamagerIsNpc:Value] Description: If trigger was activated by a Damage event, this tag specifies if the Damager should be an NPC Identity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckIfTargetIsPlayerOwned Tag Format: [CheckIfTargetIsPlayerOwned:Value] Description: Specifies if the current NPC targer should be a Player Owned entity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckIfTargetIsNpcOwned Tag Format: [CheckIfTargetIsNpcOwned:Value] Description: Specifies if the current NPC targer should be an NPC Owned entity. Allowed Values: true false Multiple Tag Allowed: No Tag: CheckCommandGridValue Tag Format: [CheckCommandGridValue:Value] Description: If trigger was activated by a Command event, this tag specifies if a check should be performed on the Grid Value (aka Threat Score) of the NPC that sent the command. Allowed Values: true false Multiple Tag Allowed: No Tag: CommandGridValue Tag Format: [CommandGridValue:Value] Description: If using CheckCommandGridValue , this tag specifies the Grid Value that the received Grid Value from the command should be compared against. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CheckCommandGridValueCompare Tag Format: [CheckCommandGridValueCompare:Value] Description: If using CheckCommandGridValue , this tag specifies how the Received Grid Value is compared against the value provided in CommandGridValue . Allowed Values: Equal NotEqual Greater GreaterOrEqual Less LessOrEqual Multiple Tag Allowed: No Tag: CompareCommandGridValue Tag Format: [CompareCommandGridValue:Value] Description: If trigger was activated by a Command event, this tag specifies if a check should be performed on the Grid Value (aka Threat Score) of the NPC that sent the command. This check compares the received Grid Value directly against the value of the NPC that received the command / activated the trigger. Allowed Values: true false Multiple Tag Allowed: No Tag: CompareCommandGridValueMode Tag Format: [CompareCommandGridValueMode:Value] Description: If using CompareCommandGridValue , this tag specifies how the Received Grid Value is compared against the Grid Value of the NPC. Allowed Values: Equal NotEqual Greater GreaterOrEqual Less LessOrEqual Multiple Tag Allowed: No Tag: CompareCommandGridValueSelfMultiplier Tag Format: [CompareCommandGridValueSelfMultiplier:Value] Description: If using CompareCommandGridValue , this tag specifies a multiplier that is applied to the Grid Value of this NPC before the comparing of values is completed. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: CommandGravityCheck Tag Format: [CommandGravityCheck:Value] Description: This tag allows you to specify if both NPCs involved with transmission of a command are inside the same gravity field. Allowed Value(s): true false Multiple Tags Allowed: No Tag: CommandGravityMatches Tag Format: [CommandGravityMatches:Value] Description: This tag allows you to specify if the gravity of both NPCs involved with the transmission of a Command should match. Allowed Value(s): true false Multiple Tags Allowed: No Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: This tag specifies if the Condition Profile should pass if the conditions fail. Should all conditions pass, then the profile would evalate as failed. Allowed Value(s): true false Multiple Tags Allowed: No Tag: CheckForBlocksOfType Tag Format: [CheckForBlocksOfType:Value] Description: This tag specifies if certain working/functional block types should be searched for on the grid. If all provided types are found (at least one block of each type), then this condition passes. Allowed Value(s): true false Multiple Tags Allowed: No Tag: BlocksOfType Tag Format: [BlocksOfType:Value] Description: This tag specifies the types of blocks that are searched for on the grid. Allowed Value(s): Any Block TypeId eg: MyObjectBuilder_BatteryBlock Multiple Tags Allowed: Yes Tag: CheckHorizonAngle Tag Format: [CheckHorizonAngle:Value] Description: This tag allows you to check the NPC current forward direction against the angle of the horizon (90 degree from 'up' on a planet) Allowed Value(s): true false Multiple Tags Allowed: No Tag: MinHorizonAngle Tag Format: [MinHorizonAngle:Value] Description: This tag allows you to specify the minimum angle that is checked against the horizon if using CheckHorizonAngle Allowed Value(s): Any Number Greater/Equal To 0 Value must be Less Than or Equal to MaxHorizonAngle if provided. Multiple Tags Allowed: No Tag: MaxHorizonAngle Tag Format: [MaxHorizonAngle:Value] Description: This tag allows you to specify the maximum angle that is checked against the horizon if using CheckHorizonAngle Allowed Value(s): Any Number Greater/Equal To 0 Value must be Less Than or Equal to MinHorizonAngle if provided. Multiple Tags Allowed: No Tag: CheckForSpawnConditions Tag Format: [CheckForSpawnConditions:Value] Description: This tag allows you to check if the encounter was spawned using a specific SpawnCondition Profile. Allowed Value(s): true false Multiple Tags Allowed: No Tag: RequiredSpawnConditions Tag Format: [RequiredSpawnConditions:Value] Description: This tag allows you to specify one or more SpawnCondition Profile SubtypeIds that will be checked against if using CheckForSpawnConditions . Allowed Value(s): Any String Value Multiple Tags Allowed: Yes Tag: CheckForPlanetaryLane Tag Format: [CheckForPlanetaryLane:Value] Description: This tag allows you to check if the encounter is currently inside or outside of a Planetary Lane. Allowed Value(s): true false Multiple Tags Allowed: No Tag: PlanetaryLanePassValue Tag Format: [PlanetaryLanePassValue:Value] Description: This tag specifies whether the grid must be in a planetary lane in order for the CheckForPlanetaryLane check to pass. Allowed Value(s): true false Multiple Tags Allowed: No Tag: IsAttackerHostile Tag Format: [IsAttackerHostile:Value] Description: This tag allows you to specify if the condition should check if the attacking entity has a hostile relation with the NPC. This tag should only be used on triggers using the Damage type. Allowed Value(s): true false Multiple Tags Allowed: No Tag: IsAttackerNeutral Tag Format: [IsAttackerNeutral:Value] Description: This tag allows you to specify if the condition should check if the attacking entity has a neutral relation with the NPC. This tag should only be used on triggers using the Damage type. Allowed Value(s): true false Multiple Tags Allowed: No Tag: IsAttackerFriendly Tag Format: [IsAttackerFriendly:Value] Description: This tag allows you to specify if the condition should check if the attacking entity has a friendly relation with the NPC. This tag should only be used on triggers using the Damage type. Allowed Value(s): true false Multiple Tags Allowed: No","title":"Condition.md"},{"location":"Core-Behavior/","text":"Core-Behavior.md Behavior Profiles in Rival AI are how you give your NPC grids special behaviors. After specifying a BehaviorName tag that gives your behavior its basic movement patterns, you can then attach all sorts of other tags to the behavior that define its Autopilot rules, Targeting rules, and Triggers that execute when certain conditions are met! Here is an example of how a Behavior Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleActionProfile</SubtypeId> </Id> <Description> [RivalAI Behavior] [BehaviorName:Horsefly] [AutopilotData:RAI-ExampleAutopilotProfile] [TargetData:RAI-ExampleTargetProfile] [Triggers:RAI-ExampleTriggerA] [Triggers:RAI-ExampleTriggerB] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Behavior Profiles. They are divided into several categories based on what they control. Core Damage Despawn Damage EscortSystem Weapons CargoShip Escort Fighter HorseFighter Horsefly Hunter Nautical Passive Patrol Scout Sniper Strike Core These tags are the main building blocks of your behavior. You can specify the type of Behavior your encounter will use, along with other parameters/profiles such as Autopilot, Targeting, Triggers, etc. Tag: BehaviorName Tag Format: [BehaviorName:Value] Description: This tag specifies the type of preset behavior that you NPC should use. Depending on what type you choose, additional tags become available for use (see Behavior Specific Tags section for more details) Allowed Values: CargoShip Escort Fighter HorseFighter Horsefly Hunter Nautical Passive Patrol Strike Multiple Tag Allowed: No Tag: AutopilotData Tag Format: [AutopilotData:Value] Description: This tag specifies the Autopilot Profile that you want your behavior to use. Allowed Values: Any Autopilot Profile SubtypeId Multiple Tag Allowed: No Tag: SecondaryAutopilotData Tag Format: [SecondaryAutopilotData:Value] Description: This tag specifies a second Autopilot Profile that you want your behavior to use. Some behaviors may require this, otherwise it is optional. Allowed Values: Any Autopilot Profile SubtypeId Multiple Tag Allowed: No Tag: TertiaryAutopilotData Tag Format: [TertiaryAutopilotData:Value] Description: This tag specifies a third Autopilot Profile that you want your behavior to use. Some behaviors may require this, otherwise it is optional. Allowed Values: Any Autopilot Profile SubtypeId Multiple Tag Allowed: No Tag: TargetData Tag Format: [TargetData:Value] Description: This tag specifies the Target Profile that you want your behavior to use when acquiring targets. Allowed Values: Any Target Profile SubtypeId Multiple Tag Allowed: No Tag: OverrideTargetData Tag Format: [OverrideTargetData:Value] Description: This tag specifies the Target Profile that you want your behavior to use when acquiring targets from Actions (eg Damage Attacker, Received From Command, Received From Turret, etc). Allowed Values: Any Target Profile SubtypeId Multiple Tag Allowed: No Tag: Triggers Tag Format: [Triggers:Value] Description: This tag specifies Trigger Profiles that you want your behavior to use. Allowed Values: Any Trigger Profile SubtypeId Multiple Tag Allowed: Yes Tag: TriggerGroups Tag Format: [TriggerGroups:Value] Description: This tag specifies TriggerGroup Profiles that you want your behavior to use. Allowed Values: Any TriggerGroup Profile SubtypeId Multiple Tag Allowed: Yes Tag: RemoteControlCode Tag Format: [RemoteControlCode:Value] Description: This tag specifies a code that is attached to the Remote Control and then registered with the Modular Encounters Spawner. This allows you to setup other SpawnGroups to spawn inside/outside a certain distance of this Remote Control while it is active. Allowed Values: Any String Value Multiple Tag Allowed: No Tag: WeaponSystem Tag Format: [WeaponSystem:Value] Description: This tag specifies a Weapon System Profile that you want your behavior to use. Allowed Values: Any Weapon System Profile SubtypeId Multiple Tag Allowed: No Damage The Damage System in Rival AI is used to monitor when damage is taken and how to respond to it. Tag: UseDamageDetection Tag Format: [UseDamageDetection:Value] Description: This tag specifies if an NPC grid should monitor for Damage. When damage is detected, it can be used to with the Trigger System to activate Action Profiles. This tag only need to be assigned to true if you plan to use the Accumulated Damage Conditions in a Condition Profile without having Trigger Profiles that watch for Damage events. If you include any Trigger Profile that watches Damage, this value will default to true Allowed Values: true false Multiple Tag Allowed: No Despawn The Despawn System in Modular Encounters Systems is used to control when an NPC ship should either Retreat and/or Despawn. Tag: UsePlayerDistanceTimer Tag Format: [UsePlayerDistanceTimer:Value] Description: This tag specifies if a despawn timer should be started if there are no players in the area near the NPC. Allowed Values: true false Multiple Tag Allowed: No Tag: PlayerDistanceTimerTrigger Tag Format: [PlayerDistanceTimerTrigger:Value] Description: Specifies the time that a player must be outside of the PlayerDistanceTrigger distance from the NPC before the despawn occurs. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: PlayerDistanceTrigger Tag Format: [PlayerDistanceTrigger:Value] Description: Specifies the max distance a player can be from the NPC before the Player Distance Timer starts. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: UseNoTargetTimer Tag Format: [UseNoTargetTimer:Value] Description: This tag specifies if a retreat timer should be started if there are no valid targets in the area near the NPC. Allowed Values: true false Multiple Tag Allowed: No Tag: NoTargetTimerTrigger Tag Format: [NoTargetTimerTrigger:Value] Description: Specifies the time that must pass without finding a valid target before the NPC retreats. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: UseRetreatTimer Tag Format: [UseRetreatTimer:Value] Description: This tag specifies if a retreat timer should be started immediately after the NPC spawns. Once the timer reaches 0, the NPC would abandon anything it was currently doing and retreat/despawn. Allowed Values: true false Multiple Tag Allowed: No Tag: RetreatTimerTrigger Tag Format: [RetreatTimerTrigger:Value] Description: Specifies the time from spawn that it will take for the Behavior to trigger the Retreat function. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: RetreatDespawnDistance Tag Format: [RetreatDespawnDistance:Value] Description: Specifies the max distance a player can be from the NPC after it begins retreating before the NPC depsawns. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No EscortSystem The Escort System in Modular Encounters Systems is used to assist other ships following an NPC in a formation. Tag: EscortOffsets Tag Format: [EscortOffsets:Value] Description: This tag specifies an offset location from the NPC Remote Control block that will be assigned to other NPCs requesting to escort this NPC. Allowed Values: Any Vector3D String eg {X:100 Y:0 Z:0} Multiple Tag Allowed: Yes CargoShip Behavior Description: The Cargo Ship behavior is designed to be an alternative from using the default Cargo Ship movement types (no-dampener drifting in space or Keen autopilot in gravity). The behavior will use RivalAI Autopilot to drive the ship to the Despawn Coordinates that are generated by the Modular Encounters Spawner. If no Despawn Coordinates were generated by the Spawner, then it will generate its own. In addition to this, the behavior is also able to travel to other waypoints before traveling to its Despawn coordinates. Using Command Profiles with the Trigger / Action system can allow this behavior to receive waypoints generated by other encounters, allowing for events where a ship may fly close to another encounter or station (simulating supply drop off, etc). It is recommended to use this behavior with an Autopilot Profile that uses the FlyLevelWithGravity tag. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Despawn UseNoTargetTimer false The CargoShip behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the CargoShip arrives at a non-despawn waypoint. BehaviorTriggerB This trigger is activated when the CargoShip leaves a waypoint. BehaviorTriggerC This trigger is activated when the CargoShip switches from a despawn waypoint to a non-despawn waypoint. BehaviorTriggerD This trigger is activated when the CargoShip switches from a non-despawn waypoint to a despawn waypoint. Escort Behavior Description: This behavior is used in conjunction with the Trigger/Action/Command system to allow a ship to request escorting another ship (eg: small drone escorting a cargo ship). Once the behavior sends the request, nearby potential 'parent' ships will receive the request. If the parent ship has a trigger configured to receive the command and process the escort request, it will attempt to designate an available escort offset to the requestor (offsets need to be defined in the parent behavior). If an escort offset is successfully designated, then the requestor will travel to the offset and continue to travel to it as long as the ship exists. If an escort cannot acquire a parent grid to follow, then it will trigger a despawn based on time set in WaypointWaitTimeTrigger of the current Autopilot Profile (this only happens while UseNoTargetTimer is true). Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Despawn UseNoTargetTimer true Target Profile TargetType Player Target Profile TargetRelation Enemy Target Profile TargetOwner Player Weapons UseStaticGuns true Fighter Behavior Description: The fighter behavior is designed primarily for small grid drones or fighter craft. It utilizes Forward Facing Static Weapons to engage targets. The behavior will approach the target, and then once it reaches a specified distance, it will switch to another mode where it will rotate towards the target to engage with weapons, while occasionally strafing. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Despawn UseNoTargetTimer true Target Profile TargetType Player Target Profile TargetRelation Enemy Target Profile TargetOwner Player Weapons UseStaticGuns true The Fighter behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the Fighter is within Strafe / Rotate to Target distance (ie Engage). BehaviorTriggerB This trigger is activated when the Fighter is outside Strafe / Rotate to Target distance (ie Approach). Horsefly Behavior Description: The Horsefly behavior is designed for ships of any size that use Turrets as their primary means of attack. The behavior flies to the area of a target. Once within range, the NPC will fly to random positions around the target while the turrets engage. If the NPC cannot reach one of the waypoints after a certain time, it will recalculate a new waypoint. This behavior does not use Static Weapons. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here HorseFighter Behavior Description: One day, the fighter behavior went out for a few drinks. It ended up going home with the Horsefly behavior for some consensual... well, you can use your imagination (or don't, that's probably the sane thing to do). HorseFighter is a combination between the Horsefly and Fighter behaviors. Its main behavior mostly resembles the Horsefly movements where it will fly around a target in randomized patters and engage targets with Turrets. Internally, there is a timer that toggles a switch between Fighter and Horsefly. If the switch is activated and the NPC grid is within range of the target, the behavior will switch to the Rotate and Strafe behavior of the Fighter, engaging with Static Weapons. After the timer triggers the switch to turn off again, the behavior will resume Horsefly-like flight patterns until the timer once again activates the switch. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Below are the custom tags you can use for the Horsefly Behavior: Tag: HorseFighterTimeApproaching Tag Format: [HorseFighterTimeApproaching:Value] Description: This tag specifies the amount of time before the NPC will spend in Horsefly mode before switching to Fighter mode (if in range of the target based on the EngageDistance tags). Allowed Values: Any integer 0 or greater Multiple Tag Allowed: No Tag: HorseFighterTimeEngaging Tag Format: [HorseFighterTimeEngaging:Value] Description: This tag specifies the amount of time before the NPC will spend in Fighter mode before switching to Horsefly mode. Allowed Values: Any integer 0 or greater Multiple Tag Allowed: No Hunter Behavior Description: The hunter behavior is an advanced combat behavior that requires careful setup of its Targeting and Autopilot Profiles to function properly. When the behavior does not have a valid target, it will approach its despawn coordinates using the Primary Autopilot Profile . If the behavior acquires a target, it will begin to approach the target using the Secondary Autopilot Profile if it is still valid when it does it's own timed check. While approaching the target, it requires one of 3 methods to confirm the target as valid. To confirm a valid target, it can use Turret Target Detection, Camera Raycast, or Line of Sight (if the target profile includes that filter). If a target is validated, then the behavior will engage it with Fighter like maneuvering. If a target is lost and no other target can be found, the behavior will still travel to the target's last known location for a short time before resuming its course to despawn coordinates. If another target is later acquired, the process above is repeated. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Profiles Click Here Despawn UseNoTargetTimer true Target Profile TargetType Player Target Profile TargetRelation Enemy Target Profile TargetOwner Player Weapons UseStaticGuns true The Hunter behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the Hunter detects a new target while approaching Despawn. BehaviorTriggerB This trigger is activated when the Hunter loses its current target, but is still approaching the targets last known coordinates. BehaviorTriggerC This trigger is activated when the Hunter loses its current target and resumes travel to Despawn. BehaviorTriggerD This trigger is activated when the Hunter confirms a target and begins to Engage. BehaviorTriggerE This trigger is activated when the Hunter enters Strafe/Rotate range of a target. BehaviorTriggerF This trigger is activated when the Hunter leaves Strafe/Rotate range of a target. Below are the custom tags you can use for the Hunter Behavior: Tag: TimeBetweenNewTargetChecks Tag Format: [TimeBetweenNewTargetChecks:Value] Description: This tag specifies the time it takes to check if the behavior has a valid target to begin approaching. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: LostTargetTimerTrigger Tag Format: [LostTargetTimerTrigger:Value] Description: This tag specifies the time the behavior will spend approaching the last known coordinates of a lost target before resuming travel to its despawn coordinates. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: EngageOnCameraDetection Tag Format: [EngageOnCameraDetection:Value] Description: This tag specifies if the behavior should use Camera Blocks to confirm potential targets that it is approaching. Please be mindful of how many cameras your grid uses, since these checks cannot be done in a parallel thread - meaning they can become a performance concern if spammed. Allowed Values: true false Multiple Tag Allowed: No Tag: EngageOnWeaponActivation Tag Format: [EngageOnWeaponActivation:Value] Description: This tag specifies if the behavior should use Turret Targeting to confirm if an approached target is valid. Allowed Values: true false Multiple Tag Allowed: No Tag: EngageOnTargetLineOfSight Tag Format: [EngageOnTargetLineOfSight:Value] Description: This tag specifies if the behavior should use the LineOfSight filter in the Target Profile to confirm if the approached target is valid. Allowed Values: true false Multiple Tag Allowed: No Tag: CameraDetectionMaxRange Tag Format: [CameraDetectionMaxRange:Value] Description: This tag specifies the max distance that Camera Blocks will attempt to raycast a target if using the EngageOnCameraDetection tag. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Nautical Behavior Description: The Nautical behavior is a specialized behavior that is designed to work with Jakaria's Water Mod . This behavior allows NPCs to navigate to a target while floating in water. It uses pathfinding to navigate around terrain obstacles, allowing it reach targets that may be hiding among complex terrain and water. NPCs using this behavior must be spawned in water, otherwise they will not be able to move. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here The Nautical behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the Nautical is within Strafe / Rotate to Target distance (ie Engage). BehaviorTriggerB This trigger is activated when the Nautical is outside Strafe / Rotate to Target distance (ie Approach). Behavior Tags: See the AutoPilot Profile guide for compatible tags with this behavior. Passive Behavior Description: The passive behavior is designed to be used with Cargo Ship and Station encounters. It does not have any special features on its own, but instead relies on provided configuration in the rest of the behavior settings (Triggers, Actions, etc). Core System Tag Defaults: System: Tag: Value: Despawn UsePlayerDistanceTimer false *** The Passive Behavior Type has not behavior exclusive tags at this time. Patrol Behavior Description: This behavior allows the ship using it to patrol a random area from where the ship first spawned. The distances for this are governed by the same Offset tags that Horsefly and other behaviors use. Scout Sniper Strike Behavior Description: The Strike behavior is designed primarily for small grid drones or fighter craft. It utilizes Forward Facing Static Weapons to engage targets. The behavior will fly in the general direction of a target, and once it gets within a certain range it will charge directly at the target and engage with static weapons. It will then break from the charge, retreating a short distance, and then attempt another charge. If the target is on a planet near the surface, the charge maneuver is reminiscent of a dive-bomb maneuver. This behavior does not use Keen Vanilla AutoPilot at all. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Below are the custom tags you can use for the Strike Behavior: Tag: StrikeBeginSpaceAttackRunDistance Tag Format: [StrikeBeginSpaceAttackRunDistance:Value] Description: This tag specifies the distance (while in space) from the offset coordinates the NPC initially travels to near the target before it switches direction and begins to attack the player. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeBeginPlanetAttackRunDistance Tag Format: [StrikeBeginPlanetAttackRunDistance:Value] Description: This tag specifies the distance (while in natural gravity) from the offset coordinates the NPC initially travels to near the target before it switches direction and begins to attack the player. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeBreakawayDistance Tag Format: [StrikeBreakawayDistance:Value] Description: This tag specifies the distance from a target before the NPC will attempt its breakaway from charging the target. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeOffsetRecalculationTime Tag Format: [StrikeOffsetRecalculationTime:Value] Description: This tag specifies the maximum time (in seconds) that the NPC will spend trying to reach an offset waypoint before recalculating another one (this is useful if the NPC cannot reach a waypoint for some reason). Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeEngageUseSafePlanetPathing Tag Format: [StrikeEngageUseSafePlanetPathing:Value] Description: This tag specifies if the NPC should still use safe planetary pathing while engaging targets on a planet. Default value is true . Disabling this may cause an NPC to crash into terrain when engaging a target in an attack run. Allowed Values: true false Multiple Tag Allowed: No Tag: StrikeEngageUseCollisionEvasion Tag Format: [StrikeEngageUseCollisionEvasion:Value] Description: This tag specifies if the NPC should still use collision evasion while engaging targets. Default value is true . Disabling this may cause an NPC to crash into objects when engaging a target in an attack run. Allowed Values: true false Multiple Tag Allowed: No","title":"Core-Behavior.md"},{"location":"Core-Behavior/#core-behaviormd","text":"Behavior Profiles in Rival AI are how you give your NPC grids special behaviors. After specifying a BehaviorName tag that gives your behavior its basic movement patterns, you can then attach all sorts of other tags to the behavior that define its Autopilot rules, Targeting rules, and Triggers that execute when certain conditions are met! Here is an example of how a Behavior Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleActionProfile</SubtypeId> </Id> <Description> [RivalAI Behavior] [BehaviorName:Horsefly] [AutopilotData:RAI-ExampleAutopilotProfile] [TargetData:RAI-ExampleTargetProfile] [Triggers:RAI-ExampleTriggerA] [Triggers:RAI-ExampleTriggerB] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Behavior Profiles. They are divided into several categories based on what they control. Core Damage Despawn Damage EscortSystem Weapons CargoShip Escort Fighter HorseFighter Horsefly Hunter Nautical Passive Patrol Scout Sniper Strike","title":"Core-Behavior.md"},{"location":"Core-Behavior/#core","text":"These tags are the main building blocks of your behavior. You can specify the type of Behavior your encounter will use, along with other parameters/profiles such as Autopilot, Targeting, Triggers, etc. Tag: BehaviorName Tag Format: [BehaviorName:Value] Description: This tag specifies the type of preset behavior that you NPC should use. Depending on what type you choose, additional tags become available for use (see Behavior Specific Tags section for more details) Allowed Values: CargoShip Escort Fighter HorseFighter Horsefly Hunter Nautical Passive Patrol Strike Multiple Tag Allowed: No Tag: AutopilotData Tag Format: [AutopilotData:Value] Description: This tag specifies the Autopilot Profile that you want your behavior to use. Allowed Values: Any Autopilot Profile SubtypeId Multiple Tag Allowed: No Tag: SecondaryAutopilotData Tag Format: [SecondaryAutopilotData:Value] Description: This tag specifies a second Autopilot Profile that you want your behavior to use. Some behaviors may require this, otherwise it is optional. Allowed Values: Any Autopilot Profile SubtypeId Multiple Tag Allowed: No Tag: TertiaryAutopilotData Tag Format: [TertiaryAutopilotData:Value] Description: This tag specifies a third Autopilot Profile that you want your behavior to use. Some behaviors may require this, otherwise it is optional. Allowed Values: Any Autopilot Profile SubtypeId Multiple Tag Allowed: No Tag: TargetData Tag Format: [TargetData:Value] Description: This tag specifies the Target Profile that you want your behavior to use when acquiring targets. Allowed Values: Any Target Profile SubtypeId Multiple Tag Allowed: No Tag: OverrideTargetData Tag Format: [OverrideTargetData:Value] Description: This tag specifies the Target Profile that you want your behavior to use when acquiring targets from Actions (eg Damage Attacker, Received From Command, Received From Turret, etc). Allowed Values: Any Target Profile SubtypeId Multiple Tag Allowed: No Tag: Triggers Tag Format: [Triggers:Value] Description: This tag specifies Trigger Profiles that you want your behavior to use. Allowed Values: Any Trigger Profile SubtypeId Multiple Tag Allowed: Yes Tag: TriggerGroups Tag Format: [TriggerGroups:Value] Description: This tag specifies TriggerGroup Profiles that you want your behavior to use. Allowed Values: Any TriggerGroup Profile SubtypeId Multiple Tag Allowed: Yes Tag: RemoteControlCode Tag Format: [RemoteControlCode:Value] Description: This tag specifies a code that is attached to the Remote Control and then registered with the Modular Encounters Spawner. This allows you to setup other SpawnGroups to spawn inside/outside a certain distance of this Remote Control while it is active. Allowed Values: Any String Value Multiple Tag Allowed: No Tag: WeaponSystem Tag Format: [WeaponSystem:Value] Description: This tag specifies a Weapon System Profile that you want your behavior to use. Allowed Values: Any Weapon System Profile SubtypeId Multiple Tag Allowed: No","title":"Core"},{"location":"Core-Behavior/#damage","text":"The Damage System in Rival AI is used to monitor when damage is taken and how to respond to it. Tag: UseDamageDetection Tag Format: [UseDamageDetection:Value] Description: This tag specifies if an NPC grid should monitor for Damage. When damage is detected, it can be used to with the Trigger System to activate Action Profiles. This tag only need to be assigned to true if you plan to use the Accumulated Damage Conditions in a Condition Profile without having Trigger Profiles that watch for Damage events. If you include any Trigger Profile that watches Damage, this value will default to true Allowed Values: true false Multiple Tag Allowed: No","title":"Damage"},{"location":"Core-Behavior/#despawn","text":"The Despawn System in Modular Encounters Systems is used to control when an NPC ship should either Retreat and/or Despawn. Tag: UsePlayerDistanceTimer Tag Format: [UsePlayerDistanceTimer:Value] Description: This tag specifies if a despawn timer should be started if there are no players in the area near the NPC. Allowed Values: true false Multiple Tag Allowed: No Tag: PlayerDistanceTimerTrigger Tag Format: [PlayerDistanceTimerTrigger:Value] Description: Specifies the time that a player must be outside of the PlayerDistanceTrigger distance from the NPC before the despawn occurs. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: PlayerDistanceTrigger Tag Format: [PlayerDistanceTrigger:Value] Description: Specifies the max distance a player can be from the NPC before the Player Distance Timer starts. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: UseNoTargetTimer Tag Format: [UseNoTargetTimer:Value] Description: This tag specifies if a retreat timer should be started if there are no valid targets in the area near the NPC. Allowed Values: true false Multiple Tag Allowed: No Tag: NoTargetTimerTrigger Tag Format: [NoTargetTimerTrigger:Value] Description: Specifies the time that must pass without finding a valid target before the NPC retreats. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: UseRetreatTimer Tag Format: [UseRetreatTimer:Value] Description: This tag specifies if a retreat timer should be started immediately after the NPC spawns. Once the timer reaches 0, the NPC would abandon anything it was currently doing and retreat/despawn. Allowed Values: true false Multiple Tag Allowed: No Tag: RetreatTimerTrigger Tag Format: [RetreatTimerTrigger:Value] Description: Specifies the time from spawn that it will take for the Behavior to trigger the Retreat function. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: RetreatDespawnDistance Tag Format: [RetreatDespawnDistance:Value] Description: Specifies the max distance a player can be from the NPC after it begins retreating before the NPC depsawns. Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No","title":"Despawn"},{"location":"Core-Behavior/#escortsystem","text":"The Escort System in Modular Encounters Systems is used to assist other ships following an NPC in a formation. Tag: EscortOffsets Tag Format: [EscortOffsets:Value] Description: This tag specifies an offset location from the NPC Remote Control block that will be assigned to other NPCs requesting to escort this NPC. Allowed Values: Any Vector3D String eg {X:100 Y:0 Z:0} Multiple Tag Allowed: Yes","title":"EscortSystem"},{"location":"Core-Behavior/#cargoship","text":"Behavior Description: The Cargo Ship behavior is designed to be an alternative from using the default Cargo Ship movement types (no-dampener drifting in space or Keen autopilot in gravity). The behavior will use RivalAI Autopilot to drive the ship to the Despawn Coordinates that are generated by the Modular Encounters Spawner. If no Despawn Coordinates were generated by the Spawner, then it will generate its own. In addition to this, the behavior is also able to travel to other waypoints before traveling to its Despawn coordinates. Using Command Profiles with the Trigger / Action system can allow this behavior to receive waypoints generated by other encounters, allowing for events where a ship may fly close to another encounter or station (simulating supply drop off, etc). It is recommended to use this behavior with an Autopilot Profile that uses the FlyLevelWithGravity tag. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Despawn UseNoTargetTimer false The CargoShip behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the CargoShip arrives at a non-despawn waypoint. BehaviorTriggerB This trigger is activated when the CargoShip leaves a waypoint. BehaviorTriggerC This trigger is activated when the CargoShip switches from a despawn waypoint to a non-despawn waypoint. BehaviorTriggerD This trigger is activated when the CargoShip switches from a non-despawn waypoint to a despawn waypoint.","title":"CargoShip"},{"location":"Core-Behavior/#escort","text":"Behavior Description: This behavior is used in conjunction with the Trigger/Action/Command system to allow a ship to request escorting another ship (eg: small drone escorting a cargo ship). Once the behavior sends the request, nearby potential 'parent' ships will receive the request. If the parent ship has a trigger configured to receive the command and process the escort request, it will attempt to designate an available escort offset to the requestor (offsets need to be defined in the parent behavior). If an escort offset is successfully designated, then the requestor will travel to the offset and continue to travel to it as long as the ship exists. If an escort cannot acquire a parent grid to follow, then it will trigger a despawn based on time set in WaypointWaitTimeTrigger of the current Autopilot Profile (this only happens while UseNoTargetTimer is true). Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Despawn UseNoTargetTimer true Target Profile TargetType Player Target Profile TargetRelation Enemy Target Profile TargetOwner Player Weapons UseStaticGuns true","title":"Escort"},{"location":"Core-Behavior/#fighter","text":"Behavior Description: The fighter behavior is designed primarily for small grid drones or fighter craft. It utilizes Forward Facing Static Weapons to engage targets. The behavior will approach the target, and then once it reaches a specified distance, it will switch to another mode where it will rotate towards the target to engage with weapons, while occasionally strafing. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Despawn UseNoTargetTimer true Target Profile TargetType Player Target Profile TargetRelation Enemy Target Profile TargetOwner Player Weapons UseStaticGuns true The Fighter behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the Fighter is within Strafe / Rotate to Target distance (ie Engage). BehaviorTriggerB This trigger is activated when the Fighter is outside Strafe / Rotate to Target distance (ie Approach).","title":"Fighter"},{"location":"Core-Behavior/#horsefly","text":"Behavior Description: The Horsefly behavior is designed for ships of any size that use Turrets as their primary means of attack. The behavior flies to the area of a target. Once within range, the NPC will fly to random positions around the target while the turrets engage. If the NPC cannot reach one of the waypoints after a certain time, it will recalculate a new waypoint. This behavior does not use Static Weapons. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here","title":"Horsefly"},{"location":"Core-Behavior/#horsefighter","text":"Behavior Description: One day, the fighter behavior went out for a few drinks. It ended up going home with the Horsefly behavior for some consensual... well, you can use your imagination (or don't, that's probably the sane thing to do). HorseFighter is a combination between the Horsefly and Fighter behaviors. Its main behavior mostly resembles the Horsefly movements where it will fly around a target in randomized patters and engage targets with Turrets. Internally, there is a timer that toggles a switch between Fighter and Horsefly. If the switch is activated and the NPC grid is within range of the target, the behavior will switch to the Rotate and Strafe behavior of the Fighter, engaging with Static Weapons. After the timer triggers the switch to turn off again, the behavior will resume Horsefly-like flight patterns until the timer once again activates the switch. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Below are the custom tags you can use for the Horsefly Behavior: Tag: HorseFighterTimeApproaching Tag Format: [HorseFighterTimeApproaching:Value] Description: This tag specifies the amount of time before the NPC will spend in Horsefly mode before switching to Fighter mode (if in range of the target based on the EngageDistance tags). Allowed Values: Any integer 0 or greater Multiple Tag Allowed: No Tag: HorseFighterTimeEngaging Tag Format: [HorseFighterTimeEngaging:Value] Description: This tag specifies the amount of time before the NPC will spend in Fighter mode before switching to Horsefly mode. Allowed Values: Any integer 0 or greater Multiple Tag Allowed: No","title":"HorseFighter"},{"location":"Core-Behavior/#hunter","text":"Behavior Description: The hunter behavior is an advanced combat behavior that requires careful setup of its Targeting and Autopilot Profiles to function properly. When the behavior does not have a valid target, it will approach its despawn coordinates using the Primary Autopilot Profile . If the behavior acquires a target, it will begin to approach the target using the Secondary Autopilot Profile if it is still valid when it does it's own timed check. While approaching the target, it requires one of 3 methods to confirm the target as valid. To confirm a valid target, it can use Turret Target Detection, Camera Raycast, or Line of Sight (if the target profile includes that filter). If a target is validated, then the behavior will engage it with Fighter like maneuvering. If a target is lost and no other target can be found, the behavior will still travel to the target's last known location for a short time before resuming its course to despawn coordinates. If another target is later acquired, the process above is repeated. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Profiles Click Here Despawn UseNoTargetTimer true Target Profile TargetType Player Target Profile TargetRelation Enemy Target Profile TargetOwner Player Weapons UseStaticGuns true The Hunter behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the Hunter detects a new target while approaching Despawn. BehaviorTriggerB This trigger is activated when the Hunter loses its current target, but is still approaching the targets last known coordinates. BehaviorTriggerC This trigger is activated when the Hunter loses its current target and resumes travel to Despawn. BehaviorTriggerD This trigger is activated when the Hunter confirms a target and begins to Engage. BehaviorTriggerE This trigger is activated when the Hunter enters Strafe/Rotate range of a target. BehaviorTriggerF This trigger is activated when the Hunter leaves Strafe/Rotate range of a target. Below are the custom tags you can use for the Hunter Behavior: Tag: TimeBetweenNewTargetChecks Tag Format: [TimeBetweenNewTargetChecks:Value] Description: This tag specifies the time it takes to check if the behavior has a valid target to begin approaching. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: LostTargetTimerTrigger Tag Format: [LostTargetTimerTrigger:Value] Description: This tag specifies the time the behavior will spend approaching the last known coordinates of a lost target before resuming travel to its despawn coordinates. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: EngageOnCameraDetection Tag Format: [EngageOnCameraDetection:Value] Description: This tag specifies if the behavior should use Camera Blocks to confirm potential targets that it is approaching. Please be mindful of how many cameras your grid uses, since these checks cannot be done in a parallel thread - meaning they can become a performance concern if spammed. Allowed Values: true false Multiple Tag Allowed: No Tag: EngageOnWeaponActivation Tag Format: [EngageOnWeaponActivation:Value] Description: This tag specifies if the behavior should use Turret Targeting to confirm if an approached target is valid. Allowed Values: true false Multiple Tag Allowed: No Tag: EngageOnTargetLineOfSight Tag Format: [EngageOnTargetLineOfSight:Value] Description: This tag specifies if the behavior should use the LineOfSight filter in the Target Profile to confirm if the approached target is valid. Allowed Values: true false Multiple Tag Allowed: No Tag: CameraDetectionMaxRange Tag Format: [CameraDetectionMaxRange:Value] Description: This tag specifies the max distance that Camera Blocks will attempt to raycast a target if using the EngageOnCameraDetection tag. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No","title":"Hunter"},{"location":"Core-Behavior/#nautical","text":"Behavior Description: The Nautical behavior is a specialized behavior that is designed to work with Jakaria's Water Mod . This behavior allows NPCs to navigate to a target while floating in water. It uses pathfinding to navigate around terrain obstacles, allowing it reach targets that may be hiding among complex terrain and water. NPCs using this behavior must be spawned in water, otherwise they will not be able to move. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here The Nautical behavior type also has some custom Trigger Types as well. Below they are described: Type: Description: BehaviorTriggerA This trigger is activated when the Nautical is within Strafe / Rotate to Target distance (ie Engage). BehaviorTriggerB This trigger is activated when the Nautical is outside Strafe / Rotate to Target distance (ie Approach). Behavior Tags: See the AutoPilot Profile guide for compatible tags with this behavior.","title":"Nautical"},{"location":"Core-Behavior/#passive","text":"Behavior Description: The passive behavior is designed to be used with Cargo Ship and Station encounters. It does not have any special features on its own, but instead relies on provided configuration in the rest of the behavior settings (Triggers, Actions, etc). Core System Tag Defaults: System: Tag: Value: Despawn UsePlayerDistanceTimer false *** The Passive Behavior Type has not behavior exclusive tags at this time.","title":"Passive"},{"location":"Core-Behavior/#patrol","text":"Behavior Description: This behavior allows the ship using it to patrol a random area from where the ship first spawned. The distances for this are governed by the same Offset tags that Horsefly and other behaviors use.","title":"Patrol"},{"location":"Core-Behavior/#scout","text":"","title":"Scout"},{"location":"Core-Behavior/#sniper","text":"","title":"Sniper"},{"location":"Core-Behavior/#strike","text":"Behavior Description: The Strike behavior is designed primarily for small grid drones or fighter craft. It utilizes Forward Facing Static Weapons to engage targets. The behavior will fly in the general direction of a target, and once it gets within a certain range it will charge directly at the target and engage with static weapons. It will then break from the charge, retreating a short distance, and then attempt another charge. If the target is on a planet near the surface, the charge maneuver is reminiscent of a dive-bomb maneuver. This behavior does not use Keen Vanilla AutoPilot at all. Core System Tag Defaults: System: Tag: Value: AutoPilot Default Primary Profile Click Here Below are the custom tags you can use for the Strike Behavior: Tag: StrikeBeginSpaceAttackRunDistance Tag Format: [StrikeBeginSpaceAttackRunDistance:Value] Description: This tag specifies the distance (while in space) from the offset coordinates the NPC initially travels to near the target before it switches direction and begins to attack the player. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeBeginPlanetAttackRunDistance Tag Format: [StrikeBeginPlanetAttackRunDistance:Value] Description: This tag specifies the distance (while in natural gravity) from the offset coordinates the NPC initially travels to near the target before it switches direction and begins to attack the player. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeBreakawayDistance Tag Format: [StrikeBreakawayDistance:Value] Description: This tag specifies the distance from a target before the NPC will attempt its breakaway from charging the target. Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeOffsetRecalculationTime Tag Format: [StrikeOffsetRecalculationTime:Value] Description: This tag specifies the maximum time (in seconds) that the NPC will spend trying to reach an offset waypoint before recalculating another one (this is useful if the NPC cannot reach a waypoint for some reason). Allowed Values: Any number greater than 0 Multiple Tag Allowed: No Tag: StrikeEngageUseSafePlanetPathing Tag Format: [StrikeEngageUseSafePlanetPathing:Value] Description: This tag specifies if the NPC should still use safe planetary pathing while engaging targets on a planet. Default value is true . Disabling this may cause an NPC to crash into terrain when engaging a target in an attack run. Allowed Values: true false Multiple Tag Allowed: No Tag: StrikeEngageUseCollisionEvasion Tag Format: [StrikeEngageUseCollisionEvasion:Value] Description: This tag specifies if the NPC should still use collision evasion while engaging targets. Default value is true . Disabling this may cause an NPC to crash into objects when engaging a target in an attack run. Allowed Values: true false Multiple Tag Allowed: No","title":"Strike"},{"location":"Custom-Event-Actions-and-ScenarioTools/","text":"Custom-Event-Actions-and-ScenarioTools.md EventActions continuation Tags Tag: ActivateCustomAction Tag Format: [ActivateCustomAction:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CustomActionName Tag Format: [CustomActionName:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: no Tag: CustomActionArgumentsString Tag Format: [CustomActionArgumentsString:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CustomActionArgumentsBool Tag Format: [CustomActionArgumentsBool:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: yes Tag: CustomActionArgumentsInt Tag Format: [CustomActionArgumentsInt:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsFloat Tag Format: [CustomActionArgumentsFloat:Value] Description: nan Allowed Values: Any float equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsLong Tag Format: [CustomActionArgumentsLong:Value] Description: nan Allowed Values: Any long equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsDouble Tag Format: [CustomActionArgumentsDouble:Value] Description: nan Allowed Values: Any double equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsVector3D Tag Format: [CustomActionArgumentsVector3D:Value] Description: nan Allowed Values: Any Vector3D equal or greater than 0 Multiple Tag Allowed: yes Scenario Tools Mod link Scenario Tools is an extension of MES. Scenario Tools Custom Actions: Overview: ScT-CreateGPS ScT-RemoveGPS ScT-AddNews ScT-SpawnPlanetaryInstallation ScT-SpawnPlanetaryBlockade ScT-CreateGPS This custom action creates a new GPS marker with specified parameters. Parameters: string name: The name of the GPS marker. string desc: The description of the GPS marker. int time: The time (in minutes) the GPS marker will be active. Vector3D coord: The coordinates of the GPS marker. <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-CreateGPS] [CustomActionArgumentsString:Story Event] [CustomActionArgumentsString:Oh the humanity!] [CustomActionArgumentsInt:120] [CustomActionArgumentsVector3D:{X:-1725718.78 Y:1493440.69 Z:-698321.45}] </Description> </EntityComponent> ScT-RemoveGPS Parameters: string name:Name of the GPS, so that was created by Create GPS The name of the GPS. Usage: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-RemoveGPS] [CustomActionArgumentsString:Story Event] </Description> </EntityComponent> ScT-AddNews This custom action adds a news item to a LCD script. Parameters: string text: The text of the news item. <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-AddNews] [CustomActionArgumentsString:FAF Captured Carcosa] </Description> </EntityComponent> ScT-SpawnPlanetaryInstallation (DON\"T USE) Description: This custom action spawns a planetary installation at a specified location. Parameters: string spawnGroup: The group name for the planetary installation. Vector3D coord: The coordinates of the area where the installation should be spawned . <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-SpawnPlanetaryInstallation] [CustomActionArgumentsString:FAFCarcosa] [CustomActionArgumentsVector3D:{X:-1169412.7 Y:97934.39 Z:1325510.96}] </Description> </EntityComponent> ScT-SpawnPlanetaryBlockade (DON\"T USE) Description: This custom action spawns a planetary blockade near players within a specified radius. This needs to be connected to a Event Condition that uses playernear Parameters: string spawnGroup: The group name for the spawned blockade. int MinRadius: The minimum radius from players for spawning. int MaxRadius: The maximum radius from players for spawning. int SpawnDistance: The distance from players where the blockade should be spawned. Vector3D PlanetCentercoord: The coordinates of the center of the planet. <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>Mod-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-SpawnPlanetaryBlockade] [CustomActionArgumentsString:GC-SpawnGroup-HeavyGarrison] [CustomActionArgumentsInt:70000] [CustomActionArgumentsInt:78000] [CustomActionArgumentsInt:4500] [CustomActionArgumentsVector3D:{X:1449429.5 Y:-622819.5 Z:-2854387.5}] </Description> </EntityComponent>","title":"Custom-Event-Actions-and-ScenarioTools.md"},{"location":"Custom-Event-Actions-and-ScenarioTools/#custom-event-actions-and-scenariotoolsmd","text":"","title":"Custom-Event-Actions-and-ScenarioTools.md"},{"location":"Custom-Event-Actions-and-ScenarioTools/#eventactions-continuation","text":"","title":"EventActions continuation"},{"location":"Custom-Event-Actions-and-ScenarioTools/#tags","text":"Tag: ActivateCustomAction Tag Format: [ActivateCustomAction:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CustomActionName Tag Format: [CustomActionName:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: no Tag: CustomActionArgumentsString Tag Format: [CustomActionArgumentsString:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CustomActionArgumentsBool Tag Format: [CustomActionArgumentsBool:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: yes Tag: CustomActionArgumentsInt Tag Format: [CustomActionArgumentsInt:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsFloat Tag Format: [CustomActionArgumentsFloat:Value] Description: nan Allowed Values: Any float equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsLong Tag Format: [CustomActionArgumentsLong:Value] Description: nan Allowed Values: Any long equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsDouble Tag Format: [CustomActionArgumentsDouble:Value] Description: nan Allowed Values: Any double equal or greater than 0 Multiple Tag Allowed: yes Tag: CustomActionArgumentsVector3D Tag Format: [CustomActionArgumentsVector3D:Value] Description: nan Allowed Values: Any Vector3D equal or greater than 0 Multiple Tag Allowed: yes","title":"Tags"},{"location":"Custom-Event-Actions-and-ScenarioTools/#scenario-tools","text":"Mod link Scenario Tools is an extension of MES. Scenario Tools Custom Actions: Overview: ScT-CreateGPS ScT-RemoveGPS ScT-AddNews ScT-SpawnPlanetaryInstallation ScT-SpawnPlanetaryBlockade","title":"Scenario Tools"},{"location":"Custom-Event-Actions-and-ScenarioTools/#sct-creategps","text":"This custom action creates a new GPS marker with specified parameters. Parameters: string name: The name of the GPS marker. string desc: The description of the GPS marker. int time: The time (in minutes) the GPS marker will be active. Vector3D coord: The coordinates of the GPS marker. <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-CreateGPS] [CustomActionArgumentsString:Story Event] [CustomActionArgumentsString:Oh the humanity!] [CustomActionArgumentsInt:120] [CustomActionArgumentsVector3D:{X:-1725718.78 Y:1493440.69 Z:-698321.45}] </Description> </EntityComponent>","title":"ScT-CreateGPS"},{"location":"Custom-Event-Actions-and-ScenarioTools/#sct-removegps","text":"Parameters: string name:Name of the GPS, so that was created by Create GPS The name of the GPS. Usage: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-RemoveGPS] [CustomActionArgumentsString:Story Event] </Description> </EntityComponent>","title":"ScT-RemoveGPS"},{"location":"Custom-Event-Actions-and-ScenarioTools/#sct-addnews","text":"This custom action adds a news item to a LCD script. Parameters: string text: The text of the news item. <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-AddNews] [CustomActionArgumentsString:FAF Captured Carcosa] </Description> </EntityComponent>","title":"ScT-AddNews"},{"location":"Custom-Event-Actions-and-ScenarioTools/#sct-spawnplanetaryinstallation-dont-use","text":"Description: This custom action spawns a planetary installation at a specified location. Parameters: string spawnGroup: The group name for the planetary installation. Vector3D coord: The coordinates of the area where the installation should be spawned . <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MOD-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-SpawnPlanetaryInstallation] [CustomActionArgumentsString:FAFCarcosa] [CustomActionArgumentsVector3D:{X:-1169412.7 Y:97934.39 Z:1325510.96}] </Description> </EntityComponent>","title":"ScT-SpawnPlanetaryInstallation (DON\"T USE)"},{"location":"Custom-Event-Actions-and-ScenarioTools/#sct-spawnplanetaryblockade-dont-use","text":"Description: This custom action spawns a planetary blockade near players within a specified radius. This needs to be connected to a Event Condition that uses playernear Parameters: string spawnGroup: The group name for the spawned blockade. int MinRadius: The minimum radius from players for spawning. int MaxRadius: The maximum radius from players for spawning. int SpawnDistance: The distance from players where the blockade should be spawned. Vector3D PlanetCentercoord: The coordinates of the center of the planet. <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>Mod-EventAction-Test</SubtypeId> </Id> <Description> [MES Event Action] [ActivateCustomAction:true] [CustomActionName:ScT-SpawnPlanetaryBlockade] [CustomActionArgumentsString:GC-SpawnGroup-HeavyGarrison] [CustomActionArgumentsInt:70000] [CustomActionArgumentsInt:78000] [CustomActionArgumentsInt:4500] [CustomActionArgumentsVector3D:{X:1449429.5 Y:-622819.5 Z:-2854387.5}] </Description> </EntityComponent>","title":"ScT-SpawnPlanetaryBlockade (DON\"T USE)"},{"location":"Datapad/","text":"Datapad.md Datapad Profiles in Rival AI are used to dynamically add Datapads to NPC Grids without having to manually add them to the grid. In these profiles, you can define the name/title of the Datapad using the DisplayName tag, and the body is defined using the Description tag. To add Datapads to your grid, use the Trigger/Action system. Search for the Action tag AddDatapadsToSeats to get started. Because the Description is used for the body, these profiles are read a little differently from regular RivalAI Profiles. In order to define these profiles, you MUST include RivalAI-Datapad at the beginning of your Profile SubtypeId. Here is an example of how a Datapad Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RivalAI-Datapad-ExampleDataPad</SubtypeId> </Id> <DisplayName>Datapad Title Goes Here</DisplayName> <Description> Datapad Body Text Goes Here </Description> </EntityComponent> </EntityComponents> </Definitions>","title":"Datapad.md"},{"location":"Datapad/#datapadmd","text":"Datapad Profiles in Rival AI are used to dynamically add Datapads to NPC Grids without having to manually add them to the grid. In these profiles, you can define the name/title of the Datapad using the DisplayName tag, and the body is defined using the Description tag. To add Datapads to your grid, use the Trigger/Action system. Search for the Action tag AddDatapadsToSeats to get started. Because the Description is used for the body, these profiles are read a little differently from regular RivalAI Profiles. In order to define these profiles, you MUST include RivalAI-Datapad at the beginning of your Profile SubtypeId. Here is an example of how a Datapad Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RivalAI-Datapad-ExampleDataPad</SubtypeId> </Id> <DisplayName>Datapad Title Goes Here</DisplayName> <Description> Datapad Body Text Goes Here </Description> </EntityComponent> </EntityComponents> </Definitions>","title":"Datapad.md"},{"location":"Dereliction/","text":"Dereliction.md Dereliction Profiles allow you to apply block degradation to selected blocks to achieve a 'derelict' appearance on grids. Dereliction profiles are attached to Manipulation profiles. Here is an example of how a Dereliction Profile is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleDereliction</SubtypeId> </Id> <Description> [MES Dereliction] [Blocks:MyObjectBuilder_CubeBlock:SomeBlock] [Blocks:MyObjectBuilder_Thruster:SomeThruster] [MatchOnlyTypeId:true] [Chance:50] [MinPercentage:5] [MaxPercentage:50] </Description> </EntityComponent> </EntityComponents> </Definitions> These profiles attach to Manipulation Profiles using the [DerelictionProfiles:YourDerelictionProfileIdHere] tag. Below you can find all the tags that can be used in your Dereliction Profile: Tag: Blocks Tag Format: [Blocks:Value] Description: This tag allows you to specify the MyDefinitionId of a block that will be used by the Dereliction process. Allowed Value(s): Any String Value Default Value(s): N/A Multiple Tags Allowed: Yes Tag: MatchOnlyTypeId Tag Format: [MatchOnlyTypeId:Value] Description: This tag allows you to specify if only the TypeId from the values provided in the Blocks tags should be used (eg MyObjectBuilder_CubeBlock ). Allowed Value(s): true false Multiple Tags Allowed: No Tag: Chance Tag Format: [Chance:Value] Description: This tag allows you to specify the chance (per block) that this dereliction profile has for running. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: Yes Tag: MinPercentage Tag Format: [MinPercentage:Value] Description: This tag allows you to specify the Minimum Integrity / Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxPercentage if provided. Multiple Tags Allowed: No Tag: MaxPercentage Tag Format: [MaxPercentage:Value] Description: This tag allows you to specify the Maximum Integrity / Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinPercentage if provided. Multiple Tags Allowed: No Tag: UseSeparatePercentages Tag Format: [UseSeparatePercentages:Value] Description: This tag allows you to specify if different percentages should be applied to Integrity and Build Levels. Use the tags below to specify those ranges Allowed Value(s): true false Multiple Tags Allowed: No Tag: MinIntegrityPercentage Tag Format: [MinIntegrityPercentage:Value] Description: This tag allows you to specify the Minimum Integrity Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxIntegrityPercentage Multiple Tags Allowed: No Tag: MaxIntegrityPercentage Tag Format: [MaxIntegrityPercentage:Value] Description: This tag allows you to specify the Maximum Integrity Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinIntegrityPercentage Multiple Tags Allowed: No Tag: MinBuildPercentage Tag Format: [MinBuildPercentage:Value] Description: This tag allows you to specify the Minimum Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxBuildPercentage Multiple Tags Allowed: No Tag: MaxBuildPercentage Tag Format: [MaxBuildPercentage:Value] Description: This tag allows you to specify the Maximum Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinBuildPercentage Multiple Tags Allowed: No","title":"Dereliction.md"},{"location":"Dereliction/#derelictionmd","text":"Dereliction Profiles allow you to apply block degradation to selected blocks to achieve a 'derelict' appearance on grids. Dereliction profiles are attached to Manipulation profiles. Here is an example of how a Dereliction Profile is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleDereliction</SubtypeId> </Id> <Description> [MES Dereliction] [Blocks:MyObjectBuilder_CubeBlock:SomeBlock] [Blocks:MyObjectBuilder_Thruster:SomeThruster] [MatchOnlyTypeId:true] [Chance:50] [MinPercentage:5] [MaxPercentage:50] </Description> </EntityComponent> </EntityComponents> </Definitions> These profiles attach to Manipulation Profiles using the [DerelictionProfiles:YourDerelictionProfileIdHere] tag. Below you can find all the tags that can be used in your Dereliction Profile: Tag: Blocks Tag Format: [Blocks:Value] Description: This tag allows you to specify the MyDefinitionId of a block that will be used by the Dereliction process. Allowed Value(s): Any String Value Default Value(s): N/A Multiple Tags Allowed: Yes Tag: MatchOnlyTypeId Tag Format: [MatchOnlyTypeId:Value] Description: This tag allows you to specify if only the TypeId from the values provided in the Blocks tags should be used (eg MyObjectBuilder_CubeBlock ). Allowed Value(s): true false Multiple Tags Allowed: No Tag: Chance Tag Format: [Chance:Value] Description: This tag allows you to specify the chance (per block) that this dereliction profile has for running. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: Yes Tag: MinPercentage Tag Format: [MinPercentage:Value] Description: This tag allows you to specify the Minimum Integrity / Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxPercentage if provided. Multiple Tags Allowed: No Tag: MaxPercentage Tag Format: [MaxPercentage:Value] Description: This tag allows you to specify the Maximum Integrity / Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinPercentage if provided. Multiple Tags Allowed: No Tag: UseSeparatePercentages Tag Format: [UseSeparatePercentages:Value] Description: This tag allows you to specify if different percentages should be applied to Integrity and Build Levels. Use the tags below to specify those ranges Allowed Value(s): true false Multiple Tags Allowed: No Tag: MinIntegrityPercentage Tag Format: [MinIntegrityPercentage:Value] Description: This tag allows you to specify the Minimum Integrity Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxIntegrityPercentage Multiple Tags Allowed: No Tag: MaxIntegrityPercentage Tag Format: [MaxIntegrityPercentage:Value] Description: This tag allows you to specify the Maximum Integrity Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinIntegrityPercentage Multiple Tags Allowed: No Tag: MinBuildPercentage Tag Format: [MinBuildPercentage:Value] Description: This tag allows you to specify the Minimum Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxBuildPercentage Multiple Tags Allowed: No Tag: MaxBuildPercentage Tag Format: [MaxBuildPercentage:Value] Description: This tag allows you to specify the Maximum Build Level Percentage that the affected blocks will be randomly set to. Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinBuildPercentage Multiple Tags Allowed: No","title":"Dereliction.md"},{"location":"Economy-Stations-FAQ/","text":"Economy-Stations-FAQ.md What are Economy Stations? Economy Stations are stations that can appear in your world that allow you to buy and sell items, and also fulfill contracts for additional credits and faction reputation. They are often owned by neutral factions, although sometimes they can be owned by Pirates as well. These stations will always be located in a SafeZone, so they cannot be captured or damaged by players. Where do these stations appear? There are 3 types of location that you can usually find these stations. - Planetary (On the surface of a planet) - Orbital (Just outside the gravity range of a planet) - Deep Space (You likely will not find these by exploration alone) How do I find them? Here are a few methods for locating these stations: - Check the Seat Inventory of your RespawnShip. It should contain a DataPad that lists the location of a station nearby. - Try flying around a small moon. Because each planet often has a number of stations, it's often easy to find some around small planet entities. - Some stations also sell DataPads that contain coordinates to other stations in your game world. The stations don't appear in the Admin Entity List... When there are no players near a station, they seem to temporarily despawn. Once you get close again, they will respawn and should appear in the list. Can these stations be added to Existing Saves and/or Custom Planets? They can, however it is important to understand how these stations are created by the game. When you load a world with the Enable Economy Option turned on, the game does a one-time evaluation of the world and calculates where all the stations for each faction will appear. Because of this, you need to be careful when enabling the Economy Option to an existing save. For example, if you enable it on an Empty World, all the stations are created in Deep Space - making them all incredibly difficult to ever find. Disabling and Re-enabling Economy after the stations have already been created does not appear to fix this either. Here are some steps you can follow to ensure things go smoothly: - Create your save, ensuring Enable Economy is initially Disabled - Add planets manually (vanilla or custom, they both work), and make any other initial changes you need. - Once you are satisfied with your save, enable the Economy Option. - Stations should now appear in all areas! How do I add stations to an existing save when Economy is already on? This one is a little trickier, and you may have to bump up your max faction count -- but to ask the game to generate new stations on an existing save with economy already turned on, the following steps can be used: Save and exit the game. You cannot make this change to a running game (or running server). Open up the Sandbox.sbc file for your save. Make sure the one you open is in line with the time when you last saved it. Search for MyObjectBuilder_SessionComponentEconomy in this file. It will be near the bottom. Change the value for GenerateFactionsOnStart to be true (note the lower case). <GenerateFactionsOnStart>true</GenerateFactionsOnStart> Save and close the file Reload your world, switch to spectator mode (admin), fly up to the nearest moon, and teleport your character there (ctrl+spacebar). Make sure to fly around with your jetpack, as stations don't seem to spawn for spectator camera. Moons generally have the highest density of stations, so it will be easiest to find one there. What role does the Modular Encounters Spawner mod have with these stations. None. There are a lot of functionalities that the stations have that we cannot access via ModAPI. As a result, I decided that the Modular Encounters Spawner would not manage these stations in any capacity. The spawner mod does not spawn them, and it does not despawn them. Since there's no interaction between them, they should be fully safe to use together.","title":"Economy-Stations-FAQ.md"},{"location":"Economy-Stations-FAQ/#economy-stations-faqmd","text":"What are Economy Stations? Economy Stations are stations that can appear in your world that allow you to buy and sell items, and also fulfill contracts for additional credits and faction reputation. They are often owned by neutral factions, although sometimes they can be owned by Pirates as well. These stations will always be located in a SafeZone, so they cannot be captured or damaged by players. Where do these stations appear? There are 3 types of location that you can usually find these stations. - Planetary (On the surface of a planet) - Orbital (Just outside the gravity range of a planet) - Deep Space (You likely will not find these by exploration alone) How do I find them? Here are a few methods for locating these stations: - Check the Seat Inventory of your RespawnShip. It should contain a DataPad that lists the location of a station nearby. - Try flying around a small moon. Because each planet often has a number of stations, it's often easy to find some around small planet entities. - Some stations also sell DataPads that contain coordinates to other stations in your game world. The stations don't appear in the Admin Entity List... When there are no players near a station, they seem to temporarily despawn. Once you get close again, they will respawn and should appear in the list. Can these stations be added to Existing Saves and/or Custom Planets? They can, however it is important to understand how these stations are created by the game. When you load a world with the Enable Economy Option turned on, the game does a one-time evaluation of the world and calculates where all the stations for each faction will appear. Because of this, you need to be careful when enabling the Economy Option to an existing save. For example, if you enable it on an Empty World, all the stations are created in Deep Space - making them all incredibly difficult to ever find. Disabling and Re-enabling Economy after the stations have already been created does not appear to fix this either. Here are some steps you can follow to ensure things go smoothly: - Create your save, ensuring Enable Economy is initially Disabled - Add planets manually (vanilla or custom, they both work), and make any other initial changes you need. - Once you are satisfied with your save, enable the Economy Option. - Stations should now appear in all areas! How do I add stations to an existing save when Economy is already on? This one is a little trickier, and you may have to bump up your max faction count -- but to ask the game to generate new stations on an existing save with economy already turned on, the following steps can be used: Save and exit the game. You cannot make this change to a running game (or running server). Open up the Sandbox.sbc file for your save. Make sure the one you open is in line with the time when you last saved it. Search for MyObjectBuilder_SessionComponentEconomy in this file. It will be near the bottom. Change the value for GenerateFactionsOnStart to be true (note the lower case). <GenerateFactionsOnStart>true</GenerateFactionsOnStart> Save and close the file Reload your world, switch to spectator mode (admin), fly up to the nearest moon, and teleport your character there (ctrl+spacebar). Make sure to fly around with your jetpack, as stations don't seem to spawn for spectator camera. Moons generally have the highest density of stations, so it will be easiest to find one there. What role does the Modular Encounters Spawner mod have with these stations. None. There are a lot of functionalities that the stations have that we cannot access via ModAPI. As a result, I decided that the Modular Encounters Spawner would not manage these stations in any capacity. The spawner mod does not spawn them, and it does not despawn them. Since there's no interaction between them, they should be fully safe to use together.","title":"Economy-Stations-FAQ.md"},{"location":"Encounter-Attributes/","text":"Encounter-Attributes.md Behavior Difficulty This section defines the various difficulty levels of encounters behaviors, ie how they interact with the player and other entities in the world. Rating Title Description \u2605\u2606\u2606\u2606\u2606 No Challenge Encounters are not hostile. \u2605\u2605\u2606\u2606\u2606 Minimal Encounters are passively hostile, will only use turrets if you get close. \u2605\u2605\u2605\u2606\u2606 Average Encounters will likely not engage players unless provoked or approached. \u2605\u2605\u2605\u2605\u2606 Hostile Encounters will seek players and attack when conditions are met (visibility, signals, etc). \u2605\u2605\u2605\u2605\u2605 Nightmare Encounters are easily aware of targets in the area and will relentlessly attack. Grid Difficulty This section defines how difficult the ships / stations you'll encounter can be. Rating Title Description \u2605\u2606\u2606\u2606\u2606 No Challenge Grids are not significantly armed and/or armored. \u2605\u2605\u2606\u2606\u2606 Minimal Smaller grids that are lightly armed and/or armored. \u2605\u2605\u2605\u2606\u2606 Average Average sized grids that are moderately armed and/or armored. \u2605\u2605\u2605\u2605\u2606 Difficult Larger sized grids that are heavily armed and/or armored. \u2605\u2605\u2605\u2605\u2605 Nightmare Massive sized grids that are heavily armed and/or armored. Environments This section defines the various environments that encounters can appear in. Type Description Space Encounters can appear in space (zero gravity). Atmosphere Encounters can appear on planets with an atmosphere. Gravity Encounters can appear on planets without an atmosphere. Water Encounters can appear on water surface (while using Water Mod). Underwater Encounters can appear under the water surface (while using Water Mod). Encounter Types This section defines the various types of encounters and how/when they generally spawn. Type Description Space Cargo Ship Encounters that appear on a timer in space, fly in a linear path, and despawn when they reach the end of their path. Planetary Cargo Ship Encounters that appear on a timer near a planet's surface, fly in a linear path, and despawn when they reach the end of their path. Random Encounter Encounters that appear at random in space as the player travels across large distances. Planetary Installation Encounters that appear at random on a planet's surface as the player travels across large distances. Static Encounter Encounters that appear once the player has gotten close to where it should appear. These encounters only appear once. Boss Encounter Difficult encounters the player can optionally engage by traveling to a designated GPS signal. Drone Encounter Encounters that appear randomly on a timer near the player proximity. Creature Animal or bot encounters that appear on a planet's surface near the player. Spawning Conditions This section defines various additional conditions that may also be used when determining if an encounter is eligible to spawn. Condition Description Chance Encounters will use an additional chance roll to determine if they're allowed to spawn in certain environments. Combat Phase Encounters will only appear during a Combat Phase in the world. If Combat Phases are disabled, then this check is omitted. Known Player Location Encounters can designate an area around a player as a Known Player Location, which can potentially allow encounters to spawn more often or detect the player easier. Reputation Encounters will only appear if a player's reputation with an NPC faction is at a certain value. Threat Score Encounters will only appear once players have progressed / built enough grid resources in an area. Weather Certain encounters will only appear during specific weather events or times of the day. Zones Certain encounters will only appear in certain areas. Special Abilities This section defines special blocks, attributes, and abilities that encounters may possess. Type Description Defense Shields Spawns with Defense Shields (if the Defense Shields mod is loaded). Energy Inhibitor Drains suit energy from unseated players while in the inhibitor block range (disable the inhibitor block to stop this effect). Grinder Damage Damages players that attack an encounter while using a grinder (disable the AI Control Module to stop this effect). Hand Drill Inhibitor Disables Hand Drills while in the inhibitor block range (disable the inhibitor block to stop this effect). Jetpack Inhibitor Disables Jetpack Dampeners while in the inhibitor block range, and disables Jetpack entirely at closer ranges (disable the inhibitor block to stop this effect). Jump Drive Inhibitor Disables Jump Drive blocks while in the inhibitor block range (disable the inhibitor block to stop this effect). Merchant Equipment Encounters may include store blocks, Shipyard System, and/or Suit Upgrade Stations. Nanobot Inhibitor Disables Nanobot blocks while in the inhibitor block range (disable the inhibitor block to stop this effect). Personnel Inhibitor Damages unseated players while in the inhibitor block range (disable the inhibitor block to stop this effect). Reinforcements Calls for additional support / spawns drones to assist. Randomized Weapons Spawns with randomized weapons, which also includes weapons from mods you may have loaded.","title":"Encounter-Attributes.md"},{"location":"Encounter-Attributes/#encounter-attributesmd","text":"","title":"Encounter-Attributes.md"},{"location":"Encounter-Attributes/#behavior-difficulty","text":"This section defines the various difficulty levels of encounters behaviors, ie how they interact with the player and other entities in the world. Rating Title Description \u2605\u2606\u2606\u2606\u2606 No Challenge Encounters are not hostile. \u2605\u2605\u2606\u2606\u2606 Minimal Encounters are passively hostile, will only use turrets if you get close. \u2605\u2605\u2605\u2606\u2606 Average Encounters will likely not engage players unless provoked or approached. \u2605\u2605\u2605\u2605\u2606 Hostile Encounters will seek players and attack when conditions are met (visibility, signals, etc). \u2605\u2605\u2605\u2605\u2605 Nightmare Encounters are easily aware of targets in the area and will relentlessly attack.","title":"Behavior Difficulty"},{"location":"Encounter-Attributes/#grid-difficulty","text":"This section defines how difficult the ships / stations you'll encounter can be. Rating Title Description \u2605\u2606\u2606\u2606\u2606 No Challenge Grids are not significantly armed and/or armored. \u2605\u2605\u2606\u2606\u2606 Minimal Smaller grids that are lightly armed and/or armored. \u2605\u2605\u2605\u2606\u2606 Average Average sized grids that are moderately armed and/or armored. \u2605\u2605\u2605\u2605\u2606 Difficult Larger sized grids that are heavily armed and/or armored. \u2605\u2605\u2605\u2605\u2605 Nightmare Massive sized grids that are heavily armed and/or armored.","title":"Grid Difficulty"},{"location":"Encounter-Attributes/#environments","text":"This section defines the various environments that encounters can appear in. Type Description Space Encounters can appear in space (zero gravity). Atmosphere Encounters can appear on planets with an atmosphere. Gravity Encounters can appear on planets without an atmosphere. Water Encounters can appear on water surface (while using Water Mod). Underwater Encounters can appear under the water surface (while using Water Mod).","title":"Environments"},{"location":"Encounter-Attributes/#encounter-types","text":"This section defines the various types of encounters and how/when they generally spawn. Type Description Space Cargo Ship Encounters that appear on a timer in space, fly in a linear path, and despawn when they reach the end of their path. Planetary Cargo Ship Encounters that appear on a timer near a planet's surface, fly in a linear path, and despawn when they reach the end of their path. Random Encounter Encounters that appear at random in space as the player travels across large distances. Planetary Installation Encounters that appear at random on a planet's surface as the player travels across large distances. Static Encounter Encounters that appear once the player has gotten close to where it should appear. These encounters only appear once. Boss Encounter Difficult encounters the player can optionally engage by traveling to a designated GPS signal. Drone Encounter Encounters that appear randomly on a timer near the player proximity. Creature Animal or bot encounters that appear on a planet's surface near the player.","title":"Encounter Types"},{"location":"Encounter-Attributes/#spawning-conditions","text":"This section defines various additional conditions that may also be used when determining if an encounter is eligible to spawn. Condition Description Chance Encounters will use an additional chance roll to determine if they're allowed to spawn in certain environments. Combat Phase Encounters will only appear during a Combat Phase in the world. If Combat Phases are disabled, then this check is omitted. Known Player Location Encounters can designate an area around a player as a Known Player Location, which can potentially allow encounters to spawn more often or detect the player easier. Reputation Encounters will only appear if a player's reputation with an NPC faction is at a certain value. Threat Score Encounters will only appear once players have progressed / built enough grid resources in an area. Weather Certain encounters will only appear during specific weather events or times of the day. Zones Certain encounters will only appear in certain areas.","title":"Spawning Conditions"},{"location":"Encounter-Attributes/#special-abilities","text":"This section defines special blocks, attributes, and abilities that encounters may possess. Type Description Defense Shields Spawns with Defense Shields (if the Defense Shields mod is loaded). Energy Inhibitor Drains suit energy from unseated players while in the inhibitor block range (disable the inhibitor block to stop this effect). Grinder Damage Damages players that attack an encounter while using a grinder (disable the AI Control Module to stop this effect). Hand Drill Inhibitor Disables Hand Drills while in the inhibitor block range (disable the inhibitor block to stop this effect). Jetpack Inhibitor Disables Jetpack Dampeners while in the inhibitor block range, and disables Jetpack entirely at closer ranges (disable the inhibitor block to stop this effect). Jump Drive Inhibitor Disables Jump Drive blocks while in the inhibitor block range (disable the inhibitor block to stop this effect). Merchant Equipment Encounters may include store blocks, Shipyard System, and/or Suit Upgrade Stations. Nanobot Inhibitor Disables Nanobot blocks while in the inhibitor block range (disable the inhibitor block to stop this effect). Personnel Inhibitor Damages unseated players while in the inhibitor block range (disable the inhibitor block to stop this effect). Reinforcements Calls for additional support / spawns drones to assist. Randomized Weapons Spawns with randomized weapons, which also includes weapons from mods you may have loaded.","title":"Special Abilities"},{"location":"Encounter-Guide/","text":"Encounter-Guide.md This guide provides some insight into how encounters spawns using the Modular Encounters Systems framework mod. This can be used to understand when you will see NPC grids in your game world. What Mods and Settings do you need? Because the framework is a Mod, you will need to ensure that Experimental Mode is enabled. This is done from the options menu accessed from the title screen. The first mod you will need is the Modular Encounters Systems , which is responsible for spawning encounters in your game world. However, most encounter mods that use the features of the framework will often list it as a mod dependency in Steam - which allows Space Engineers to Automatically load it when selecting said encounter mods. Loading the framework mod by itself will not add any new encounters to your game. It is a framework mod that other encounter mods use to spawn their NPCs. I maintain a Steam Collection of mods that are friendly with MES, even if they do not directly use its features. That list can be found at this link . Please note this isn't an exhaustive list, so there are other encounter mods on the workshop that should also be compatible. For world settings, you may want to enable In-Game Scripts and Enable Drones . In-game Scripts is what many mods still use for NPC Grid AI, and Enable Drones is the system a lot of mods use to call reinforcements (this is done via 'Pirate Antennas'). The world options for Cargo Ships and Random Encounters will be automatically turned off when using Modular Encounters Systems. The reason these world options are disabled is because the framework implements its own scripting for these features (effectively replacing them), so having them enabled would likely cause conflicts. If you are using older encounter mods that say they need those world options enabled, don't worry - the framework is built to be backwards compatible with them! What Types of Encounters Exist? There are a handful of ways that encounters can spawn using Modular Encounters Systems. Here are some of the different types and how they are triggered: Space Cargo Ship: These encounters will spawn in space, or while the player is in a shallow gravity field (such as a moon). They typically appear about 5-10 KM from a player and will travel in a linear path for about 10-15 KM before despawning. These spawning events typically occur on a random timer, which is usually about 20-30 minutes. Random Encounters: These encounters also appear while you are in space. They will not appear if you are in a gravity well of any kind. They will appear in a random position near a player, about 7-15 KM away. Random Encounter spawns are triggered when the player is exploring space, which means you need to travel a certain distance before they will appear (about 15 KM). There is also a cooldown per player after a spawn is triggered - this is to prevent a player from using their jump drive rapidly to generate new spawns, which can affect game performance if too many grids exist in the world at once. Planetary Cargo Ships: These are very similar to their space counterparts, but will spawn typically in planets with a rich atmosphere. Planetary Installations: These are similar to Random Encounters in Space, but will spawn as static grids on planets that have a lot of flat surfaces. Players will need to travel about 6 KM before a spawn event is triggered. Boss Encounters: These encounters can appear in both Space and on Planets. They initially appear as a purple colored GPS marker, usually accompanied by a message that is broadcast to near-by player using the in-game chat system. The encounter will not physically spawn into the world until a player approaches the GPS signal (getting within about 300m of the signal). These signals will appear on a timer (approx 20min, and will remain visible for about another 20min). You should not approach one of these encounters unless you are well armed and ready for a difficult encounter. Drone Encounters: These encounters will spawn near players using a timer and distance system that is set in their individual SpawnGroups. The behavior of these encounters is entirely dependent on how the mod author has configured them. This encounter type could be considered a miscellaneous one. Static Encounters: These encounters are designed to always appear at a specific location in the game world once a player gets within a certain range of it. Typically, they will only spawn once, since they are locked to specific locations. Creature: These encounters are not grid-based NPCs, but rather character-based. Common examples of these encounters would include the vanilla Wolves and Spiders. These encounters can sometimes use the AiEnabled mod to govern their behaviors as well.","title":"Encounter-Guide.md"},{"location":"Encounter-Guide/#encounter-guidemd","text":"This guide provides some insight into how encounters spawns using the Modular Encounters Systems framework mod. This can be used to understand when you will see NPC grids in your game world.","title":"Encounter-Guide.md"},{"location":"Encounter-Guide/#what-mods-and-settings-do-you-need","text":"Because the framework is a Mod, you will need to ensure that Experimental Mode is enabled. This is done from the options menu accessed from the title screen. The first mod you will need is the Modular Encounters Systems , which is responsible for spawning encounters in your game world. However, most encounter mods that use the features of the framework will often list it as a mod dependency in Steam - which allows Space Engineers to Automatically load it when selecting said encounter mods. Loading the framework mod by itself will not add any new encounters to your game. It is a framework mod that other encounter mods use to spawn their NPCs. I maintain a Steam Collection of mods that are friendly with MES, even if they do not directly use its features. That list can be found at this link . Please note this isn't an exhaustive list, so there are other encounter mods on the workshop that should also be compatible. For world settings, you may want to enable In-Game Scripts and Enable Drones . In-game Scripts is what many mods still use for NPC Grid AI, and Enable Drones is the system a lot of mods use to call reinforcements (this is done via 'Pirate Antennas'). The world options for Cargo Ships and Random Encounters will be automatically turned off when using Modular Encounters Systems. The reason these world options are disabled is because the framework implements its own scripting for these features (effectively replacing them), so having them enabled would likely cause conflicts. If you are using older encounter mods that say they need those world options enabled, don't worry - the framework is built to be backwards compatible with them!","title":"What Mods and Settings do you need?"},{"location":"Encounter-Guide/#what-types-of-encounters-exist","text":"There are a handful of ways that encounters can spawn using Modular Encounters Systems. Here are some of the different types and how they are triggered: Space Cargo Ship: These encounters will spawn in space, or while the player is in a shallow gravity field (such as a moon). They typically appear about 5-10 KM from a player and will travel in a linear path for about 10-15 KM before despawning. These spawning events typically occur on a random timer, which is usually about 20-30 minutes. Random Encounters: These encounters also appear while you are in space. They will not appear if you are in a gravity well of any kind. They will appear in a random position near a player, about 7-15 KM away. Random Encounter spawns are triggered when the player is exploring space, which means you need to travel a certain distance before they will appear (about 15 KM). There is also a cooldown per player after a spawn is triggered - this is to prevent a player from using their jump drive rapidly to generate new spawns, which can affect game performance if too many grids exist in the world at once. Planetary Cargo Ships: These are very similar to their space counterparts, but will spawn typically in planets with a rich atmosphere. Planetary Installations: These are similar to Random Encounters in Space, but will spawn as static grids on planets that have a lot of flat surfaces. Players will need to travel about 6 KM before a spawn event is triggered. Boss Encounters: These encounters can appear in both Space and on Planets. They initially appear as a purple colored GPS marker, usually accompanied by a message that is broadcast to near-by player using the in-game chat system. The encounter will not physically spawn into the world until a player approaches the GPS signal (getting within about 300m of the signal). These signals will appear on a timer (approx 20min, and will remain visible for about another 20min). You should not approach one of these encounters unless you are well armed and ready for a difficult encounter. Drone Encounters: These encounters will spawn near players using a timer and distance system that is set in their individual SpawnGroups. The behavior of these encounters is entirely dependent on how the mod author has configured them. This encounter type could be considered a miscellaneous one. Static Encounters: These encounters are designed to always appear at a specific location in the game world once a player gets within a certain range of it. Typically, they will only spawn once, since they are locked to specific locations. Creature: These encounters are not grid-based NPCs, but rather character-based. Common examples of these encounters would include the vanilla Wolves and Spiders. These encounters can sometimes use the AiEnabled mod to govern their behaviors as well.","title":"What Types of Encounters Exist?"},{"location":"Event-Action/","text":"Event-Action.md These profile are what execute specified actions when the conditions in a Event Profile are satisfied. It is important that you use a unique SubtypeId for each Action Profile you create, otherwise they may not work correctly. Here is an example of how an Event Action Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>TAG-EventAction-Example</SubtypeId> </Id> <Description> [MES Event Action] [UseChatBroadcast:true] [ChatData:RAI-ExampleChatProfile] [ChangeBooleans:true] [SetBooleansTrue:SomeRandomBool] </Description> </EntityComponent> </EntityComponents> </Definitions> Debug SandboxVariables Chat Spawning Zones Players Events Debug Tag: DebugHudMessage Tag Format: [DebugHudMessage:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: no # SandboxVariables This Section Tag: ChangeBooleans Tag Format: [ChangeBooleans:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: SetBooleansTrue Tag Format: [SetBooleansTrue:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: SetBooleansFalse Tag Format: [SetBooleansFalse:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ChangeCounters Tag Format: [ChangeCounters:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: IncreaseCounters Tag Format: [IncreaseCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: DecreaseCounters Tag Format: [DecreaseCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: IncreaseCountersAmount Tag Format: [IncreaseCountersAmount:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: yes Tag: DecreaseCountersAmount Tag Format: [DecreaseCountersAmount:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: yes Tag: SetCounters Tag Format: [SetCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: SetCountersAmount Tag Format: [SetCountersAmount:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes # Chat This Section Tag: UseChatBroadcast Tag Format: [UseChatBroadcast:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ChatData Tag Format: [ChatData:Value] Description: nan Allowed Values: Any behaviour Chat Profile SubtypeId Multiple Tag Allowed: yes # Spawning This Section Tag: SpawnVector3Ds Tag Format: [SpawnVector3Ds:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: yes Tag: SpawnFactionTags Tag Format: [SpawnFactionTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: Spawner Tag Format: [Spawner:Value] Description: nan Allowed Values: Any behaviour Spawner Profile SubtypeId Multiple Tag Allowed: no # Zones This Section Tag: ChangeZoneAtPosition Tag Format: [ChangeZoneAtPosition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: yes Tag: SpawnEncounter Tag Format: [SpawnEncounter:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ZoneNames Tag Format: [ZoneNames:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ZoneCoords Tag Format: [ZoneCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: yes Tag: ZoneToggleActiveModes Tag Format: [ZoneToggleActiveModes:Value] Description: true will activate it. false will set disable it Allowed Values: true false Multiple Tag Allowed: yes # Players This Section Tag: AddTagstoPlayers Tag Format: [AddTagstoPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AddTagsPlayerConditionIds Tag Format: [AddTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddTags Tag Format: [AddTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTagsFromPlayers Tag Format: [RemoveTagsFromPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsPlayerConditionIds Tag Format: [RemoveTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTags Tag Format: [RemoveTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddGPSToPlayers Tag Format: [AddGPSToPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveGPSFromPlayers Tag Format: [RemoveGPSFromPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseGPSObjective Tag Format: [UseGPSObjective:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: GPSNames Tag Format: [GPSNames:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: GPSDescriptions Tag Format: [GPSDescriptions:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: GPSVector3Ds Tag Format: [GPSVector3Ds:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: yes Tag: GPSColors Tag Format: [GPSColors:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: yes Tag: FadeInPlayers Tag Format: [FadeInPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: FadeInPlayerConditionIds Tag Format: [FadeInPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: FadeOutPlayers Tag Format: [FadeOutPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: FadeOutPlayerConditionIds Tag Format: [FadeOutPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: TeleportPlayers Tag Format: [TeleportPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: TeleportPlayerConditionIds Tag Format: [TeleportPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: TeleportPlayerCoords Tag Format: [TeleportPlayerCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: no Tag: TeleportRadius Tag Format: [TeleportRadius:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: nan # Events Jaa events! Tag: ToggleEvents Tag Format: [ToggleEvents:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ToggleEventIds Tag Format: [ToggleEventIds:Value] Description: nan Allowed Values: Any Event Profile SubtypeId Multiple Tag Allowed: yes Tag: ToggleEventIdModes Tag Format: [ToggleEventIdModes:Value] Description: true will activate it. false will set disable it Allowed Values: true false Multiple Tag Allowed: yes Tag: ToggleEventTags Tag Format: [ToggleEventTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ToggleEventTagModes Tag Format: [ToggleEventTagModes:Value] Description: true will activate it. false will set disable it Allowed Values: true false Multiple Tag Allowed: yes Tag: ResetCooldownTimeOfEvents Tag Format: [ResetCooldownTimeOfEvents:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ResetEventCooldownIds Tag Format: [ResetEventCooldownIds:Value] Description: nan Allowed Values: Any Event Profile SubtypeId Multiple Tag Allowed: yes Tag: ResetEventCooldownTags Tag Format: [ResetEventCooldownTags:Value] Description: nan Allowed Values: Any name string excluding characters \": [ ]\" Multiple Tag Allowed: yes Custom Actions This Secition ... See Here","title":"Event-Action.md"},{"location":"Event-Action/#event-actionmd","text":"These profile are what execute specified actions when the conditions in a Event Profile are satisfied. It is important that you use a unique SubtypeId for each Action Profile you create, otherwise they may not work correctly. Here is an example of how an Event Action Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>TAG-EventAction-Example</SubtypeId> </Id> <Description> [MES Event Action] [UseChatBroadcast:true] [ChatData:RAI-ExampleChatProfile] [ChangeBooleans:true] [SetBooleansTrue:SomeRandomBool] </Description> </EntityComponent> </EntityComponents> </Definitions> Debug SandboxVariables Chat Spawning Zones Players Events","title":"Event-Action.md"},{"location":"Event-Action/#debug","text":"Tag: DebugHudMessage Tag Format: [DebugHudMessage:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: no # SandboxVariables This Section Tag: ChangeBooleans Tag Format: [ChangeBooleans:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: SetBooleansTrue Tag Format: [SetBooleansTrue:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: SetBooleansFalse Tag Format: [SetBooleansFalse:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ChangeCounters Tag Format: [ChangeCounters:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: IncreaseCounters Tag Format: [IncreaseCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: DecreaseCounters Tag Format: [DecreaseCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: IncreaseCountersAmount Tag Format: [IncreaseCountersAmount:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: yes Tag: DecreaseCountersAmount Tag Format: [DecreaseCountersAmount:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: yes Tag: SetCounters Tag Format: [SetCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: SetCountersAmount Tag Format: [SetCountersAmount:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes # Chat This Section Tag: UseChatBroadcast Tag Format: [UseChatBroadcast:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ChatData Tag Format: [ChatData:Value] Description: nan Allowed Values: Any behaviour Chat Profile SubtypeId Multiple Tag Allowed: yes # Spawning This Section Tag: SpawnVector3Ds Tag Format: [SpawnVector3Ds:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: yes Tag: SpawnFactionTags Tag Format: [SpawnFactionTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: Spawner Tag Format: [Spawner:Value] Description: nan Allowed Values: Any behaviour Spawner Profile SubtypeId Multiple Tag Allowed: no # Zones This Section Tag: ChangeZoneAtPosition Tag Format: [ChangeZoneAtPosition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: yes Tag: SpawnEncounter Tag Format: [SpawnEncounter:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ZoneNames Tag Format: [ZoneNames:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ZoneCoords Tag Format: [ZoneCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: yes Tag: ZoneToggleActiveModes Tag Format: [ZoneToggleActiveModes:Value] Description: true will activate it. false will set disable it Allowed Values: true false Multiple Tag Allowed: yes # Players This Section Tag: AddTagstoPlayers Tag Format: [AddTagstoPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AddTagsPlayerConditionIds Tag Format: [AddTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddTags Tag Format: [AddTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTagsFromPlayers Tag Format: [RemoveTagsFromPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveTagsPlayerConditionIds Tag Format: [RemoveTagsPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: RemoveTags Tag Format: [RemoveTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AddGPSToPlayers Tag Format: [AddGPSToPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: RemoveGPSFromPlayers Tag Format: [RemoveGPSFromPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseGPSObjective Tag Format: [UseGPSObjective:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: GPSNames Tag Format: [GPSNames:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: GPSDescriptions Tag Format: [GPSDescriptions:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: GPSVector3Ds Tag Format: [GPSVector3Ds:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: yes Tag: GPSColors Tag Format: [GPSColors:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: yes Tag: FadeInPlayers Tag Format: [FadeInPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: FadeInPlayerConditionIds Tag Format: [FadeInPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: FadeOutPlayers Tag Format: [FadeOutPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: FadeOutPlayerConditionIds Tag Format: [FadeOutPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: TeleportPlayers Tag Format: [TeleportPlayers:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: TeleportPlayerConditionIds Tag Format: [TeleportPlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: TeleportPlayerCoords Tag Format: [TeleportPlayerCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: no Tag: TeleportRadius Tag Format: [TeleportRadius:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: nan # Events Jaa events! Tag: ToggleEvents Tag Format: [ToggleEvents:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ToggleEventIds Tag Format: [ToggleEventIds:Value] Description: nan Allowed Values: Any Event Profile SubtypeId Multiple Tag Allowed: yes Tag: ToggleEventIdModes Tag Format: [ToggleEventIdModes:Value] Description: true will activate it. false will set disable it Allowed Values: true false Multiple Tag Allowed: yes Tag: ToggleEventTags Tag Format: [ToggleEventTags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ToggleEventTagModes Tag Format: [ToggleEventTagModes:Value] Description: true will activate it. false will set disable it Allowed Values: true false Multiple Tag Allowed: yes Tag: ResetCooldownTimeOfEvents Tag Format: [ResetCooldownTimeOfEvents:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ResetEventCooldownIds Tag Format: [ResetEventCooldownIds:Value] Description: nan Allowed Values: Any Event Profile SubtypeId Multiple Tag Allowed: yes Tag: ResetEventCooldownTags Tag Format: [ResetEventCooldownTags:Value] Description: nan Allowed Values: Any name string excluding characters \": [ ]\" Multiple Tag Allowed: yes","title":"Debug"},{"location":"Event-Action/#custom-actions","text":"This Secition ... See Here","title":"Custom Actions"},{"location":"Event-Conditions/","text":"Event-Conditions.md Event Condition Profiles allow you to define some extra conditions that must be met before a Event Profile can execute its Actions. It is important that you use a unique SubtypeId for each Condition Profile you create, otherwise they may not work correctly. Here's an example of how a Event Condition Profile Definition is setup: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>TAG-EventCondition-Example/SubtypeId> </Id> <Description> [MES Event Condition] [CheckTrueBooleans:true] [TrueBooleans:SomeRandomBoolean] [CheckThreatScore:true] [ThreatScoreAmount:600] [ThreatScoreDistance:5000] [ThreatScoreCoords:{X:-1129033.5 Y:126871.5 Z:1293873.5}] [ThreatScoreDistanceFromCoords:90000] [ThreatScoreType:PlayerLocation] [ThreatScoreGridConfiguration:Static] </Description> </EntityComponent> Basic SandboxVariables Player TheatScore Basic Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseAnyPassingCondition Tag Format: [UseAnyPassingCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no # SandboxVariables Tag: CheckTrueBooleans Tag Format: [CheckTrueBooleans:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: TrueBooleans Tag Format: [TrueBooleans:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AllowAnyTrueBoolean Tag Format: [AllowAnyTrueBoolean:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckFalseBooleans Tag Format: [CheckFalseBooleans:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: FalseBooleans Tag Format: [FalseBooleans:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AllowAnyFalseBoolean Tag Format: [AllowAnyFalseBoolean:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckCustomCounters Tag Format: [CheckCustomCounters:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CustomCounters Tag Format: [CustomCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CustomCountersTargets Tag Format: [CustomCountersTargets:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes Tag: CounterCompareTypes Tag Format: [CounterCompareTypes:Value] Description: nan Allowed Values: GreaterOrEqual Greater Equal NotEqual Less LessOrEqual Multiple Tag Allowed: yes # Player Tag: CheckPlayerCondition Tag Format: [CheckPlayerCondition :Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CheckPlayerNear Tag Format: [CheckPlayerNear:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerNearCoords Tag Format: [PlayerNearCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: no Tag: PlayerNearDistanceFromCoords Tag Format: [PlayerNearDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: PlayerFilterIds Tag Format: [PlayerFilterIds:Value] Description: nan Allowed Values: Any PlayerFilter Profile SubtypeId Multiple Tag Allowed: no # TheatScore Tag: CheckThreatScore Tag Format: [CheckThreatScore:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ThreatScoreAmount Tag Format: [ThreatScoreAmount:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ThreatScoreDistance Tag Format: [ThreatScoreDistance:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ThreatScoreType Tag Format: [ThreatScoreType:Value] Description: nan Allowed Values: Player PlayerLocation Location Multiple Tag Allowed: no Tag: ThreatScoreCoords Tag Format: [ThreatScoreCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: no Tag: ThreatScoreDistanceFromCoords Tag Format: [ThreatScoreDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ThreatScoreGridConfiguration Tag Format: [ThreatScoreGridConfiguration:Value] Description: nan Allowed Values: All Static Dynamic Multiple Tag Allowed: no","title":"Event-Conditions.md"},{"location":"Event-Conditions/#event-conditionsmd","text":"Event Condition Profiles allow you to define some extra conditions that must be met before a Event Profile can execute its Actions. It is important that you use a unique SubtypeId for each Condition Profile you create, otherwise they may not work correctly. Here's an example of how a Event Condition Profile Definition is setup: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>TAG-EventCondition-Example/SubtypeId> </Id> <Description> [MES Event Condition] [CheckTrueBooleans:true] [TrueBooleans:SomeRandomBoolean] [CheckThreatScore:true] [ThreatScoreAmount:600] [ThreatScoreDistance:5000] [ThreatScoreCoords:{X:-1129033.5 Y:126871.5 Z:1293873.5}] [ThreatScoreDistanceFromCoords:90000] [ThreatScoreType:PlayerLocation] [ThreatScoreGridConfiguration:Static] </Description> </EntityComponent> Basic SandboxVariables Player TheatScore","title":"Event-Conditions.md"},{"location":"Event-Conditions/#basic","text":"Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseAnyPassingCondition Tag Format: [UseAnyPassingCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no # SandboxVariables Tag: CheckTrueBooleans Tag Format: [CheckTrueBooleans:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: TrueBooleans Tag Format: [TrueBooleans:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AllowAnyTrueBoolean Tag Format: [AllowAnyTrueBoolean:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckFalseBooleans Tag Format: [CheckFalseBooleans:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: FalseBooleans Tag Format: [FalseBooleans:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: AllowAnyFalseBoolean Tag Format: [AllowAnyFalseBoolean:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckCustomCounters Tag Format: [CheckCustomCounters:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CustomCounters Tag Format: [CustomCounters:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CustomCountersTargets Tag Format: [CustomCountersTargets:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes Tag: CounterCompareTypes Tag Format: [CounterCompareTypes:Value] Description: nan Allowed Values: GreaterOrEqual Greater Equal NotEqual Less LessOrEqual Multiple Tag Allowed: yes # Player Tag: CheckPlayerCondition Tag Format: [CheckPlayerCondition :Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CheckPlayerNear Tag Format: [CheckPlayerNear:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerNearCoords Tag Format: [PlayerNearCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: no Tag: PlayerNearDistanceFromCoords Tag Format: [PlayerNearDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: PlayerFilterIds Tag Format: [PlayerFilterIds:Value] Description: nan Allowed Values: Any PlayerFilter Profile SubtypeId Multiple Tag Allowed: no # TheatScore Tag: CheckThreatScore Tag Format: [CheckThreatScore:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ThreatScoreAmount Tag Format: [ThreatScoreAmount:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ThreatScoreDistance Tag Format: [ThreatScoreDistance:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ThreatScoreType Tag Format: [ThreatScoreType:Value] Description: nan Allowed Values: Player PlayerLocation Location Multiple Tag Allowed: no Tag: ThreatScoreCoords Tag Format: [ThreatScoreCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} Replace # with values in meters. Multiple Tag Allowed: no Tag: ThreatScoreDistanceFromCoords Tag Format: [ThreatScoreDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ThreatScoreGridConfiguration Tag Format: [ThreatScoreGridConfiguration:Value] Description: nan Allowed Values: All Static Dynamic Multiple Tag Allowed: no","title":"Basic"},{"location":"Event/","text":"Event.md Events are like triggers, but they don't require a behavior / remote control. Instead they happen at the world level Here is an example of how an Event Profile definition is setup: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>TAG-Event-Example</SubtypeId> </Id> <Description> [MES Event] [UseEvent:false] [UniqueEvent:true] [Tags:BattleforAHEHQ] [ConditionIds:TAG-EventCondition-Example] [ActionExecution:Sequential] [TimeUntilNextActionMs:6000] [ActionIds:TAG-EventAction-Example] [ActionIds:TAG-EventAction-Example2] </Description> </EntityComponent> Tag: UseEvent Tag Format: [UseEvent:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UniqueEvent Tag Format: [UniqueEvent:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: Tags Tag Format: [Tags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: MinCooldownMs Tag Format: [MinCooldownMs:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: MaxCooldownMs Tag Format: [MaxCooldownMs:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ConditionIds Tag Format: [ConditionIds:Value] Description: nan Allowed Values: Any Condition Profile SubtypeId Multiple Tag Allowed: yes Tag: UseAnyPassingCondition Tag Format: [UseAnyPassingCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ActionIds Tag Format: [ActionIds:Value] Description: nan Allowed Values: Any Action Profile SubtypeId Multiple Tag Allowed: yes Tag: ActionExecution Tag Format: [ActionExecution:Value] Description: nan Allowed Values: All Sequential Random Multiple Tag Allowed: no Tag: TimeUntilNextActionMs Tag Format: [TimeUntilNextActionMs:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no","title":"Event.md"},{"location":"Event/#eventmd","text":"Events are like triggers, but they don't require a behavior / remote control. Instead they happen at the world level Here is an example of how an Event Profile definition is setup: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>TAG-Event-Example</SubtypeId> </Id> <Description> [MES Event] [UseEvent:false] [UniqueEvent:true] [Tags:BattleforAHEHQ] [ConditionIds:TAG-EventCondition-Example] [ActionExecution:Sequential] [TimeUntilNextActionMs:6000] [ActionIds:TAG-EventAction-Example] [ActionIds:TAG-EventAction-Example2] </Description> </EntityComponent> Tag: UseEvent Tag Format: [UseEvent:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UniqueEvent Tag Format: [UniqueEvent:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: Tags Tag Format: [Tags:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: MinCooldownMs Tag Format: [MinCooldownMs:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: MaxCooldownMs Tag Format: [MaxCooldownMs:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: ConditionIds Tag Format: [ConditionIds:Value] Description: nan Allowed Values: Any Condition Profile SubtypeId Multiple Tag Allowed: yes Tag: UseAnyPassingCondition Tag Format: [UseAnyPassingCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: ActionIds Tag Format: [ActionIds:Value] Description: nan Allowed Values: Any Action Profile SubtypeId Multiple Tag Allowed: yes Tag: ActionExecution Tag Format: [ActionExecution:Value] Description: nan Allowed Values: All Sequential Random Multiple Tag Allowed: no Tag: TimeUntilNextActionMs Tag Format: [TimeUntilNextActionMs:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no","title":"Event.md"},{"location":"Frequently-Asked-Questions/","text":"Frequently-Asked-Questions.md Here are some common questions I receive for Modular Encounters Systems (MES) and its add-on mods: Q: What order do I need to add MES and other Encounter Mods in the mod list? A: MES and Encounter Mods utilizing it can be loaded in any order or position in your mod list. I do not build mods that require a specific load order, nor do I ever plan to - it adds needless complication otherwise. Q: How do I decrease / increase the amount of spawns? A: You can use the configuration files listed in the Admin & Configuration section to control many aspects of spawn timing and frequency. Individual spawngroups can also be blacklisted by providing the spawngroup subtypeID (ie: its name). The configurations cannot change the spawn rates/frequencies of encounters from specific mods (eg: making Reavers less common, etc). Q: I see too many of the same things spawning in the area I'm in. How do I get more unique spawns? A: If you're in an area that has unfavorable environmental conditions (thin atmosphere, rough terrain, etc), you may see less variety of encounters. You can solve this by moving to more open areas, and using planets have do not have shallow atmosphere (Pertam is an example of a shallow atmosphere world). Planet size is also something to consider, since smaller planets will result in a more shallow atmosphere. Alternatively, you can also add more encounter mods to your world - especially ones that have encounters that can operate in multiple environments. Q: How do I turn off Jetpack / Drill / etc Inhibitor blocks? A: Shoot them until they break. There are no config options to disable these blocks, nor are there any plans to introduce any. Since turrets seem to become more useless against character entities with each game update, I have no incentive to remove these systems. Only a small percentage of NPC mods use the inhibitor blocks, so you have other options available if you don't enjoy that play style. Q: Is MES causing vanilla economy station stores to be empty? A: No. What causes that is older mods that re-implement vanilla ore. If they're re-implemented without minimal price data that the economy system requires to generate pricing, then store blocks will be empty because all other item pricing cannot be calculated (ore -> ingot -> component -> block). Q: Does MES work the the Exploration Enhancement Mod (EEM)? A: Yes. While EEM was not designed to specifically use MES, the spawner is designed in a way that allows virtually all NPC mods to work with it.","title":"Frequently-Asked-Questions.md"},{"location":"Frequently-Asked-Questions/#frequently-asked-questionsmd","text":"Here are some common questions I receive for Modular Encounters Systems (MES) and its add-on mods: Q: What order do I need to add MES and other Encounter Mods in the mod list? A: MES and Encounter Mods utilizing it can be loaded in any order or position in your mod list. I do not build mods that require a specific load order, nor do I ever plan to - it adds needless complication otherwise. Q: How do I decrease / increase the amount of spawns? A: You can use the configuration files listed in the Admin & Configuration section to control many aspects of spawn timing and frequency. Individual spawngroups can also be blacklisted by providing the spawngroup subtypeID (ie: its name). The configurations cannot change the spawn rates/frequencies of encounters from specific mods (eg: making Reavers less common, etc). Q: I see too many of the same things spawning in the area I'm in. How do I get more unique spawns? A: If you're in an area that has unfavorable environmental conditions (thin atmosphere, rough terrain, etc), you may see less variety of encounters. You can solve this by moving to more open areas, and using planets have do not have shallow atmosphere (Pertam is an example of a shallow atmosphere world). Planet size is also something to consider, since smaller planets will result in a more shallow atmosphere. Alternatively, you can also add more encounter mods to your world - especially ones that have encounters that can operate in multiple environments. Q: How do I turn off Jetpack / Drill / etc Inhibitor blocks? A: Shoot them until they break. There are no config options to disable these blocks, nor are there any plans to introduce any. Since turrets seem to become more useless against character entities with each game update, I have no incentive to remove these systems. Only a small percentage of NPC mods use the inhibitor blocks, so you have other options available if you don't enjoy that play style. Q: Is MES causing vanilla economy station stores to be empty? A: No. What causes that is older mods that re-implement vanilla ore. If they're re-implemented without minimal price data that the economy system requires to generate pricing, then store blocks will be empty because all other item pricing cannot be calculated (ore -> ingot -> component -> block). Q: Does MES work the the Exploration Enhancement Mod (EEM)? A: Yes. While EEM was not designed to specifically use MES, the spawner is designed in a way that allows virtually all NPC mods to work with it.","title":"Frequently-Asked-Questions.md"},{"location":"Home/","text":"Home.md Welcome to the Modular Encounters Systems Wiki! This mod is a combination of the Modular Encounters Spawner and RivalAI frameworks. In this wiki you will find resources for several topics relating to configuring the mod settings, resources for building your own mods using this framework, and troubleshooting resources. If you are having issues with the mod framework, or any of the mods that utilize it, I suggest you start with the Player Support section of this wiki (see side menu on the right). This section answers several common questions and also provides troubleshooting steps for many of the more common issues people may encounter. Here is what to expect in each section: Player Support: This section contain common troubleshooting and FAQs that some players may need if they run into issues with the mod. Admin & Configuration: This section contains information on all the various configuration options for MES, where to find them, and also how to activate them. Modding: This section has information on all the various tags and profiles that are used in mods that utilize MES. Template / Example Files: These are file templates you can use to start building your own mod. Modder Resources: This section contains pre-made profiles, scripting API, and other tips / tricks for developing your own MES enabled mod. Mod Repositories: This section links to various other NPC mods Github repositories that I've published. You can study these to learn how various profiles and tags come together to make a functional MES enabled mod.","title":"Home.md"},{"location":"Home/#homemd","text":"","title":"Home.md"},{"location":"Home/#welcome-to-the-modular-encounters-systems-wiki","text":"This mod is a combination of the Modular Encounters Spawner and RivalAI frameworks. In this wiki you will find resources for several topics relating to configuring the mod settings, resources for building your own mods using this framework, and troubleshooting resources. If you are having issues with the mod framework, or any of the mods that utilize it, I suggest you start with the Player Support section of this wiki (see side menu on the right). This section answers several common questions and also provides troubleshooting steps for many of the more common issues people may encounter. Here is what to expect in each section: Player Support: This section contain common troubleshooting and FAQs that some players may need if they run into issues with the mod. Admin & Configuration: This section contains information on all the various configuration options for MES, where to find them, and also how to activate them. Modding: This section has information on all the various tags and profiles that are used in mods that utilize MES. Template / Example Files: These are file templates you can use to start building your own mod. Modder Resources: This section contains pre-made profiles, scripting API, and other tips / tricks for developing your own MES enabled mod. Mod Repositories: This section links to various other NPC mods Github repositories that I've published. You can study these to learn how various profiles and tags come together to make a functional MES enabled mod.","title":"Welcome to the Modular Encounters Systems Wiki!"},{"location":"Loot-Profile-Group/","text":"Loot-Profile-Group.md Loot Group Profiles in Modular Encounters Systems are used to group together multiple Loot Profile names so they can easily be applied to Manipulation Profiles that use those profiles often (reducing visual clutter and copy/paste activity). You can attach your Loot Group Profiles to any Manipulation Profile by adding a [LootGroups:Value] tag to the Manipulation Profile and replace Value with the SubtypeId of your Loot Profile Group. Example: [LootGroups:MES-ExampleLootGroupProfile] Multiple Loot Group Profiles can be attached to a single Manipulation Profile as well, just include additional [LootGroups:Value] lines in your Manipulation Profile. It is important that you use a unique SubtypeId for each Manipulation Group Profile you create, otherwise they may not work correctly. Here is an example of how a Loot Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleManipulationGroupsProfile</SubtypeId> </Id> <Description> [MES Loot Group] [LootProfiles:SomeLootProfileId] [LootProfiles:AnotherLootProfileId] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Loot Group Profiles. Tag: LootProfiles Tag Format: [LootProfiles:Value] Description: This tag specifies the name of a Loot Profile this group should use. Allowed Values: Any Loot Profile SubtypeId Multiple Tag Allowed: Yes","title":"Loot-Profile-Group.md"},{"location":"Loot-Profile-Group/#loot-profile-groupmd","text":"Loot Group Profiles in Modular Encounters Systems are used to group together multiple Loot Profile names so they can easily be applied to Manipulation Profiles that use those profiles often (reducing visual clutter and copy/paste activity). You can attach your Loot Group Profiles to any Manipulation Profile by adding a [LootGroups:Value] tag to the Manipulation Profile and replace Value with the SubtypeId of your Loot Profile Group. Example: [LootGroups:MES-ExampleLootGroupProfile] Multiple Loot Group Profiles can be attached to a single Manipulation Profile as well, just include additional [LootGroups:Value] lines in your Manipulation Profile. It is important that you use a unique SubtypeId for each Manipulation Group Profile you create, otherwise they may not work correctly. Here is an example of how a Loot Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleManipulationGroupsProfile</SubtypeId> </Id> <Description> [MES Loot Group] [LootProfiles:SomeLootProfileId] [LootProfiles:AnotherLootProfileId] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Loot Group Profiles. Tag: LootProfiles Tag Format: [LootProfiles:Value] Description: This tag specifies the name of a Loot Profile this group should use. Allowed Values: Any Loot Profile SubtypeId Multiple Tag Allowed: Yes","title":"Loot-Profile-Group.md"},{"location":"Loot-Profiles/","text":"Loot-Profiles.md This page provides a number of pre-made Loot Profiles that exist in the MES mod files. They can be referenced in your own mods for easy configuration of inventory addition. Name: MES-Loot-AdvancedContainers Description: Adds a small random assortment of valuable Ammo, Ingots, Components, Credits, or Explosives to a handful of regular sized containers. Name: MES-Loot-AdvancedContainersLarge Description: Adds a large random assortment of valuable Ammo, Ingots, Components, Credits, or Explosives to a handful of large containers. Name: MES-Loot-BasicContainers Description: Adds a small random assortment of common Ammo, Ingots, Components, Credits, or Explosives to a handful of regular sized containers. Name: MES-Loot-BasicContainersLarge Description: Adds a large random assortment of common Ammo, Ingots, Components, Credits, or Explosives to a handful of large sized containers. Name: MES-Loot-Corpses Description: Adds a very small random assortment of common Ammo, Consumables, Weapons, or Credits to a handful of Dead Engineer blocks. Name: MES-Loot-Freight Description: Adds a very small random assortment of common Ammo, Credits, or Explosives to a handful of Freight blocks. Name: MES-Loot-Lockers Description: Adds a very small random assortment of mixed-rarity Consumables, Credits, Tools, or Weapons to a handful of Locker blocks. Name: MES-Loot-MixedContainers Description: Adds a small random assortment of mixed-rarity Ammo, Ingots, Components, Credits, or Explosives to a handful of regular sized containers. Name: MES-Loot-MixedContainersLarge Description: Adds a large random assortment of mixed-rarity Ammo, Ingots, Components, Credits, or Explosives to a handful of large sized containers. Name: MES-Loot-WeaponRacks Description: Adds a very small random assortment of mixed-rarity Weapons to a handful of Weapon Rack blocks.","title":"Loot-Profiles.md"},{"location":"Loot-Profiles/#loot-profilesmd","text":"This page provides a number of pre-made Loot Profiles that exist in the MES mod files. They can be referenced in your own mods for easy configuration of inventory addition. Name: MES-Loot-AdvancedContainers Description: Adds a small random assortment of valuable Ammo, Ingots, Components, Credits, or Explosives to a handful of regular sized containers. Name: MES-Loot-AdvancedContainersLarge Description: Adds a large random assortment of valuable Ammo, Ingots, Components, Credits, or Explosives to a handful of large containers. Name: MES-Loot-BasicContainers Description: Adds a small random assortment of common Ammo, Ingots, Components, Credits, or Explosives to a handful of regular sized containers. Name: MES-Loot-BasicContainersLarge Description: Adds a large random assortment of common Ammo, Ingots, Components, Credits, or Explosives to a handful of large sized containers. Name: MES-Loot-Corpses Description: Adds a very small random assortment of common Ammo, Consumables, Weapons, or Credits to a handful of Dead Engineer blocks. Name: MES-Loot-Freight Description: Adds a very small random assortment of common Ammo, Credits, or Explosives to a handful of Freight blocks. Name: MES-Loot-Lockers Description: Adds a very small random assortment of mixed-rarity Consumables, Credits, Tools, or Weapons to a handful of Locker blocks. Name: MES-Loot-MixedContainers Description: Adds a small random assortment of mixed-rarity Ammo, Ingots, Components, Credits, or Explosives to a handful of regular sized containers. Name: MES-Loot-MixedContainersLarge Description: Adds a large random assortment of mixed-rarity Ammo, Ingots, Components, Credits, or Explosives to a handful of large sized containers. Name: MES-Loot-WeaponRacks Description: Adds a very small random assortment of mixed-rarity Weapons to a handful of Weapon Rack blocks.","title":"Loot-Profiles.md"},{"location":"Loot/","text":"Loot.md Loot Profiles in the Modular Encounter Systems mod allow you to define rules for how Blocks Containing Inventory on your NPC Grids are assigned a Container Type definition. Container Type definitions are used to randomly fill inventories with items. Loot profiles are attached to Manipulation profiles. Here is an example of how a Loot Profile is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleLoot</SubtypeId> </Id> <Description> [MES Loot] [ContainerBlockTypes:MyObjectBuilder_CargoContainer/LargeBlockSmallContainer] [ContainerTypes:SomeContainerTypeId] [MinBlocks:2] [MaxBlocks:4] [AppendNameToBlock:true] [AppendedName: (Loot)] </Description> </EntityComponent> </EntityComponents> </Definitions> These profiles attach to Manipulation Profiles using the [LootProfiles:YourLootProfileIdHere] tag. It's worth noting that these profiles will only target Cargo blocks that do not have a ContainerType already defined, so if you've already defined them manually, then those blocks will be unchanged. Below you can find all the tags that can be used in your Loot Profile: Tag: ContainerBlockTypes Tag Format: [ContainerBlockTypes:Value] Description: This tag specifies the types of Blocks that should be targeted by the Loot Profile. These can be any block that contains an inventory. Allowed Values: Any block MyDefinitionId eg: MyObjectBuilder_CargoContainer/LargeBlockSmallContainer Multiple Tag Allowed: Yes Tag: ContainerTypes Tag Format: [ContainerTypes:Value] Description: This tag specifies the name(s) of the ContainerType definitions that you want to apply to your cargo containers. If you provide multiple values, then each time a ContainerType is assigned, it will do so by picking 1 at random from the list you have provided. Allowed Values: Any ContainerType SubtypeId Multiple Tag Allowed: Yes Tag: MinBlocks Tag Format: [MinBlocks:Value] Description: This tag specifies the minimum number of Cargo Blocks that will be targeted by the Loot Profile. Allowed Values: Any Integer Greater Or Equal To 0 Value must be less than MaxBlocks Multiple Tag Allowed: No Tag: MaxBlocks Tag Format: [MaxBlocks:Value] Description: This tag specifies the maximum number of Cargo Blocks that will be targeted by the Loot Profile. Allowed Values: Any Integer Greater Or Equal To 0 Value must be greater than MinBlocks Multiple Tag Allowed: No Tag: AddDatapads Tag Format: [AddDatapads:Value] Description: This tag specifies if the Loot Profile should add Datapads to the inventory using text from a provided TextTemplate file. Allowed Values: true false Multiple Tag Allowed: No Tag: DatapadFileSource Tag Format: [DatapadFileSource:Value] Description: This tag specifies the name of the TextTemplate file that you want to use to populate the datapad(s). Allowed Values: Any TextTemplate File Name Multiple Tag Allowed: No Tag: DatapadIndex Tag Format: [DatapadIndex:Value] Description: This tag specifies the index of the datapad entry in the TextTemplate you want to use. If this tag is not provided, then a random entry will be selected for each datapad Allowed Values: Any Integer Greater Or Equal To 0 Multiple Tag Allowed: No Tag: DatapadCount Tag Format: [DatapadCount:Value] Description: This tag specifies the number of datapad that will be created for this inventory Allowed Values: Any Integer Greater Or Equal To 0 Multiple Tag Allowed: No Tag: AppendNameToBlock Tag Format: [AppendNameToBlock:Value] Description: This tag specifies if additional text should be added to the end of the names of cargo blocks that are modified by this Loot Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: AppendedName Tag Format: [AppendedName:Value] Description: This tag specifies the name that is appended to the end of cargo block names if AppendNameToBlock is true Allowed Values: true false Multiple Tag Allowed: No Tag: MatchBlocksContainingName Tag Format: [MatchBlocksContainingName:Value] Description: This tag specifies if the Loot Profile should be restricted to Cargo Blocks that partially or fully match the block name given in the MatchedName tag. Allowed Values: true false Multiple Tag Allowed: No Tag: MatchedName Tag Format: [MatchedName:Value] Description: This tag specifies the partial or full name of the block that must be matched for it to be eligible for use by this profile. Allowed Values: Any Block Name Multiple Tag Allowed: No Tag: Chance Tag Format: [Chance:Value] Description: This tag specifies the chance (out of 100) that this profile will be used. Allowed Values: Any Integer Between 0 - 100 Multiple Tag Allowed: No","title":"Loot.md"},{"location":"Loot/#lootmd","text":"Loot Profiles in the Modular Encounter Systems mod allow you to define rules for how Blocks Containing Inventory on your NPC Grids are assigned a Container Type definition. Container Type definitions are used to randomly fill inventories with items. Loot profiles are attached to Manipulation profiles. Here is an example of how a Loot Profile is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleLoot</SubtypeId> </Id> <Description> [MES Loot] [ContainerBlockTypes:MyObjectBuilder_CargoContainer/LargeBlockSmallContainer] [ContainerTypes:SomeContainerTypeId] [MinBlocks:2] [MaxBlocks:4] [AppendNameToBlock:true] [AppendedName: (Loot)] </Description> </EntityComponent> </EntityComponents> </Definitions> These profiles attach to Manipulation Profiles using the [LootProfiles:YourLootProfileIdHere] tag. It's worth noting that these profiles will only target Cargo blocks that do not have a ContainerType already defined, so if you've already defined them manually, then those blocks will be unchanged. Below you can find all the tags that can be used in your Loot Profile: Tag: ContainerBlockTypes Tag Format: [ContainerBlockTypes:Value] Description: This tag specifies the types of Blocks that should be targeted by the Loot Profile. These can be any block that contains an inventory. Allowed Values: Any block MyDefinitionId eg: MyObjectBuilder_CargoContainer/LargeBlockSmallContainer Multiple Tag Allowed: Yes Tag: ContainerTypes Tag Format: [ContainerTypes:Value] Description: This tag specifies the name(s) of the ContainerType definitions that you want to apply to your cargo containers. If you provide multiple values, then each time a ContainerType is assigned, it will do so by picking 1 at random from the list you have provided. Allowed Values: Any ContainerType SubtypeId Multiple Tag Allowed: Yes Tag: MinBlocks Tag Format: [MinBlocks:Value] Description: This tag specifies the minimum number of Cargo Blocks that will be targeted by the Loot Profile. Allowed Values: Any Integer Greater Or Equal To 0 Value must be less than MaxBlocks Multiple Tag Allowed: No Tag: MaxBlocks Tag Format: [MaxBlocks:Value] Description: This tag specifies the maximum number of Cargo Blocks that will be targeted by the Loot Profile. Allowed Values: Any Integer Greater Or Equal To 0 Value must be greater than MinBlocks Multiple Tag Allowed: No Tag: AddDatapads Tag Format: [AddDatapads:Value] Description: This tag specifies if the Loot Profile should add Datapads to the inventory using text from a provided TextTemplate file. Allowed Values: true false Multiple Tag Allowed: No Tag: DatapadFileSource Tag Format: [DatapadFileSource:Value] Description: This tag specifies the name of the TextTemplate file that you want to use to populate the datapad(s). Allowed Values: Any TextTemplate File Name Multiple Tag Allowed: No Tag: DatapadIndex Tag Format: [DatapadIndex:Value] Description: This tag specifies the index of the datapad entry in the TextTemplate you want to use. If this tag is not provided, then a random entry will be selected for each datapad Allowed Values: Any Integer Greater Or Equal To 0 Multiple Tag Allowed: No Tag: DatapadCount Tag Format: [DatapadCount:Value] Description: This tag specifies the number of datapad that will be created for this inventory Allowed Values: Any Integer Greater Or Equal To 0 Multiple Tag Allowed: No Tag: AppendNameToBlock Tag Format: [AppendNameToBlock:Value] Description: This tag specifies if additional text should be added to the end of the names of cargo blocks that are modified by this Loot Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: AppendedName Tag Format: [AppendedName:Value] Description: This tag specifies the name that is appended to the end of cargo block names if AppendNameToBlock is true Allowed Values: true false Multiple Tag Allowed: No Tag: MatchBlocksContainingName Tag Format: [MatchBlocksContainingName:Value] Description: This tag specifies if the Loot Profile should be restricted to Cargo Blocks that partially or fully match the block name given in the MatchedName tag. Allowed Values: true false Multiple Tag Allowed: No Tag: MatchedName Tag Format: [MatchedName:Value] Description: This tag specifies the partial or full name of the block that must be matched for it to be eligible for use by this profile. Allowed Values: Any Block Name Multiple Tag Allowed: No Tag: Chance Tag Format: [Chance:Value] Description: This tag specifies the chance (out of 100) that this profile will be used. Allowed Values: Any Integer Between 0 - 100 Multiple Tag Allowed: No","title":"Loot.md"},{"location":"Manipulation-Groups/","text":"Manipulation-Groups.md Manipulation Group Profiles in Modular Encounters Systems are used to group together multiple Manipulation Profile names so they can easily be applied to SpawnGroups that use those manipulations often (reducing visual clutter and copy/paste activity). You can attach your Manipulation Group Profiles to any SpawnGroup by adding a [ManipulationGroups:Value] tag to the SpawnGroup and replace Value with the SubtypeId of your Manipulation Profile Group. Example: [ManipulationGroups:MES-ExampleManipulationGroupsProfile] Multiple Manipulation Group Profiles can be attached to a single SpawnGroup as well, just include additional [ManipulationGroups:Value] lines in your SpawnGroup Profile. It is important that you use a unique SubtypeId for each Manipulation Group Profile you create, otherwise they may not work correctly. Here is an example of how a Manipulation Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleManipulationGroupsProfile</SubtypeId> </Id> <Description> [MES Manipulation Group] [ManipulationProfiles:SomeManipulationProfileId] [ManipulationProfiles:AnotherManipulationProfileId] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Manipulation Group Profiles. Tag: ManipulationProfiles Tag Format: [ManipulationProfiles:Value] Description: This tag specifies the name of Manipulation Profile this group should use. Allowed Values: Any Manipulation Profile SubtypeId Multiple Tag Allowed: Yes","title":"Manipulation-Groups.md"},{"location":"Manipulation-Groups/#manipulation-groupsmd","text":"Manipulation Group Profiles in Modular Encounters Systems are used to group together multiple Manipulation Profile names so they can easily be applied to SpawnGroups that use those manipulations often (reducing visual clutter and copy/paste activity). You can attach your Manipulation Group Profiles to any SpawnGroup by adding a [ManipulationGroups:Value] tag to the SpawnGroup and replace Value with the SubtypeId of your Manipulation Profile Group. Example: [ManipulationGroups:MES-ExampleManipulationGroupsProfile] Multiple Manipulation Group Profiles can be attached to a single SpawnGroup as well, just include additional [ManipulationGroups:Value] lines in your SpawnGroup Profile. It is important that you use a unique SubtypeId for each Manipulation Group Profile you create, otherwise they may not work correctly. Here is an example of how a Manipulation Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleManipulationGroupsProfile</SubtypeId> </Id> <Description> [MES Manipulation Group] [ManipulationProfiles:SomeManipulationProfileId] [ManipulationProfiles:AnotherManipulationProfileId] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Manipulation Group Profiles. Tag: ManipulationProfiles Tag Format: [ManipulationProfiles:Value] Description: This tag specifies the name of Manipulation Profile this group should use. Allowed Values: Any Manipulation Profile SubtypeId Multiple Tag Allowed: Yes","title":"Manipulation-Groups.md"},{"location":"Manipulation/","text":"Manipulation.md Manipulation Profiles allow you to group together customizations that are applied after a SpawnGroup is selected, but before the grid is created in the game world. SpawnGroups can have multiple Manipulation Profiles. After a SpawnGroup has been selected for spawn, all of the attached Manipulation Profiles in that SpawnGroup will be processed and applied to the Prefabs prior to spawn. This allows you to easily create sets of common customizations that you can apply to multiple SpawnGroups, and tweak them across all the encounters by editing the applicable profile. Manipulation Profiles also have some limited conditional parameters as well to determine if a profile should be allowed to process. Examples include min/max threat levels, which Spawn Condition Profile was used, and more! The tags in the Manipulation Profiles can be placed directly in the SpawnGroup tags. This is because these tags were once part of the regular SpawnGroup tags, and steps to ensure compatibility were considered. Here is an example of how a Spawn Condition Profile is created: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-Manipulation-PaintingExample</SubtypeId> </Id> <Description> [MES Manipulation] [SkinRandomBlocks:true] [MinPercentageSkinRandomBlocks:15] [MaxPercentageSkinRandomBlocks:40] [SkinRandomBlocksTextures:Rusty_Armor] [SkinRandomBlocksTextures:Battered_Armor] [SkinRandomBlocksTextures:Heavy_Rust_Armor] [ReduceBlockBuildStates:true] [MinimumBlocksPercent:5] [MaximumBlocksPercent:15] [MinimumBuildPercent:10] [MaximumBuildPercent:75] </Description> </EntityComponent> </EntityComponents> </Definitions> To link a profile to your SpawnGroup, simply use the ManipulationProfiles tag and provide the SubtypeId of the Manipulation Profile you created. Eg: [ManipulationProfiles:MES-Manipulation-CargoShipExample] . Below are several types of tags you can include in your Manipulation Profile: Conditions General Armor-Modules Block-Replacement Block-Settings Build-States Damage Inventory Paint-and-Skins Profiles Renaming RivalAI Shields Propulsion Turrets Weapon-Randomization Conditions Tag: ManipulationChance Tag Format: [ManipulationChance:Value] Description: This tag allows you to specify a number between 0 and 100 that is used to determine the chance the Manipulation Profile has to be applied to the pending spawn. Allowed Values: Integer Between 0 and 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: RequiredManipulationSpawnType Tag Format: [RequiredManipulationSpawnType:Value] Description: This tag allows you to specify one or more Spawn Types. If any of the provided Spawn Types match the Type of the encounter that is being spawned, then this condition is considered satisfied. Allowed Values: SpaceCargoShip LunarCargoShip RandomEncounter PlanetaryCargoShip GravityCargoShip PlanetaryInstallation WaterSurfaceStation UnderWaterStation BossSpace BossAtmo BossGravity Creature OtherNPC DroneEncounter StaticEncounter DryLandInstallation Default Value(s): N/A Multiple Tag Allowed: Yes Tag: RequiredManipulationSpawnConditions Tag Format: [RequiredManipulationSpawnConditions:Value] Description: This tag allows you to specify one or more Spawn Condition Profile SubtypeIds. If any Spawn Condition Profile with a matching ID is used to spawn the encounter, then this condition is considered satisfied. Allowed Values: Any Spawn Condition Profile SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationThreatMinimum Tag Format: [ManipulationThreatMinimum:Value] Description: This tag allows you to specify a minimum threat score that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationThreatMaximum Tag Format: [ManipulationThreatMaximum:Value] Description: This tag allows you to specify a maximum threat score that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMinDifficulty Tag Format: [ManipulationMinDifficulty:Value] Description: This tag allows you to specify a minimum difficulty (which is set in the General Config of the world) that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Integer Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMaxDifficulty Tag Format: [ManipulationMaxDifficulty:Value] Description: This tag allows you to specify a maximum difficulty (which is set in the General Config of the world) that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Integer Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMinBlockCount Tag Format: [ManipulationMinBlockCount:Value] Description: This tag allows you to specify a minimum prefab block count for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMaxBlockCount Tag Format: [ManipulationMaxBlockCount:Value] Description: This tag allows you to specify a maximum prefab block count for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationAllowedPrefabNames Tag Format: [ManipulationAllowedPrefabNames:Value] Description: This tag allows you to specify one or more Prefab Names that must match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Prefab SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationRestrictedPrefabNames Tag Format: [ManipulationRestrictedPrefabNames:Value] Description: This tag allows you to specify one or more Prefab Names that cannot match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Prefab SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationAllowedPrefabIndexes Tag Format: [ManipulationAllowedPrefabIndexes:Value] Description: This tag allows you to specify one or more Prefab Indexes (eg: 0, 1, 2, etc) that must match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Integer Matching a Prefab Index Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationRestrictedPrefabIndexes Tag Format: [ManipulationRestrictedPrefabIndexes:Value] Description: This tag allows you to specify one or more Prefab Indexes (eg: 0, 1, 2, etc) that cannot match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Integer Matching a Prefab Index Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationRequiredCustomTags Tag Format: [ManipulationRequiredCustomTags:Value] Description: This tag allows you to specify one or more CustomTags that must be present in the prefab in order to run the Manipulation Profile. Allowed Values: Any String Value Default Value(s): N/A Multiple Tag Allowed: Yes General Tag: ClearAuthorship Tag Format: [ClearAuthorship:Value] Description: This tag allows you to specify all blocks should have their authorship (BuiltBy) removed. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Armor-Modules Tag: ReplaceArmorBlocksWithModules Tag Format: [ReplaceArmorBlocksWithModules:Value] Description: This tag allows you to specify if some armor blocks (cubes) on the grid should be replaced with specialized modules that add additional abilities and effects to the NPC Prefabs. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ModulesForArmorReplacement Tag Format: [ModulesForArmorReplacement:Value] Description: This tag lets you determine the types of blocks that will replace an armor cube. For every value provided in this tag, one armor cube is replaced with the provided block type. Allowed Values: MyDefinitionId of Block Default Value(s): N/A Multiple Tag Allowed: Yes Block-Replacement Tag: UseBlockReplacer Tag Format: [UseBlockReplacer:Value] Description: This tag let's you determine if a SpawnGroup should replace certain block types using the provided template in ReplaceBlockReference . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ReplaceBlockOld Tag Format: [ReplaceBlockOld:Value] Description: This tag lets you determine a block that gets replaced if UseBlockReplacer is enabled. If this tag is used, you must also provide a ReplaceBlockNew tag for the block that is replacing the old block. Allowed Values: MyDefinitionId of Block Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ReplaceBlockNew Tag Format: [ReplaceBlockNew:Value] Description: This tag lets you determine a block that replaces an other block if UseBlockReplacer is enabled. If this tag is used, you must also provide a ReplaceBlockOld tag for the block that is being replaced. Allowed Values: MyDefinitionId of Block Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseBlockReplacerProfile Tag Format: [UseBlockReplacerProfile:Value] Description: This tag let's you assign one or more Block Replacement Profile names to easily replace multiple blocks in your NPC Grid. Click Here for a list of existing Block Replacement Profiles. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BlockReplacerProfileNames Tag Format: [BlockReplacerProfileNames:Value1,Value2,Value3,etc] Description: This tag allows you to specify profile names of Blocks to replace if UseBlockReplacerProfile is set to true . Allowed Values: Any Block Replacer Profile Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: Yes Tag: RelaxReplacedBlocksSize Tag Format: [RelaxReplacedBlocksSize:Value] Description: This tag allows you to specify if blocks being replaced while using either the UseBlockReplacer or UseBlockReplacerProfile tags can be a mis-matched size. This is not always safe to use since it does not check mounting points and orientations, so ensure that it works properly with the SpawnGroup before going live with it. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AlwaysRemoveBlock Tag Format: [AlwaysRemoveBlock:Value] Description: This tag allows you to specify if blocks being replaced while using either the UseBlockReplacer or UseBlockReplacerProfile should be removed, regardless if a valid replacement can be found. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreGlobalBlockReplacer Tag Format: [IgnoreGlobalBlockReplacer:Value] Description: This tag allows you to specify if any block replacements specified in the Global Block Replacer (found in General Configuration) should be ignored. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ConvertToHeavyArmor Tag Format: [ConvertToHeavyArmor:Value] Description: This tag allows you to specify if a grid should have all vanilla light armor blocks replaced with their respective heavy armor variant. UseBlockReplacerProfile must be set to true for this to function. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Block-Settings Tag: EraseIngameScripts Tag Format: [EraseIngameScripts:Value] Description: This tag allows you to specify if all programmable blocks on a grid should have their scripts erased. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableTimerBlocks Tag Format: [DisableTimerBlocks:Value] Description: This tag allows you to specify if all timer blocks on a grid should be disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableSensorBlocks Tag Format: [DisableSensorBlocks:Value] Description: This tag allows you to specify if all sensor blocks on a grid should be disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableWarheads Tag Format: [DisableWarheads:Value] Description: This tag allows you to specify if all warheads on a grid should be disarmed and have their countdown stopped. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableThrustOverride Tag Format: [DisableThrustOverride:Value] Description: This tag allows you to specify if all thrusters should have disabled thruster override. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableGyroOverride Tag Format: [DisableGyroOverride:Value] Description: This tag allows you to specify if all gyros should have their override disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: EnableBlocksWithName Tag Format: [EnableBlocksWithName:Value1,Value2,etc] Description: This tag allows you to specify one or more blocks by name that will be turned on / enabled at spawn. Allowed Values: Any Block Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: DisableBlocksWithName Tag Format: [DisableBlocksWithName:Value1,Value2,etc] Description: This tag allows you to specify one or more blocks by name that will be turned off / disabled at spawn. Allowed Values: Any Block Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: AllowPartialNames Tag Format: [AllowPartialNames:Value] Description: This tag allows you to specify if names specified in EnableBlocksWithName and DisableBlocksWithName can be partial matches (eg: match Thruster in Hydrogen Thruster ). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Build-States Tag: ReduceBlockBuildStates Tag Format: [ReduceBlockBuildStates:Value] Description: This tag allows you to specify if the blocks on a grid should be partially ground down. This property only affect non-essential blocks (eg: armor, glass, etc). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MinimumBlocksPercent Tag Format: [MinimumBlocksPercent:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Lower than MaximumBlocksPercent value Default Value(s): 10 Multiple Tag Allowed: No Tag: MaximumBlocksPercent Tag Format: [MaximumBlocksPercent:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Higher than MinimumBlocksPercent value Default Value(s): 40 Multiple Tag Allowed: No Tag: MinimumBuildPercent Tag Format: [MinimumBuildPercent:Value] Description: This tag allows you to specify the minimum build state of affected blocks by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Lower than MaximumBuildPercent value Default Value(s): 10 Multiple Tag Allowed: No Tag: MaximumBuildPercent Tag Format: [MaximumBuildPercent:Value] Description: This tag allows you to specify the maximum build state of affected blocks by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Higher than MinimumBuildPercent value Default Value(s): 75 Multiple Tag Allowed: No Damage Tag: OverrideBlockDamageModifier Tag Format: [OverrideBlockDamageModifier:Value] Description: This tag allows you to specify if the blocks on a grid should have a custom damage multiplier applied. Keep in mind this is applied at the block level and not at the grid level. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BlockDamageModifier Tag Format: [BlockDamageModifier:Value] Description: This tag allows you to specify the percentage of damage blocks take if OverrideBlockDamageModifier is enabled. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 100 Multiple Tag Allowed: No Tag: GridsAreEditable Tag Format: [GridsAreEditable:Value] Description: This tag allows you to specify if the grids in your SpawnGroups are editable. If this tag is set to false, the grid(s) will not be able to be welded, grinded, or have blocks added/removed. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: GridsAreDestructable Tag Format: [GridsAreDestructable:Value] Description: This tag allows you to specify if the grids in your SpawnGroups are destructable. If this tag is set to false, the grid(s) will not be able to take damage from weapons or collisions. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Inventory Tag: AssignContainerTypesToAllCargo Tag Format: [AssignContainerTypesToAllCargo:Value1,Value2,etc] Description: This tag allows you to specify one or more ContainerType SubtypeIds that will be applied to all Cargo Containers on the grid. This allows you to easily setup randomized loot for your SpawnGroups. If multiple values are provided, then each cargo container will choose a ContainerType Id at random. Allowed Values: ContainerType SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: UseContainerTypeAssignment Tag Format: [UseContainerTypeAssignment:Value] Description: This tag allows you to enable replacing ContainerType assignments on blocks matching the criteria specified in the ContainerTypeAssignmentReference tag. Allowed Values: true false Default Value(s): none Multiple Tag Allowed: No Tag: ContainerTypeAssignBlockName Tag Format: [ContainerTypeAssignBlockName:Value] Description: This tag allows you to specify the name of container block(s) that will be assigned a ContainerType SubtypeId if UseContainerTypeAssignment is enabled. If using this tag, you must also provide a ContainerTypeAssignSubtypeId tag that specifies the SubtypeId that is assigned to the block(s) Allowed Values: Any Container Block Name Default Value(s): none Multiple Tag Allowed: Yes Tag: ContainerTypeAssignSubtypeId Tag Format: [ContainerTypeAssignSubtypeId:Value] Description: This tag allows you to specify the SubtypeId of a ContainerType that is assigned to container block(s) if UseContainerTypeAssignment is enabled. If using this tag, you must also provide a ContainerTypeAssignBlockName tag that specifies the name of container block(s) that will be assigned the SubtypeId. Allowed Values: Any ContainerType SubtypeId Default Value(s): none Multiple Tag Allowed: Yes Tag: UseLootProfiles:true Tag Format: [UseLootProfiles:true:Value] Description: This tag allows provided Loot Profiles and Loot Profile Groups to be run while using this manipulation. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ClearGridInventories Tag Format: [ClearGridInventories:Value] Description: This tag allows you to completely erase any pre-exisiting inventory items that were stored in SpawnGroup prefabs when they were exported. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: LootProfiles Tag Format: [LootProfiles:Value] Description: This tag allows you to specify one or more Loot Profiles that will be applied to the grid. Allowed Values: Any Loot Profile SubtypeId Default Value(s): none Multiple Tag Allowed: Yes Tag: LootGroups Tag Format: [LootGroups:Value] Description: This tag allows you to specify one or more Loot Profile Groups that will be applied to the grid. Allowed Values: Any Loot Profile Group SubtypeId Default Value(s): none Multiple Tag Allowed: Yes Paint-and-Skins Tag: ShiftBlockColorsHue Tag Format: [ShiftBlockColorsHue:Value] Description: This tag allows you to specify if the blocks on a grid should have their block color Hue shifted, to change its color. Can be set to random or an assigned value below. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RandomHueShift Tag Format: [RandomHueShift:Value] Description: This tag allows you to specify if a random Hue value should be used when ShiftBlockColorsHue is enabled. If this property is set to true , ShiftBlockColorAmount will be ignored. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ShiftBlockColorAmount Tag Format: [ShiftBlockColorAmount:Value] Description: This tag allows you to specify the amount of Hue that block colors are shifted by. Allowed Values: Any Number Between -360 and 360 Default Value(s): 0 Multiple Tag Allowed: No Tag: AssignGridSkin Tag Format: [AssignGridSkin:Value1,Value2,Value3,etc] Description: This tag allows you to specify one or more Armor Skin IDs to be used to reskin the entire grid. If more than 1 is provided, then a random skin from the provided values is used. Allowed Values: Armor Skin SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: RecolorGrid Tag Format: [RecolorGrid:Value] Description: This tag allows you to specify if the grid should be recolored and/or reskinned based on the values you provide in the next two tags.. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RecolorOld Tag Format: [RecolorOld:Value] Description: This tag allows you to specify a block color on a grid that will be replaced with another color if RecolorGrid is enabled. If using this tag, you must also provide a RecolorNew tag that specifies the color that replaces the color in this tag. Allowed Values: ColorMaskHSV in Below Format: {X:0 Y:0 Z:0} Default Value(s): none Multiple Tag Allowed: Yes Tag: RecolorNew Tag Format: [RecolorNew:Value] Description: This tag allows you to specify a block color that will replace another specified color RecolorGrid is enabled. If using this tag, you must also provide a RecolorOld tag that specifies the color that will be replaced. Allowed Values: ColorMaskHSV in Below Format: {X:0 Y:0 Z:0} Default Value(s): none Multiple Tag Allowed: Yes Tag: ReskinTarget Tag Format: [ReskinTarget:Value] Description: This tag allows you to specify a block color on a grid that will be re-skinned if RecolorGrid is enabled. If using this tag, you must also provide a ReskinTexture tag that specifies the skin name that is applied to blocks with the color in this tag. Allowed Values: ColorMaskHSV in Below Format: {X:0 Y:0 Z:0} Default Value(s): none Multiple Tag Allowed: Yes Tag: ReskinTexture Tag Format: [ReskinTexture:Value] Description: This tag allows you to specify a skin name that will be applied to blocks of a specified color if RecolorGrid is enabled. If using this tag, you must also provide a ReskinTarget tag that specifies the color of blocks that will be re-skinned. Allowed Values: Any Block Skin Name Default Value(s): none Multiple Tag Allowed: Yes Tag: SkinRandomBlocks Tag Format: [SkinRandomBlocks:Value] Description: This tag allows you to specify if the grid should have a random selection of blocks reskinned with a selection of Armor Skins defined in the SkinRandomBlocksTextures tags. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SkinRandomBlocksTextures Tag Format: [SkinRandomBlocksTextures:Value] Description: This tag allows you to specify one or more Armor Skin SubtypeIds that will be used to skin a random selection of blocks. The skins provided to this tag are selected at random. Allowed Values: Valid Armor Skin SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: MinPercentageSkinRandomBlocks Tag Format: [MinPercentageSkinRandomBlocks:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if SkinRandomBlocks is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Lower than MaxPercentageSkinRandomBlocks value Default Value(s): 10 Multiple Tag Allowed: No Tag: MaxPercentageSkinRandomBlocks Tag Format: [MaxPercentageSkinRandomBlocks:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if SkinRandomBlocks is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Higher than MinPercentageSkinRandomBlocks value Default Value(s): 40 Multiple Tag Allowed: No Profiles Tag: UseGridDereliction Tag Format: [UseGridDereliction:Value] Description: This tag allows you to specify whether or not Grid Dereliction Profiles should be applied to a prefab. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DerelictionProfiles Tag Format: [DerelictionProfiles:Value] Description: This tag allows you to specify one or more Dereliction Profile SubtypeIds that will be used to adjust the build states of various blocks on the prefabs in the SpawnGroup. Allowed Values: Valid Dereliction Profile SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Propulsion Tag: ConfigureSpecialNpcThrusters Tag Format: [ConfigureSpecialNpcThrusters:Value] Description: This tag allows you to specify if special NPC thrusters (added to prefab via the spawner built-in block replacement profiles) should be configured with extra parameters. Please note you must ensure that the NPC Thrusters are added to your grid either by Block Replacement or manually, since this tag does not add them automatically. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RestrictNpcIonThrust Tag Format: [RestrictNpcIonThrust:Value] Description: This tag allows you to specify if NPC Ion Thrusters (added via built-in block replacement) should be disabled if the grid is owned by a player identity if the ConfigureSpecialNpcThrusters tag is used. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcIonThrustForceMultiply Tag Format: [NpcIonThrustForceMultiply:Value] Description: This tag allows you to specify the Force Multiplier of NPC Ion Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double force, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: NpcIonThrustPowerMultiply Tag Format: [NpcIonThrustPowerMultiply:Value] Description: This tag allows you to specify the Power Multiplier of NPC Ion Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double required power, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: RestrictNpcAtmoThrust Tag Format: [RestrictNpcAtmoThrust:Value] Description: This tag allows you to specify if NPC Atmospheric Thrusters (added via built-in block replacement) should be disabled if the grid is owned by a player identity if the ConfigureSpecialNpcThrusters tag is used. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcAtmoThrustForceMultiply Tag Format: [NpcAtmoThrustForceMultiply:Value] Description: This tag allows you to specify the Force Multiplier of NPC Atmospheric Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double force, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: NpcAtmoThrustPowerMultiply Tag Format: [NpcAtmoThrustPowerMultiply:Value] Description: This tag allows you to specify the Power Multiplier of NPC Atmospheric Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double required power, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: RestrictNpcHydroThrust Tag Format: [RestrictNpcHydroThrust:Value] Description: This tag allows you to specify if NPC Hydrogen Thrusters (added via built-in block replacement) should be disabled if the grid is owned by a player identity if the ConfigureSpecialNpcThrusters tag is used. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcHydroThrustForceMultiply Tag Format: [NpcHydroThrustForceMultiply:Value] Description: This tag allows you to specify the Force Multiplier of NPC Hydrogen Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double force, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: NpcHydroThrustPowerMultiply Tag Format: [NpcHydroThrustPowerMultiply:Value] Description: This tag allows you to specify the Power Multiplier of NPC Hydrogen Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double required power, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: SetNpcGyroscopeMultiplier Tag Format: [SetNpcGyroscopeMultiplier:Value] Description: This tag allows you to specify if Gyroscopes on the NPC Grid should have a custom force multiplier applied to them. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcGyroscopeMultiplier Tag Format: [NpcGyroscopeMultiplier:Value] Description: This tag allows you to specify the force multipler that is applied to Gyroscopes if using the SetNpcGyroscopeMultiplier tag. Allowed Values: Any Number Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Renaming Tag: UseRandomNameGenerator Tag Format: [UseRandomNameGenerator:Value] Description: This tag will allow you to utilize the Random Name Generator built into the Spawner for your SpawnGroup. Keep in mind that this will affect all prefabs in your SpawnGroup, and they may all have different naming as a result. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RandomGridNamePrefix Tag Format: [RandomGridNamePrefix:Value] Description: This tag allows you to specify a prefix that is added to the beginning of the grid name, mostly to identify your grid after it's been renamed (eg, (NPC-CPC) , etc ). Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: RandomGridNamePattern Tag Format: [RandomGridNamePattern:Value] Description: This tag allows you to specify a pattern that the Random Name Generator should follow. Please click here for a guide to these patterns . Allowed Values: Any Grid Name Pattern Default Value(s): none Multiple Tag Allowed: No Tag: ReplaceAntennaNameWithRandomizedName Tag Format: [ReplaceAntennaNameWithRandomizedName:Value] Description: This tag gives you the option to replace the Block Name of an antenna with the newly generated Random Name (without the Prefix, if specified). Value is replaced with the name of the Antenna Block you want to change. Allowed Values: Existing Antenna Block Name Default Value(s): none Multiple Tag Allowed: No Tag: UseBlockNameReplacer Tag Format: [UseBlockNameReplacer:Value] Description: This tag allows you to enable whether or not block names should be replaced with the reference specified in the BlockNameReplacerReference tag. Allowed Values: true false Default Value(s): none Multiple Tag Allowed: No Tag: ReplaceBlockNameOld Tag Format: [ReplaceBlockNameOld:Value] Description: This tag allows you to specify the name of block(s) that will be renamed to something else if UseBlockNameReplacer is enabled. If using this tag, you must also provide a ReplaceBlockNameNew tag that specifies the new name the block(s) will use Allowed Values: Any Block Name Default Value(s): none Multiple Tag Allowed: Yes Tag: ReplaceBlockNameNew Tag Format: [ReplaceBlockNameNew:Value] Description: This tag allows you to specify the name that block(s) will be renamed to if UseBlockNameReplacer is enabled. If using this tag, you must also provide a ReplaceBlockNameOld tag that specifies the name of block(s) that will be renamed. Allowed Values: Any Block Name Default Value(s): none Multiple Tag Allowed: Yes Tag: ProcessBlocksForCustomGridName Tag Format: [ProcessBlocksForCustomGridName:Value] Description: This tag allows you to specify if the blocks on the grid should be scanned for {GridName} in their name and have it replaced with the randomized name generated if using UseRandomNameGenerator . Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No RivalAI Tag: UseRivalAi Tag Format: [UseRivalAi:Value] Description: This tag allows you to specify if a RivalAI Behavior Profile should be used in the prefabs included in your SpawnGroup. With this tag being set to true , the spawner will look for a RivalAI Behavior with a SubtypeId matching what was provided in the Prefab <Behaviour> tags, and will automatically add it to a valid RivalAI Remote Control block. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RivalAiReplaceRemoteControl Tag Format: [RivalAiReplaceRemoteControl:Value] Description: This tag allows you to specify if the first valid Vanilla Remote Control block in each Prefab should be replaced with a RivalAI Remote Control. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ApplyBehaviorToNamedBlock Tag Format: [ApplyBehaviorToNamedBlock:Value] Description: This tag allows you to specify the specific block name of a Remote Control block that you want to have used/replaced with a RivalAI control block. Allowed Values: Any Remote Control Block Name Default Value(s): none Multiple Tag Allowed: No Tag: ConvertAllRemoteControlBlocks Tag Format: [ConvertAllRemoteControlBlocks:Value] Description: This tag allows you to specify if all remote control blocks should be converted to RivalAI control blocks. Only the first or primary (or named, if you use the option above) block will receive the behavior specified in your prefab, other blocks will need to use RivalAI Trigger/Action to assign behaviors to them. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Shields Tag: AddDefenseShieldBlocks Tag Format: [AddDefenseShieldBlocks:Value] Description: This tag let's you add Defense Shield Blocks to the prefabs if the Defense Shields mod is loaded. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreShieldProviderMod Tag Format: [IgnoreShieldProviderMod:Value] Description: This tag let's you lets you specify if the grid should not receive Defense Shields if the NPC Defense Shields Provider Mod or the EnableGlobalNPCShieldProvider config option is enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Turrets Tag: ChangeTurretSettings Tag Format: [ChangeTurretSettings:Value] Description: This tag allows you to specify if turret settings should be set by the following SpawnGroup settings. Please note if you decide to use this setting, you should specify each setting listed below in your tags so default spawner values don't interfere with your intended settings. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: TurretRange Tag Format: [TurretRange:Value] Description: This tag allows you to specify the range of all turrets. If value is higher than allowed range, it will use the max range of that turret. Allowed Values: Any Number Greater Than 0 Default Value(s): 800 Multiple Tag Allowed: No Tag: TurretIdleRotation Tag Format: [TurretIdleRotation:Value] Description: This tag allows you to specify if turret idle rotation should be enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: TurretTargetMeteors Tag Format: [TurretTargetMeteors:Value] Description: This tag allows you to specify if turrets targeting meteors should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetMissiles Tag Format: [TurretTargetMissiles:Value] Description: This tag allows you to specify if turrets targeting missiles should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetCharacters Tag Format: [TurretTargetCharacters:Value] Description: This tag allows you to specify if turrets targeting characters should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetSmallGrids Tag Format: [TurretTargetSmallGrids:Value] Description: This tag allows you to specify if turrets targeting small grids should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetLargeGrids Tag Format: [TurretTargetLargeGrids:Value] Description: This tag allows you to specify if turrets targeting large grids should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetStations Tag Format: [TurretTargetStations:Value] Description: This tag allows you to specify if turrets targeting static grids should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetNeutrals Tag Format: [TurretTargetNeutrals:Value] Description: This tag allows you to specify if turrets targeting neutrals should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Weapon-Randomization Tag: RandomizeWeapons Tag Format: [RandomizeWeapons:Value] Description: This tag specifies if the prefabs in a SpawnGroup should have their weapons randomized (similar behavior to the NPC Weapon Upgrades mod). If set to true , then the behavior provided by the ReplenishSystems tag will be applied as well. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreWeaponRandomizerMod Tag Format: [IgnoreWeaponRandomizerMod:Value] Description: This tag allows you to control whether or not a SpawnGroup will have randomized weapons if the NPC Weapons Upgrade mod is enabled. If set to true , your SpawnGroup will not have its weapons randomized (unless you've also enabled the RandomizeWeapons option). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: WeaponRandomizerBlacklist Tag Format: [WeaponRandomizerBlacklist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will not be used in Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: WeaponRandomizerWhitelist Tag Format: [WeaponRandomizerWhitelist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will only be used in Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: IgnoreWeaponRandomizerTargetGlobalBlacklist Tag Format: [IgnoreWeaponRandomizerTargetGlobalBlacklist:Value] Description: If set to true , this will allow your SpawnGroup to ignore the Global Weapon Randomizer Target Blacklist (ie, which weapons are not allowed to be replaced) when Weapon Randomization is enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreWeaponRandomizerTargetGlobalWhitelist Tag Format: [IgnoreWeaponRandomizerTargetGlobalWhitelist:Value] Description: If set to true , this will allow your SpawnGroup to ignore the Global Weapon Randomizer Target Whitelist (ie, which weapons are only allowed to be replaced) when Weapon Randomization is enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: WeaponRandomizerTargetBlacklist Tag Format: [WeaponRandomizerTargetBlacklist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will not be replaced with Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: WeaponRandomizerTargetWhitelist Tag Format: [WeaponRandomizerTargetWhitelist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will only be replaced with Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No","title":"Manipulation.md"},{"location":"Manipulation/#manipulationmd","text":"Manipulation Profiles allow you to group together customizations that are applied after a SpawnGroup is selected, but before the grid is created in the game world. SpawnGroups can have multiple Manipulation Profiles. After a SpawnGroup has been selected for spawn, all of the attached Manipulation Profiles in that SpawnGroup will be processed and applied to the Prefabs prior to spawn. This allows you to easily create sets of common customizations that you can apply to multiple SpawnGroups, and tweak them across all the encounters by editing the applicable profile. Manipulation Profiles also have some limited conditional parameters as well to determine if a profile should be allowed to process. Examples include min/max threat levels, which Spawn Condition Profile was used, and more! The tags in the Manipulation Profiles can be placed directly in the SpawnGroup tags. This is because these tags were once part of the regular SpawnGroup tags, and steps to ensure compatibility were considered. Here is an example of how a Spawn Condition Profile is created: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-Manipulation-PaintingExample</SubtypeId> </Id> <Description> [MES Manipulation] [SkinRandomBlocks:true] [MinPercentageSkinRandomBlocks:15] [MaxPercentageSkinRandomBlocks:40] [SkinRandomBlocksTextures:Rusty_Armor] [SkinRandomBlocksTextures:Battered_Armor] [SkinRandomBlocksTextures:Heavy_Rust_Armor] [ReduceBlockBuildStates:true] [MinimumBlocksPercent:5] [MaximumBlocksPercent:15] [MinimumBuildPercent:10] [MaximumBuildPercent:75] </Description> </EntityComponent> </EntityComponents> </Definitions> To link a profile to your SpawnGroup, simply use the ManipulationProfiles tag and provide the SubtypeId of the Manipulation Profile you created. Eg: [ManipulationProfiles:MES-Manipulation-CargoShipExample] . Below are several types of tags you can include in your Manipulation Profile: Conditions General Armor-Modules Block-Replacement Block-Settings Build-States Damage Inventory Paint-and-Skins Profiles Renaming RivalAI Shields Propulsion Turrets Weapon-Randomization","title":"Manipulation.md"},{"location":"Manipulation/#conditions","text":"Tag: ManipulationChance Tag Format: [ManipulationChance:Value] Description: This tag allows you to specify a number between 0 and 100 that is used to determine the chance the Manipulation Profile has to be applied to the pending spawn. Allowed Values: Integer Between 0 and 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: RequiredManipulationSpawnType Tag Format: [RequiredManipulationSpawnType:Value] Description: This tag allows you to specify one or more Spawn Types. If any of the provided Spawn Types match the Type of the encounter that is being spawned, then this condition is considered satisfied. Allowed Values: SpaceCargoShip LunarCargoShip RandomEncounter PlanetaryCargoShip GravityCargoShip PlanetaryInstallation WaterSurfaceStation UnderWaterStation BossSpace BossAtmo BossGravity Creature OtherNPC DroneEncounter StaticEncounter DryLandInstallation Default Value(s): N/A Multiple Tag Allowed: Yes Tag: RequiredManipulationSpawnConditions Tag Format: [RequiredManipulationSpawnConditions:Value] Description: This tag allows you to specify one or more Spawn Condition Profile SubtypeIds. If any Spawn Condition Profile with a matching ID is used to spawn the encounter, then this condition is considered satisfied. Allowed Values: Any Spawn Condition Profile SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationThreatMinimum Tag Format: [ManipulationThreatMinimum:Value] Description: This tag allows you to specify a minimum threat score that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationThreatMaximum Tag Format: [ManipulationThreatMaximum:Value] Description: This tag allows you to specify a maximum threat score that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMinDifficulty Tag Format: [ManipulationMinDifficulty:Value] Description: This tag allows you to specify a minimum difficulty (which is set in the General Config of the world) that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Integer Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMaxDifficulty Tag Format: [ManipulationMaxDifficulty:Value] Description: This tag allows you to specify a maximum difficulty (which is set in the General Config of the world) that must be met for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Integer Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMinBlockCount Tag Format: [ManipulationMinBlockCount:Value] Description: This tag allows you to specify a minimum prefab block count for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationMaxBlockCount Tag Format: [ManipulationMaxBlockCount:Value] Description: This tag allows you to specify a maximum prefab block count for this Manipulation Profile to be applied to the pending spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Default Value(s): -1 Multiple Tag Allowed: No Tag: ManipulationAllowedPrefabNames Tag Format: [ManipulationAllowedPrefabNames:Value] Description: This tag allows you to specify one or more Prefab Names that must match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Prefab SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationRestrictedPrefabNames Tag Format: [ManipulationRestrictedPrefabNames:Value] Description: This tag allows you to specify one or more Prefab Names that cannot match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Prefab SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationAllowedPrefabIndexes Tag Format: [ManipulationAllowedPrefabIndexes:Value] Description: This tag allows you to specify one or more Prefab Indexes (eg: 0, 1, 2, etc) that must match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Integer Matching a Prefab Index Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationRestrictedPrefabIndexes Tag Format: [ManipulationRestrictedPrefabIndexes:Value] Description: This tag allows you to specify one or more Prefab Indexes (eg: 0, 1, 2, etc) that cannot match the current Prefab that is being manipulated in order to run the Manipulation Profile. Allowed Values: Any Integer Matching a Prefab Index Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ManipulationRequiredCustomTags Tag Format: [ManipulationRequiredCustomTags:Value] Description: This tag allows you to specify one or more CustomTags that must be present in the prefab in order to run the Manipulation Profile. Allowed Values: Any String Value Default Value(s): N/A Multiple Tag Allowed: Yes","title":"Conditions"},{"location":"Manipulation/#general","text":"Tag: ClearAuthorship Tag Format: [ClearAuthorship:Value] Description: This tag allows you to specify all blocks should have their authorship (BuiltBy) removed. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"General"},{"location":"Manipulation/#armor-modules","text":"Tag: ReplaceArmorBlocksWithModules Tag Format: [ReplaceArmorBlocksWithModules:Value] Description: This tag allows you to specify if some armor blocks (cubes) on the grid should be replaced with specialized modules that add additional abilities and effects to the NPC Prefabs. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ModulesForArmorReplacement Tag Format: [ModulesForArmorReplacement:Value] Description: This tag lets you determine the types of blocks that will replace an armor cube. For every value provided in this tag, one armor cube is replaced with the provided block type. Allowed Values: MyDefinitionId of Block Default Value(s): N/A Multiple Tag Allowed: Yes","title":"Armor-Modules"},{"location":"Manipulation/#block-replacement","text":"Tag: UseBlockReplacer Tag Format: [UseBlockReplacer:Value] Description: This tag let's you determine if a SpawnGroup should replace certain block types using the provided template in ReplaceBlockReference . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ReplaceBlockOld Tag Format: [ReplaceBlockOld:Value] Description: This tag lets you determine a block that gets replaced if UseBlockReplacer is enabled. If this tag is used, you must also provide a ReplaceBlockNew tag for the block that is replacing the old block. Allowed Values: MyDefinitionId of Block Default Value(s): N/A Multiple Tag Allowed: Yes Tag: ReplaceBlockNew Tag Format: [ReplaceBlockNew:Value] Description: This tag lets you determine a block that replaces an other block if UseBlockReplacer is enabled. If this tag is used, you must also provide a ReplaceBlockOld tag for the block that is being replaced. Allowed Values: MyDefinitionId of Block Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseBlockReplacerProfile Tag Format: [UseBlockReplacerProfile:Value] Description: This tag let's you assign one or more Block Replacement Profile names to easily replace multiple blocks in your NPC Grid. Click Here for a list of existing Block Replacement Profiles. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BlockReplacerProfileNames Tag Format: [BlockReplacerProfileNames:Value1,Value2,Value3,etc] Description: This tag allows you to specify profile names of Blocks to replace if UseBlockReplacerProfile is set to true . Allowed Values: Any Block Replacer Profile Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: Yes Tag: RelaxReplacedBlocksSize Tag Format: [RelaxReplacedBlocksSize:Value] Description: This tag allows you to specify if blocks being replaced while using either the UseBlockReplacer or UseBlockReplacerProfile tags can be a mis-matched size. This is not always safe to use since it does not check mounting points and orientations, so ensure that it works properly with the SpawnGroup before going live with it. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AlwaysRemoveBlock Tag Format: [AlwaysRemoveBlock:Value] Description: This tag allows you to specify if blocks being replaced while using either the UseBlockReplacer or UseBlockReplacerProfile should be removed, regardless if a valid replacement can be found. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreGlobalBlockReplacer Tag Format: [IgnoreGlobalBlockReplacer:Value] Description: This tag allows you to specify if any block replacements specified in the Global Block Replacer (found in General Configuration) should be ignored. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ConvertToHeavyArmor Tag Format: [ConvertToHeavyArmor:Value] Description: This tag allows you to specify if a grid should have all vanilla light armor blocks replaced with their respective heavy armor variant. UseBlockReplacerProfile must be set to true for this to function. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Block-Replacement"},{"location":"Manipulation/#block-settings","text":"Tag: EraseIngameScripts Tag Format: [EraseIngameScripts:Value] Description: This tag allows you to specify if all programmable blocks on a grid should have their scripts erased. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableTimerBlocks Tag Format: [DisableTimerBlocks:Value] Description: This tag allows you to specify if all timer blocks on a grid should be disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableSensorBlocks Tag Format: [DisableSensorBlocks:Value] Description: This tag allows you to specify if all sensor blocks on a grid should be disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableWarheads Tag Format: [DisableWarheads:Value] Description: This tag allows you to specify if all warheads on a grid should be disarmed and have their countdown stopped. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableThrustOverride Tag Format: [DisableThrustOverride:Value] Description: This tag allows you to specify if all thrusters should have disabled thruster override. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DisableGyroOverride Tag Format: [DisableGyroOverride:Value] Description: This tag allows you to specify if all gyros should have their override disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: EnableBlocksWithName Tag Format: [EnableBlocksWithName:Value1,Value2,etc] Description: This tag allows you to specify one or more blocks by name that will be turned on / enabled at spawn. Allowed Values: Any Block Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: DisableBlocksWithName Tag Format: [DisableBlocksWithName:Value1,Value2,etc] Description: This tag allows you to specify one or more blocks by name that will be turned off / disabled at spawn. Allowed Values: Any Block Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: AllowPartialNames Tag Format: [AllowPartialNames:Value] Description: This tag allows you to specify if names specified in EnableBlocksWithName and DisableBlocksWithName can be partial matches (eg: match Thruster in Hydrogen Thruster ). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Block-Settings"},{"location":"Manipulation/#build-states","text":"Tag: ReduceBlockBuildStates Tag Format: [ReduceBlockBuildStates:Value] Description: This tag allows you to specify if the blocks on a grid should be partially ground down. This property only affect non-essential blocks (eg: armor, glass, etc). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MinimumBlocksPercent Tag Format: [MinimumBlocksPercent:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Lower than MaximumBlocksPercent value Default Value(s): 10 Multiple Tag Allowed: No Tag: MaximumBlocksPercent Tag Format: [MaximumBlocksPercent:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Higher than MinimumBlocksPercent value Default Value(s): 40 Multiple Tag Allowed: No Tag: MinimumBuildPercent Tag Format: [MinimumBuildPercent:Value] Description: This tag allows you to specify the minimum build state of affected blocks by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Lower than MaximumBuildPercent value Default Value(s): 10 Multiple Tag Allowed: No Tag: MaximumBuildPercent Tag Format: [MaximumBuildPercent:Value] Description: This tag allows you to specify the maximum build state of affected blocks by percentage if ReduceBlockBuildStates is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Higher than MinimumBuildPercent value Default Value(s): 75 Multiple Tag Allowed: No","title":"Build-States"},{"location":"Manipulation/#damage","text":"Tag: OverrideBlockDamageModifier Tag Format: [OverrideBlockDamageModifier:Value] Description: This tag allows you to specify if the blocks on a grid should have a custom damage multiplier applied. Keep in mind this is applied at the block level and not at the grid level. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BlockDamageModifier Tag Format: [BlockDamageModifier:Value] Description: This tag allows you to specify the percentage of damage blocks take if OverrideBlockDamageModifier is enabled. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 100 Multiple Tag Allowed: No Tag: GridsAreEditable Tag Format: [GridsAreEditable:Value] Description: This tag allows you to specify if the grids in your SpawnGroups are editable. If this tag is set to false, the grid(s) will not be able to be welded, grinded, or have blocks added/removed. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: GridsAreDestructable Tag Format: [GridsAreDestructable:Value] Description: This tag allows you to specify if the grids in your SpawnGroups are destructable. If this tag is set to false, the grid(s) will not be able to take damage from weapons or collisions. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No","title":"Damage"},{"location":"Manipulation/#inventory","text":"Tag: AssignContainerTypesToAllCargo Tag Format: [AssignContainerTypesToAllCargo:Value1,Value2,etc] Description: This tag allows you to specify one or more ContainerType SubtypeIds that will be applied to all Cargo Containers on the grid. This allows you to easily setup randomized loot for your SpawnGroups. If multiple values are provided, then each cargo container will choose a ContainerType Id at random. Allowed Values: ContainerType SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: UseContainerTypeAssignment Tag Format: [UseContainerTypeAssignment:Value] Description: This tag allows you to enable replacing ContainerType assignments on blocks matching the criteria specified in the ContainerTypeAssignmentReference tag. Allowed Values: true false Default Value(s): none Multiple Tag Allowed: No Tag: ContainerTypeAssignBlockName Tag Format: [ContainerTypeAssignBlockName:Value] Description: This tag allows you to specify the name of container block(s) that will be assigned a ContainerType SubtypeId if UseContainerTypeAssignment is enabled. If using this tag, you must also provide a ContainerTypeAssignSubtypeId tag that specifies the SubtypeId that is assigned to the block(s) Allowed Values: Any Container Block Name Default Value(s): none Multiple Tag Allowed: Yes Tag: ContainerTypeAssignSubtypeId Tag Format: [ContainerTypeAssignSubtypeId:Value] Description: This tag allows you to specify the SubtypeId of a ContainerType that is assigned to container block(s) if UseContainerTypeAssignment is enabled. If using this tag, you must also provide a ContainerTypeAssignBlockName tag that specifies the name of container block(s) that will be assigned the SubtypeId. Allowed Values: Any ContainerType SubtypeId Default Value(s): none Multiple Tag Allowed: Yes Tag: UseLootProfiles:true Tag Format: [UseLootProfiles:true:Value] Description: This tag allows provided Loot Profiles and Loot Profile Groups to be run while using this manipulation. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ClearGridInventories Tag Format: [ClearGridInventories:Value] Description: This tag allows you to completely erase any pre-exisiting inventory items that were stored in SpawnGroup prefabs when they were exported. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: LootProfiles Tag Format: [LootProfiles:Value] Description: This tag allows you to specify one or more Loot Profiles that will be applied to the grid. Allowed Values: Any Loot Profile SubtypeId Default Value(s): none Multiple Tag Allowed: Yes Tag: LootGroups Tag Format: [LootGroups:Value] Description: This tag allows you to specify one or more Loot Profile Groups that will be applied to the grid. Allowed Values: Any Loot Profile Group SubtypeId Default Value(s): none Multiple Tag Allowed: Yes","title":"Inventory"},{"location":"Manipulation/#paint-and-skins","text":"Tag: ShiftBlockColorsHue Tag Format: [ShiftBlockColorsHue:Value] Description: This tag allows you to specify if the blocks on a grid should have their block color Hue shifted, to change its color. Can be set to random or an assigned value below. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RandomHueShift Tag Format: [RandomHueShift:Value] Description: This tag allows you to specify if a random Hue value should be used when ShiftBlockColorsHue is enabled. If this property is set to true , ShiftBlockColorAmount will be ignored. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ShiftBlockColorAmount Tag Format: [ShiftBlockColorAmount:Value] Description: This tag allows you to specify the amount of Hue that block colors are shifted by. Allowed Values: Any Number Between -360 and 360 Default Value(s): 0 Multiple Tag Allowed: No Tag: AssignGridSkin Tag Format: [AssignGridSkin:Value1,Value2,Value3,etc] Description: This tag allows you to specify one or more Armor Skin IDs to be used to reskin the entire grid. If more than 1 is provided, then a random skin from the provided values is used. Allowed Values: Armor Skin SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: RecolorGrid Tag Format: [RecolorGrid:Value] Description: This tag allows you to specify if the grid should be recolored and/or reskinned based on the values you provide in the next two tags.. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RecolorOld Tag Format: [RecolorOld:Value] Description: This tag allows you to specify a block color on a grid that will be replaced with another color if RecolorGrid is enabled. If using this tag, you must also provide a RecolorNew tag that specifies the color that replaces the color in this tag. Allowed Values: ColorMaskHSV in Below Format: {X:0 Y:0 Z:0} Default Value(s): none Multiple Tag Allowed: Yes Tag: RecolorNew Tag Format: [RecolorNew:Value] Description: This tag allows you to specify a block color that will replace another specified color RecolorGrid is enabled. If using this tag, you must also provide a RecolorOld tag that specifies the color that will be replaced. Allowed Values: ColorMaskHSV in Below Format: {X:0 Y:0 Z:0} Default Value(s): none Multiple Tag Allowed: Yes Tag: ReskinTarget Tag Format: [ReskinTarget:Value] Description: This tag allows you to specify a block color on a grid that will be re-skinned if RecolorGrid is enabled. If using this tag, you must also provide a ReskinTexture tag that specifies the skin name that is applied to blocks with the color in this tag. Allowed Values: ColorMaskHSV in Below Format: {X:0 Y:0 Z:0} Default Value(s): none Multiple Tag Allowed: Yes Tag: ReskinTexture Tag Format: [ReskinTexture:Value] Description: This tag allows you to specify a skin name that will be applied to blocks of a specified color if RecolorGrid is enabled. If using this tag, you must also provide a ReskinTarget tag that specifies the color of blocks that will be re-skinned. Allowed Values: Any Block Skin Name Default Value(s): none Multiple Tag Allowed: Yes Tag: SkinRandomBlocks Tag Format: [SkinRandomBlocks:Value] Description: This tag allows you to specify if the grid should have a random selection of blocks reskinned with a selection of Armor Skins defined in the SkinRandomBlocksTextures tags. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SkinRandomBlocksTextures Tag Format: [SkinRandomBlocksTextures:Value] Description: This tag allows you to specify one or more Armor Skin SubtypeIds that will be used to skin a random selection of blocks. The skins provided to this tag are selected at random. Allowed Values: Valid Armor Skin SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: MinPercentageSkinRandomBlocks Tag Format: [MinPercentageSkinRandomBlocks:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if SkinRandomBlocks is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Lower than MaxPercentageSkinRandomBlocks value Default Value(s): 10 Multiple Tag Allowed: No Tag: MaxPercentageSkinRandomBlocks Tag Format: [MaxPercentageSkinRandomBlocks:Value] Description: This tag allows you to specify the minimum amount of blocks that should be affected by percentage if SkinRandomBlocks is enabled. Allowed Values: Any Number Equal or Greater Than 0 Value should be Higher than MinPercentageSkinRandomBlocks value Default Value(s): 40 Multiple Tag Allowed: No","title":"Paint-and-Skins"},{"location":"Manipulation/#profiles","text":"Tag: UseGridDereliction Tag Format: [UseGridDereliction:Value] Description: This tag allows you to specify whether or not Grid Dereliction Profiles should be applied to a prefab. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: DerelictionProfiles Tag Format: [DerelictionProfiles:Value] Description: This tag allows you to specify one or more Dereliction Profile SubtypeIds that will be used to adjust the build states of various blocks on the prefabs in the SpawnGroup. Allowed Values: Valid Dereliction Profile SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes","title":"Profiles"},{"location":"Manipulation/#propulsion","text":"Tag: ConfigureSpecialNpcThrusters Tag Format: [ConfigureSpecialNpcThrusters:Value] Description: This tag allows you to specify if special NPC thrusters (added to prefab via the spawner built-in block replacement profiles) should be configured with extra parameters. Please note you must ensure that the NPC Thrusters are added to your grid either by Block Replacement or manually, since this tag does not add them automatically. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RestrictNpcIonThrust Tag Format: [RestrictNpcIonThrust:Value] Description: This tag allows you to specify if NPC Ion Thrusters (added via built-in block replacement) should be disabled if the grid is owned by a player identity if the ConfigureSpecialNpcThrusters tag is used. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcIonThrustForceMultiply Tag Format: [NpcIonThrustForceMultiply:Value] Description: This tag allows you to specify the Force Multiplier of NPC Ion Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double force, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: NpcIonThrustPowerMultiply Tag Format: [NpcIonThrustPowerMultiply:Value] Description: This tag allows you to specify the Power Multiplier of NPC Ion Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double required power, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: RestrictNpcAtmoThrust Tag Format: [RestrictNpcAtmoThrust:Value] Description: This tag allows you to specify if NPC Atmospheric Thrusters (added via built-in block replacement) should be disabled if the grid is owned by a player identity if the ConfigureSpecialNpcThrusters tag is used. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcAtmoThrustForceMultiply Tag Format: [NpcAtmoThrustForceMultiply:Value] Description: This tag allows you to specify the Force Multiplier of NPC Atmospheric Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double force, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: NpcAtmoThrustPowerMultiply Tag Format: [NpcAtmoThrustPowerMultiply:Value] Description: This tag allows you to specify the Power Multiplier of NPC Atmospheric Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double required power, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: RestrictNpcHydroThrust Tag Format: [RestrictNpcHydroThrust:Value] Description: This tag allows you to specify if NPC Hydrogen Thrusters (added via built-in block replacement) should be disabled if the grid is owned by a player identity if the ConfigureSpecialNpcThrusters tag is used. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcHydroThrustForceMultiply Tag Format: [NpcHydroThrustForceMultiply:Value] Description: This tag allows you to specify the Force Multiplier of NPC Hydrogen Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double force, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: NpcHydroThrustPowerMultiply Tag Format: [NpcHydroThrustPowerMultiply:Value] Description: This tag allows you to specify the Power Multiplier of NPC Hydrogen Thrusters (added via built-in block replacement) if the ConfigureSpecialNpcThrusters tag is used. Eg: '2' would double required power, while 0.5 would cut it in half. Allowed Values: Any Number Equal or Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No Tag: SetNpcGyroscopeMultiplier Tag Format: [SetNpcGyroscopeMultiplier:Value] Description: This tag allows you to specify if Gyroscopes on the NPC Grid should have a custom force multiplier applied to them. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NpcGyroscopeMultiplier Tag Format: [NpcGyroscopeMultiplier:Value] Description: This tag allows you to specify the force multipler that is applied to Gyroscopes if using the SetNpcGyroscopeMultiplier tag. Allowed Values: Any Number Greater Than 0 Default Value(s): 1 Multiple Tag Allowed: No","title":"Propulsion"},{"location":"Manipulation/#renaming","text":"Tag: UseRandomNameGenerator Tag Format: [UseRandomNameGenerator:Value] Description: This tag will allow you to utilize the Random Name Generator built into the Spawner for your SpawnGroup. Keep in mind that this will affect all prefabs in your SpawnGroup, and they may all have different naming as a result. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RandomGridNamePrefix Tag Format: [RandomGridNamePrefix:Value] Description: This tag allows you to specify a prefix that is added to the beginning of the grid name, mostly to identify your grid after it's been renamed (eg, (NPC-CPC) , etc ). Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: RandomGridNamePattern Tag Format: [RandomGridNamePattern:Value] Description: This tag allows you to specify a pattern that the Random Name Generator should follow. Please click here for a guide to these patterns . Allowed Values: Any Grid Name Pattern Default Value(s): none Multiple Tag Allowed: No Tag: ReplaceAntennaNameWithRandomizedName Tag Format: [ReplaceAntennaNameWithRandomizedName:Value] Description: This tag gives you the option to replace the Block Name of an antenna with the newly generated Random Name (without the Prefix, if specified). Value is replaced with the name of the Antenna Block you want to change. Allowed Values: Existing Antenna Block Name Default Value(s): none Multiple Tag Allowed: No Tag: UseBlockNameReplacer Tag Format: [UseBlockNameReplacer:Value] Description: This tag allows you to enable whether or not block names should be replaced with the reference specified in the BlockNameReplacerReference tag. Allowed Values: true false Default Value(s): none Multiple Tag Allowed: No Tag: ReplaceBlockNameOld Tag Format: [ReplaceBlockNameOld:Value] Description: This tag allows you to specify the name of block(s) that will be renamed to something else if UseBlockNameReplacer is enabled. If using this tag, you must also provide a ReplaceBlockNameNew tag that specifies the new name the block(s) will use Allowed Values: Any Block Name Default Value(s): none Multiple Tag Allowed: Yes Tag: ReplaceBlockNameNew Tag Format: [ReplaceBlockNameNew:Value] Description: This tag allows you to specify the name that block(s) will be renamed to if UseBlockNameReplacer is enabled. If using this tag, you must also provide a ReplaceBlockNameOld tag that specifies the name of block(s) that will be renamed. Allowed Values: Any Block Name Default Value(s): none Multiple Tag Allowed: Yes Tag: ProcessBlocksForCustomGridName Tag Format: [ProcessBlocksForCustomGridName:Value] Description: This tag allows you to specify if the blocks on the grid should be scanned for {GridName} in their name and have it replaced with the randomized name generated if using UseRandomNameGenerator . Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No","title":"Renaming"},{"location":"Manipulation/#rivalai","text":"Tag: UseRivalAi Tag Format: [UseRivalAi:Value] Description: This tag allows you to specify if a RivalAI Behavior Profile should be used in the prefabs included in your SpawnGroup. With this tag being set to true , the spawner will look for a RivalAI Behavior with a SubtypeId matching what was provided in the Prefab <Behaviour> tags, and will automatically add it to a valid RivalAI Remote Control block. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RivalAiReplaceRemoteControl Tag Format: [RivalAiReplaceRemoteControl:Value] Description: This tag allows you to specify if the first valid Vanilla Remote Control block in each Prefab should be replaced with a RivalAI Remote Control. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ApplyBehaviorToNamedBlock Tag Format: [ApplyBehaviorToNamedBlock:Value] Description: This tag allows you to specify the specific block name of a Remote Control block that you want to have used/replaced with a RivalAI control block. Allowed Values: Any Remote Control Block Name Default Value(s): none Multiple Tag Allowed: No Tag: ConvertAllRemoteControlBlocks Tag Format: [ConvertAllRemoteControlBlocks:Value] Description: This tag allows you to specify if all remote control blocks should be converted to RivalAI control blocks. Only the first or primary (or named, if you use the option above) block will receive the behavior specified in your prefab, other blocks will need to use RivalAI Trigger/Action to assign behaviors to them. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"RivalAI"},{"location":"Manipulation/#shields","text":"Tag: AddDefenseShieldBlocks Tag Format: [AddDefenseShieldBlocks:Value] Description: This tag let's you add Defense Shield Blocks to the prefabs if the Defense Shields mod is loaded. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreShieldProviderMod Tag Format: [IgnoreShieldProviderMod:Value] Description: This tag let's you lets you specify if the grid should not receive Defense Shields if the NPC Defense Shields Provider Mod or the EnableGlobalNPCShieldProvider config option is enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Shields"},{"location":"Manipulation/#turrets","text":"Tag: ChangeTurretSettings Tag Format: [ChangeTurretSettings:Value] Description: This tag allows you to specify if turret settings should be set by the following SpawnGroup settings. Please note if you decide to use this setting, you should specify each setting listed below in your tags so default spawner values don't interfere with your intended settings. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: TurretRange Tag Format: [TurretRange:Value] Description: This tag allows you to specify the range of all turrets. If value is higher than allowed range, it will use the max range of that turret. Allowed Values: Any Number Greater Than 0 Default Value(s): 800 Multiple Tag Allowed: No Tag: TurretIdleRotation Tag Format: [TurretIdleRotation:Value] Description: This tag allows you to specify if turret idle rotation should be enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: TurretTargetMeteors Tag Format: [TurretTargetMeteors:Value] Description: This tag allows you to specify if turrets targeting meteors should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetMissiles Tag Format: [TurretTargetMissiles:Value] Description: This tag allows you to specify if turrets targeting missiles should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetCharacters Tag Format: [TurretTargetCharacters:Value] Description: This tag allows you to specify if turrets targeting characters should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetSmallGrids Tag Format: [TurretTargetSmallGrids:Value] Description: This tag allows you to specify if turrets targeting small grids should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetLargeGrids Tag Format: [TurretTargetLargeGrids:Value] Description: This tag allows you to specify if turrets targeting large grids should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetStations Tag Format: [TurretTargetStations:Value] Description: This tag allows you to specify if turrets targeting static grids should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: TurretTargetNeutrals Tag Format: [TurretTargetNeutrals:Value] Description: This tag allows you to specify if turrets targeting neutrals should be enabled. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No","title":"Turrets"},{"location":"Manipulation/#weapon-randomization","text":"Tag: RandomizeWeapons Tag Format: [RandomizeWeapons:Value] Description: This tag specifies if the prefabs in a SpawnGroup should have their weapons randomized (similar behavior to the NPC Weapon Upgrades mod). If set to true , then the behavior provided by the ReplenishSystems tag will be applied as well. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreWeaponRandomizerMod Tag Format: [IgnoreWeaponRandomizerMod:Value] Description: This tag allows you to control whether or not a SpawnGroup will have randomized weapons if the NPC Weapons Upgrade mod is enabled. If set to true , your SpawnGroup will not have its weapons randomized (unless you've also enabled the RandomizeWeapons option). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: WeaponRandomizerBlacklist Tag Format: [WeaponRandomizerBlacklist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will not be used in Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: WeaponRandomizerWhitelist Tag Format: [WeaponRandomizerWhitelist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will only be used in Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: IgnoreWeaponRandomizerTargetGlobalBlacklist Tag Format: [IgnoreWeaponRandomizerTargetGlobalBlacklist:Value] Description: If set to true , this will allow your SpawnGroup to ignore the Global Weapon Randomizer Target Blacklist (ie, which weapons are not allowed to be replaced) when Weapon Randomization is enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreWeaponRandomizerTargetGlobalWhitelist Tag Format: [IgnoreWeaponRandomizerTargetGlobalWhitelist:Value] Description: If set to true , this will allow your SpawnGroup to ignore the Global Weapon Randomizer Target Whitelist (ie, which weapons are only allowed to be replaced) when Weapon Randomization is enabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: WeaponRandomizerTargetBlacklist Tag Format: [WeaponRandomizerTargetBlacklist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will not be replaced with Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: WeaponRandomizerTargetWhitelist Tag Format: [WeaponRandomizerTargetWhitelist:Value1,Value2,Value3,etc] Description: This tag allows you to specify weapons that will only be replaced with Weapon Randomization for your SpawnGroup. Weapons are identified by their MyDefintionId or Steam Workshop Mod ID . A MyDefinitionId uses the following TypeId/SubtypeId format - eg: MyObjectBuilder_SmallMissileLauncher/LargeMissileLauncher . Allowed Values: MyDefinitionId or Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No","title":"Weapon-Randomization"},{"location":"Mod-Difficulty-Chart/","text":"Mod-Difficulty-Chart.md This page explains the difficulty rating system that some NPC encounter mods utilizing MES may include in their mod-page descriptions. Rating Title Description \u2605\u2606\u2606\u2606\u2606 No Challenge Encounters Are Not Hostile \u2605\u2605\u2606\u2606\u2606 Minimal Encounters are passively hostile, will only use turrets if you get close \u2605\u2605\u2605\u2606\u2606 Average Encounters will likely not engage players unless provoked or approached \u2605\u2605\u2605\u2605\u2606 Hostile Encounters will seek players and attack when conditions are met (visibility, signals, etc) \u2605\u2605\u2605\u2605\u2605 Nightmare Encounters are aware of all targets in the area and will relentlessly attack If you are an NPC modder and you'd like to use this rating system for your own encounters, simply copy one of the following blocks of code and paste it into your mod page description in steam: No Challenge: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2606\u2606\u2606\u2606[b] - No Challenge[/b][/url] Minimal: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2606\u2606\u2606[b] - Minimal[/b][/url] Average: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2605\u2606\u2606[b] - Average[/b][/url] Hostile: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2605\u2605\u2606[b] - Hostile[/b][/url] Nightmare: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2605\u2605\u2605[b] - Nightmare[/b][/url]","title":"Mod-Difficulty-Chart.md"},{"location":"Mod-Difficulty-Chart/#mod-difficulty-chartmd","text":"This page explains the difficulty rating system that some NPC encounter mods utilizing MES may include in their mod-page descriptions. Rating Title Description \u2605\u2606\u2606\u2606\u2606 No Challenge Encounters Are Not Hostile \u2605\u2605\u2606\u2606\u2606 Minimal Encounters are passively hostile, will only use turrets if you get close \u2605\u2605\u2605\u2606\u2606 Average Encounters will likely not engage players unless provoked or approached \u2605\u2605\u2605\u2605\u2606 Hostile Encounters will seek players and attack when conditions are met (visibility, signals, etc) \u2605\u2605\u2605\u2605\u2605 Nightmare Encounters are aware of all targets in the area and will relentlessly attack If you are an NPC modder and you'd like to use this rating system for your own encounters, simply copy one of the following blocks of code and paste it into your mod page description in steam: No Challenge: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2606\u2606\u2606\u2606[b] - No Challenge[/b][/url] Minimal: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2606\u2606\u2606[b] - Minimal[/b][/url] Average: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2605\u2606\u2606[b] - Average[/b][/url] Hostile: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2605\u2605\u2606[b] - Hostile[/b][/url] Nightmare: [url=https://github.com/MeridiusIX/Modular-Encounters-Systems/wiki/Mod-Difficulty-Chart][b]Encounter Difficulty - [/b]\u2605\u2605\u2605\u2605\u2605[b] - Nightmare[/b][/url]","title":"Mod-Difficulty-Chart.md"},{"location":"Mod-Republishing-and-Reuse/","text":"Mod-Republishing-and-Reuse.md Here are my rules regarding republishing mods that I have authored: 1. Check The Mod Page Description For Restrictions: Some of my mods I do not allow to be republished at all, and I will indicate this on the mod page. Modular Encounters Systems is a good example of a mod I do not allow republishing of - it has a lot of moving parts and other mods rely on it specifically published at its mod ID for cross-communication. 2. Remove My Thumbnail Designs: Please do not reuse my thumbnails. I rely on my mod thumbnails to identify my mods as part of my own collection(s), so having other people use the same thumbnails could confuse other users. Adding additional text / images to my existing thumbnails is also frowned upon. 3. Change The Mod Title and Description: Do not use the exact same Mod Title or Description as my mod. Make it clear to users that your version of the mod is a copy and link back to the original mod you copied as credit. 4. Mods Using Scripts: If you wish to republish a mod of mine that uses any C# Mod Scripts, you MUST know how to edit the script namespaces and class names to something different than what I have used. That way if there is an issue with YOUR version of the mod, people are not going to get confused and assume its MY mod causing the issue (this has happened before). If you are incapable of doing this, you do not have permission to use my mod script(s) 5. Mods For Servers: If the republished mod is only intended for use on a server and not the general public, please use the recently introduced Unlisted visibility option in steam. This will allow your mod to still be used for servers, but will not appear in the general search results in steam. 6. Get Permission From Other Authors of Mod: I often collaborate with other users when it comes to assets in mods. This can include NPC Ships/Stations, Models, Scripts, and more. If the mod has other contributors listed, you must obtain permission from them as well. If they do not consent to their assets being used in a republished copy of the mod, you may not include them. 7. Using Parts Of My Mods in Another Mod: The rules above apply for this as well. If the rules above are not respected, then I reserve the right to file a DMCA Takedown against any offending mod that is using my assets. There has been some misinformation in the past about whether modders surrender the rights to their work once published to the workshop. According to both Valve and KeenSWH, this is absolutely UNTRUE . Modders retain copyright and ownership of their work, and thus can control if / when / where / how it is used. Please see the following below: KeenSWH on Mod Republishing Valve on Using Mod Content The rules above are subject to change at any time.","title":"Mod-Republishing-and-Reuse.md"},{"location":"Mod-Republishing-and-Reuse/#mod-republishing-and-reusemd","text":"Here are my rules regarding republishing mods that I have authored: 1. Check The Mod Page Description For Restrictions: Some of my mods I do not allow to be republished at all, and I will indicate this on the mod page. Modular Encounters Systems is a good example of a mod I do not allow republishing of - it has a lot of moving parts and other mods rely on it specifically published at its mod ID for cross-communication. 2. Remove My Thumbnail Designs: Please do not reuse my thumbnails. I rely on my mod thumbnails to identify my mods as part of my own collection(s), so having other people use the same thumbnails could confuse other users. Adding additional text / images to my existing thumbnails is also frowned upon. 3. Change The Mod Title and Description: Do not use the exact same Mod Title or Description as my mod. Make it clear to users that your version of the mod is a copy and link back to the original mod you copied as credit. 4. Mods Using Scripts: If you wish to republish a mod of mine that uses any C# Mod Scripts, you MUST know how to edit the script namespaces and class names to something different than what I have used. That way if there is an issue with YOUR version of the mod, people are not going to get confused and assume its MY mod causing the issue (this has happened before). If you are incapable of doing this, you do not have permission to use my mod script(s) 5. Mods For Servers: If the republished mod is only intended for use on a server and not the general public, please use the recently introduced Unlisted visibility option in steam. This will allow your mod to still be used for servers, but will not appear in the general search results in steam. 6. Get Permission From Other Authors of Mod: I often collaborate with other users when it comes to assets in mods. This can include NPC Ships/Stations, Models, Scripts, and more. If the mod has other contributors listed, you must obtain permission from them as well. If they do not consent to their assets being used in a republished copy of the mod, you may not include them. 7. Using Parts Of My Mods in Another Mod: The rules above apply for this as well. If the rules above are not respected, then I reserve the right to file a DMCA Takedown against any offending mod that is using my assets. There has been some misinformation in the past about whether modders surrender the rights to their work once published to the workshop. According to both Valve and KeenSWH, this is absolutely UNTRUE . Modders retain copyright and ownership of their work, and thus can control if / when / where / how it is used. Please see the following below: KeenSWH on Mod Republishing Valve on Using Mod Content The rules above are subject to change at any time.","title":"Mod-Republishing-and-Reuse.md"},{"location":"Page-Under-Construction/","text":"Page-Under-Construction.md Soon\u2122","title":"Page-Under-Construction.md"},{"location":"Page-Under-Construction/#page-under-constructionmd","text":"Soon\u2122","title":"Page-Under-Construction.md"},{"location":"Player-Condition-Profile/","text":"Player-Condition-Profile.md On it self it doesn't do anything, check where it is being referenced below. For most cases, it loops through all the players and for each player it checks if the player passes all conditions, if that is the case the action, chat, spawncondition will only activate for that player. Handy for MP situations. Player Tags You can add Tags to certain players, what can be added by Behavior Actions and Event Actions , and be used as an extra condition for this condition profile. Examples on what you can make: -Player attacks a factions ship -> Player gets tag (\"Attacked_GC_recently\") -> Retribution Spawngroup becomes eligible only for that player -Make an Event that checks which SpawnOption the player chooses. -> What happens: Player chooses SpawnoptionA -> Event will trigger that activates some chat message -> using PlayerCondition again the message will only be visible for the player -Some custom behaviour/chat messages from NPC based which tags player have. Referenced by: Event Conditions Event Actions Behavior Actions Chat Profiles SpawnConditions Here's an example of how a Player Condition Profile definition is setup: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>PlayerConditionProfile-AHESpecialMessage</SubtypeId> </Id> <Description> [MES Player Condition] [CheckPlayerReputation:true] [CheckReputationwithFaction:AHE] [MinPlayerReputation:500] [MaxPlayerReputation:1500] [CheckPlayerTags:true] [IncludedPlayerTag:RecentyAttackedGCVessel] </Description> </EntityComponent> Tag: AllowOverrides Tag Format: [AllowOverrides:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AllPlayersMatchThisCondition Tag Format: [AllPlayersMatchThisCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseAnyPassingCondition Tag Format: [UseAnyPassingCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckPlayerReputation Tag Format: [CheckPlayerReputation:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckReputationwithFaction Tag Format: [CheckReputationwithFaction:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: MinPlayerReputation Tag Format: [MinPlayerReputation:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes Tag: MaxPlayerReputation Tag Format: [MaxPlayerReputation:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes Tag: CheckLastRespawnShipName Tag Format: [CheckLastRespawnShipName:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: LastRespawnShipName Tag Format: [LastRespawnShipName:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: no Tag: CheckPlayerTags Tag Format: [CheckPlayerTags:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: IncludedPlayerTag Tag Format: [IncludedPlayerTag:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ExcludedPlayerTag Tag Format: [ExcludedPlayerTag:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CheckPlayerNear Tag Format: [CheckPlayerNear:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerNearCoords Tag Format: [PlayerNearCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: no Tag: PlayerNearDistanceFromCoords Tag Format: [PlayerNearDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: PlayerNearMinDistanceFromCoords Tag Format: [PlayerNearMinDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no","title":"Player-Condition-Profile.md"},{"location":"Player-Condition-Profile/#player-condition-profilemd","text":"On it self it doesn't do anything, check where it is being referenced below. For most cases, it loops through all the players and for each player it checks if the player passes all conditions, if that is the case the action, chat, spawncondition will only activate for that player. Handy for MP situations.","title":"Player-Condition-Profile.md"},{"location":"Player-Condition-Profile/#player-tags","text":"You can add Tags to certain players, what can be added by Behavior Actions and Event Actions , and be used as an extra condition for this condition profile. Examples on what you can make: -Player attacks a factions ship -> Player gets tag (\"Attacked_GC_recently\") -> Retribution Spawngroup becomes eligible only for that player -Make an Event that checks which SpawnOption the player chooses. -> What happens: Player chooses SpawnoptionA -> Event will trigger that activates some chat message -> using PlayerCondition again the message will only be visible for the player -Some custom behaviour/chat messages from NPC based which tags player have.","title":"Player Tags"},{"location":"Player-Condition-Profile/#referenced-by","text":"Event Conditions Event Actions Behavior Actions Chat Profiles SpawnConditions Here's an example of how a Player Condition Profile definition is setup: <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>PlayerConditionProfile-AHESpecialMessage</SubtypeId> </Id> <Description> [MES Player Condition] [CheckPlayerReputation:true] [CheckReputationwithFaction:AHE] [MinPlayerReputation:500] [MaxPlayerReputation:1500] [CheckPlayerTags:true] [IncludedPlayerTag:RecentyAttackedGCVessel] </Description> </EntityComponent> Tag: AllowOverrides Tag Format: [AllowOverrides:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: AllPlayersMatchThisCondition Tag Format: [AllPlayersMatchThisCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: UseAnyPassingCondition Tag Format: [UseAnyPassingCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckPlayerReputation Tag Format: [CheckPlayerReputation:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: CheckReputationwithFaction Tag Format: [CheckReputationwithFaction:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: MinPlayerReputation Tag Format: [MinPlayerReputation:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes Tag: MaxPlayerReputation Tag Format: [MaxPlayerReputation:Value] Description: nan Allowed Values: Any interger Multiple Tag Allowed: yes Tag: CheckLastRespawnShipName Tag Format: [CheckLastRespawnShipName:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: LastRespawnShipName Tag Format: [LastRespawnShipName:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: no Tag: CheckPlayerTags Tag Format: [CheckPlayerTags:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: IncludedPlayerTag Tag Format: [IncludedPlayerTag:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: ExcludedPlayerTag Tag Format: [ExcludedPlayerTag:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: CheckPlayerNear Tag Format: [CheckPlayerNear:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerNearCoords Tag Format: [PlayerNearCoords:Value] Description: nan Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} . Multiple Tag Allowed: no Tag: PlayerNearDistanceFromCoords Tag Format: [PlayerNearDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: PlayerNearMinDistanceFromCoords Tag Format: [PlayerNearMinDistanceFromCoords:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no","title":"Referenced by:"},{"location":"Prefab-Data/","text":"Prefab-Data.md Prefab Data profiles allow you to setup rules that are applied directly to specified prefabs, regardless of what SpawnGroups they're attached to. The benefit of this is that you can setup consistent modifications to prefabs that you may use in multiple SpawnGroups. Because these profiles are not attached to specific SpawnGroups, you do not need to attach them to a SpawnGroup, Spawn Condition, etc. Below is an example of what a Prefab Data Profile looks like: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-PrefabData-Example</SubtypeId> </Id> <Description> [MES Prefab Data] [Prefabs:ExampleDroneA] [Prefabs:ExampleDroneB] [ManipulationProfiles:ExampleDroneManipulationProfile] </Description> </EntityComponent> </EntityComponents> </Definitions> Below you can find all the tags that can be used in your Prefab Data Profile: Tag: Prefabs Tag Format: [Prefabs:Value] Description: This tag allows you to specify one or more Prefab SubtypeIds that will be processed by the rules in this profile during spawning. Allowed Value(s): Any Prefab SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: CustomTags Tag Format: [CustomTags:Value] Description: This tag allows you to specify one or more Custom Tags that will be added to the prefab. These are string values you can apply to your prefabs so other manipulation profiles can be allowed / restricted. Example: Add a Miner tag to a prefab and a manipulation profile that adds Ore related inventory can check for that tag and add it if found. Allowed Value(s): Any String Value Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ManipulationProfiles Tag Format: [ManipulationProfiles:Value] Description: This tag allows you to specify one or more Manipulation Profiles that are applied to each prefab in this profile. Allowed Value(s): Any Manipulation Profile SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ManipulationGroups Tag Format: [ManipulationGroups:Value] Description: This tag allows you to specify one or more Manipulation Profile Groups that are applied to each prefab in this profile. Allowed Value(s): Any Manipulation Profile Group SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes","title":"Prefab-Data.md"},{"location":"Prefab-Data/#prefab-datamd","text":"Prefab Data profiles allow you to setup rules that are applied directly to specified prefabs, regardless of what SpawnGroups they're attached to. The benefit of this is that you can setup consistent modifications to prefabs that you may use in multiple SpawnGroups. Because these profiles are not attached to specific SpawnGroups, you do not need to attach them to a SpawnGroup, Spawn Condition, etc. Below is an example of what a Prefab Data Profile looks like: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-PrefabData-Example</SubtypeId> </Id> <Description> [MES Prefab Data] [Prefabs:ExampleDroneA] [Prefabs:ExampleDroneB] [ManipulationProfiles:ExampleDroneManipulationProfile] </Description> </EntityComponent> </EntityComponents> </Definitions> Below you can find all the tags that can be used in your Prefab Data Profile: Tag: Prefabs Tag Format: [Prefabs:Value] Description: This tag allows you to specify one or more Prefab SubtypeIds that will be processed by the rules in this profile during spawning. Allowed Value(s): Any Prefab SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: CustomTags Tag Format: [CustomTags:Value] Description: This tag allows you to specify one or more Custom Tags that will be added to the prefab. These are string values you can apply to your prefabs so other manipulation profiles can be allowed / restricted. Example: Add a Miner tag to a prefab and a manipulation profile that adds Ore related inventory can check for that tag and add it if found. Allowed Value(s): Any String Value Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ManipulationProfiles Tag Format: [ManipulationProfiles:Value] Description: This tag allows you to specify one or more Manipulation Profiles that are applied to each prefab in this profile. Allowed Value(s): Any Manipulation Profile SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Tag: ManipulationGroups Tag Format: [ManipulationGroups:Value] Description: This tag allows you to specify one or more Manipulation Profile Groups that are applied to each prefab in this profile. Allowed Value(s): Any Manipulation Profile Group SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes","title":"Prefab-Data.md"},{"location":"Replenishment/","text":"Replenishment.md Replenishment profiles in the Modular Encounter Systems mod allow you to define rules for how grids inventories will be treated while using the [ReplenishSystems:true] tag in your SpawnGroups. With these profiles, you can define limits for certain item types to prevent overfilling of resources like fuel or ammo. Here is an example of how a Replenishment Profile is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleReplenishment</SubtypeId> </Id> <Description> [MES Replenishment] [RestrictedItems:MyObjectBuilder_AmmoMagazine/NATO_5p56x45mm] [MaxItemId:MyObjectBuilder_AmmoMagazine/RapidFireAutomaticRifleGun_Mag_50rd] [MaxItemAmount:50] </Description> </EntityComponent> </EntityComponents> </Definitions> The above would restrict the old ammo magazine interior turrets used and limit the newer magazines to only 50 magazines per turret. To add a Replenishment profile to your SpawnGroup, include the tag: [ReplenishProfiles:MES-ExampleReplenishment] in the SpawnGroup itself. You can also include multiple instances of Replenishment profiles as well. Below you can find all the tags that can be used in your Replenishment Profile: Tag: RestrictedItems Tag Format: [RestrictedItems:Value] Description: This tag specifies DefinitionIds of items that will not be used to replenish any inventories. Allowed Values: Any item MyDefinitionId eg: MyObjectBuilder_AmmoMagazine/NATO_5p56x45mm Multiple Tag Allowed: Yes Tag: MaxItemId Tag Format: [MaxItemId:Value] Description: This tag specifies DefinitionIds of items that will have a maximum amount added to inventories (this is not a minimum). Each instance of this tag should be paired with a MaxItemAmount tag. Allowed Values: Any item MyDefinitionId eg: MyObjectBuilder_AmmoMagazine/NATO_5p56x45mm Multiple Tag Allowed: Yes Tag: MaxItemAmount Tag Format: [MaxItemAmount:Value] Description: This tag specifies the maximum amount of an item that can be added to an inventory. Each instance of this tag should be paired with a MaxItemId tag. Allowed Values: Any Integer Greater or Equal to 0 Multiple Tag Allowed: Yes","title":"Replenishment.md"},{"location":"Replenishment/#replenishmentmd","text":"Replenishment profiles in the Modular Encounter Systems mod allow you to define rules for how grids inventories will be treated while using the [ReplenishSystems:true] tag in your SpawnGroups. With these profiles, you can define limits for certain item types to prevent overfilling of resources like fuel or ammo. Here is an example of how a Replenishment Profile is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleReplenishment</SubtypeId> </Id> <Description> [MES Replenishment] [RestrictedItems:MyObjectBuilder_AmmoMagazine/NATO_5p56x45mm] [MaxItemId:MyObjectBuilder_AmmoMagazine/RapidFireAutomaticRifleGun_Mag_50rd] [MaxItemAmount:50] </Description> </EntityComponent> </EntityComponents> </Definitions> The above would restrict the old ammo magazine interior turrets used and limit the newer magazines to only 50 magazines per turret. To add a Replenishment profile to your SpawnGroup, include the tag: [ReplenishProfiles:MES-ExampleReplenishment] in the SpawnGroup itself. You can also include multiple instances of Replenishment profiles as well. Below you can find all the tags that can be used in your Replenishment Profile: Tag: RestrictedItems Tag Format: [RestrictedItems:Value] Description: This tag specifies DefinitionIds of items that will not be used to replenish any inventories. Allowed Values: Any item MyDefinitionId eg: MyObjectBuilder_AmmoMagazine/NATO_5p56x45mm Multiple Tag Allowed: Yes Tag: MaxItemId Tag Format: [MaxItemId:Value] Description: This tag specifies DefinitionIds of items that will have a maximum amount added to inventories (this is not a minimum). Each instance of this tag should be paired with a MaxItemAmount tag. Allowed Values: Any item MyDefinitionId eg: MyObjectBuilder_AmmoMagazine/NATO_5p56x45mm Multiple Tag Allowed: Yes Tag: MaxItemAmount Tag Format: [MaxItemAmount:Value] Description: This tag specifies the maximum amount of an item that can be added to an inventory. Each instance of this tag should be paired with a MaxItemId tag. Allowed Values: Any Integer Greater or Equal to 0 Multiple Tag Allowed: Yes","title":"Replenishment.md"},{"location":"Scripting-API/","text":"Scripting-API.md Modular Encounters Systems includes a Scripting API that can be used to trigger spawn events, manipulate known player locations, interact with behavior trigger/actions, and more! To use the API, you will need to download the MESApi.cs file, and add it to your own mod. Once you have copied it, change the namespace to match the namespace of your own mod. To initialize the API, simply create the API object in the LoadData() method of your SessionComponent. This should only be done on the Server Session. Running the API on a non-server client will not work. Example: public override void LoadData(){ SpawnerAPI = new MESApi(); } The API should be ready to use after the BeforeStart() SessionComponent method has run. After you have initialized the API, you can check MESApiReady to ensure it has loaded correctly. The MESApi.cs file has comments and documentation accompanying all methods, explaining their use and utility.","title":"Scripting-API.md"},{"location":"Scripting-API/#scripting-apimd","text":"Modular Encounters Systems includes a Scripting API that can be used to trigger spawn events, manipulate known player locations, interact with behavior trigger/actions, and more! To use the API, you will need to download the MESApi.cs file, and add it to your own mod. Once you have copied it, change the namespace to match the namespace of your own mod. To initialize the API, simply create the API object in the LoadData() method of your SessionComponent. This should only be done on the Server Session. Running the API on a non-server client will not work. Example: public override void LoadData(){ SpawnerAPI = new MESApi(); } The API should be ready to use after the BeforeStart() SessionComponent method has run. After you have initialized the API, you can check MESApiReady to ensure it has loaded correctly. The MESApi.cs file has comments and documentation accompanying all methods, explaining their use and utility.","title":"Scripting-API.md"},{"location":"Spawn-Conditions-Groups/","text":"Spawn-Conditions-Groups.md Spawn Conditions Group Profiles in Modular Encounters Systems are used to group together multiple Spawn Conditions names so they can easily be applied to SpawnGroups that use those conditions often (reducing visual clutter and copy/paste activity). You can attach your Spawn Conditions Group Profiles to any SpawnGroup by adding a [SpawnConditionGroups:Value] tag to the SpawnGroup and replace Value with the SubtypeId of your Spawn Conditions Group Profile. Example: [SpawnConditionGroups:MES-ExampleSpawnConditionGroupsProfile] Multiple Spawn Conditions Group Profiles can be attached to a single SpawnGroup as well, just include additional [SpawnConditionGroups:Value] lines in your SpawnGroup Profile. It is important that you use a unique SubtypeId for each Spawn Conditions Group Profile you create, otherwise they may not work correctly. Here is an example of how a Spawn Conditions Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleSpawnConditionGroupsProfile</SubtypeId> </Id> <Description> [MES Spawn Conditions Group] [SpawnConditionProfiles:SomeSpawnConditionProfileId] [SpawnConditionProfiles:AnotherSpawnConditionProfileId] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Spawn Conditions Group Profiles. Tag: SpawnConditionProfiles Tag Format: [SpawnConditionProfiles:Value] Description: This tag specifies the name of Spawn Conditions profile this group should use. Allowed Values: Any Spawn Conditions Profile SubtypeId Multiple Tag Allowed: Yes","title":"Spawn-Conditions-Groups.md"},{"location":"Spawn-Conditions-Groups/#spawn-conditions-groupsmd","text":"Spawn Conditions Group Profiles in Modular Encounters Systems are used to group together multiple Spawn Conditions names so they can easily be applied to SpawnGroups that use those conditions often (reducing visual clutter and copy/paste activity). You can attach your Spawn Conditions Group Profiles to any SpawnGroup by adding a [SpawnConditionGroups:Value] tag to the SpawnGroup and replace Value with the SubtypeId of your Spawn Conditions Group Profile. Example: [SpawnConditionGroups:MES-ExampleSpawnConditionGroupsProfile] Multiple Spawn Conditions Group Profiles can be attached to a single SpawnGroup as well, just include additional [SpawnConditionGroups:Value] lines in your SpawnGroup Profile. It is important that you use a unique SubtypeId for each Spawn Conditions Group Profile you create, otherwise they may not work correctly. Here is an example of how a Spawn Conditions Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleSpawnConditionGroupsProfile</SubtypeId> </Id> <Description> [MES Spawn Conditions Group] [SpawnConditionProfiles:SomeSpawnConditionProfileId] [SpawnConditionProfiles:AnotherSpawnConditionProfileId] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Spawn Conditions Group Profiles. Tag: SpawnConditionProfiles Tag Format: [SpawnConditionProfiles:Value] Description: This tag specifies the name of Spawn Conditions profile this group should use. Allowed Values: Any Spawn Conditions Profile SubtypeId Multiple Tag Allowed: Yes","title":"Spawn-Conditions-Groups.md"},{"location":"Spawn-Conditions/","text":"Spawn-Conditions.md Spawn Condition Profiles are what control when a SpawnGroup is allowed to be spawned at a certain time or place. SpawnGroups can have multiple Spawn Condition Profiles. When evaluating the profiles for spawning eligibility, only a single Spawn Condition Profile needs to be satisfied in order for the SpawnGroup to be considered eligible for spawning. The tags in the Spawn Condition Profiles can be placed directly in the SpawnGroup tags. This is because these tags were once part of the regular SpawnGroup tags, and steps to ensure compatibility were considered. Here is an example of how a Spawn Condition Profile is created: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-SpawnProfile-CargoShipExample</SubtypeId> </Id> <Description> [MES Spawn Conditions] [SpaceCargoShip:true] [LunarCargoShip:true] [UseThreatLevelCheck:true] [ThreatLevelCheckRange:15000] [ThreatScoreMinimum:500] </Description> </EntityComponent> </EntityComponents> </Definitions> To link a profile to your SpawnGroup, simply use the SpawnConditionsProfiles tag and provide the SubtypeId of the Spawn Condition Profile you created. Eg: [SpawnConditionsProfiles:MES-SpawnProfile-CargoShipExample] . Below are several types of condition tags you can include in your Spawn Condition Profile: Space-Cargo-Ships Random-Encounters Planetary-Cargo-Ships Planetary-Installations Boss-Encounters Creatures Drone-Encounters Static-Encounters Other-NPCs General Combat Cost Date-Time Economy Faction Known-Player-Location Misc Mods Planetary Players Prefabs Reputation Restrictions Settings Threat Variables World Zone Space-Cargo-Ships Tag: SpaceCargoShip Tag Format: [SpaceCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Space Cargo Ship. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: LunarCargoShip Tag Format: [LunarCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Lunar Cargo Ship. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseAutoPilotInSpace Tag Format: [UseAutoPilotInSpace:Value] Description: If set to true , Space and Lunar Cargo Ships will instead use Auto-Pilot to fly to their Despawn Coords. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SpaceCargoShipChance Tag Format: [SpaceCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Space Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: LunarCargoShipChance Tag Format: [LunarCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Lunar Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Random-Encounters Tag: SpaceRandomEncounter Tag Format: [SpaceRandomEncounter:Value] Description: This tag specifies if the SpawnGroup should spawn as a Random Encounter (Space). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RandomEncounterChance Tag Format: [RandomEncounterChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Random Encounter. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: UseOptimizedVoxelSpawning Tag Format: [UseOptimizedVoxelSpawning:Value] Description: This tag allows you to specify if Voxels attached to the SpawnGroup should be spawned using a newer voxel spawner system that is a bit more performance friendly. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CustomVoxelMaterial Tag Format: [CustomVoxelMaterial:Value] Description: This tag allows you to specify one or more voxel material names that will be used for the voxel spawn (entire voxel will use this material). If multiple values are provided, then 1 will be selected randomly for each voxel. Allowed Value(s): Any Voxel Material SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes Planetary-Cargo-Ships Tag: AtmosphericCargoShip Tag Format: [AtmosphericCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Planetary Cargo Ship. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: GravityCargoShip Tag Format: [GravityCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Gravity Cargo Ship. These types of cargo ships will are eligible to spawn when the player is above the PlayerSurfaceAltitude altitude of a planet and is still in gravity range. This allows cargo ships to appear in the previously 'dead zone' between where the atmosphere ends and space begins. Consider using MinGravity and/or MaxGravity spawngroup tags to control what parts of gravity these ships can appear in. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AtmosphericCargoShipChance Tag Format: [AtmosphericCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Planetary Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: GravityCargoShipChance Tag Format: [GravityCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Gravity Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: SkipAirDensityCheck Tag Format: [SkipAirDensityCheck:Value] Description: This tag specifies if the SpawnGroup should skip checks for Air Density when considering spawn eligibility on a planet. This should only be used for ships that primarily use Hydrogen Thrust or have sufficient Ion Thrust in the environment they're spawning in. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CargoShipTerrainPath Tag Format: [CargoShipTerrainPath:Value] Description: This tag specifies if the path that is designated for the Planetary Cargo Ship should be calculated along the surface of the planet instead of in the air. This is useful for RivalAI behaviors that use hover-like flight mechanics so it can be determined if the flight path still meets other requirements such as Air Density. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CustomPathStartAltitude Tag Format: [CustomPathStartAltitude:Value] Description: This tag specifies a custom altitude from the terrain surface that the SpawnGroup will be spawned at instead of the path start point that is initially calculated. Allowed Values: Any Number Greater or Equal to 0 Default Value(s): -1 Multiple Tag Allowed: No Tag: CustomPathEndAltitude Tag Format: [CustomPathEndAltitude:Value] Description: This tag specifies a custom altitude from the terrain surface that the Cargo Ship SpawnGroup will attempt to reach instead of the end path point that is initially calculated. Allowed Values: Any Number Greater or Equal to 0 Default Value(s): -1 Multiple Tag Allowed: No Planetary-Installations Tag: PlanetaryInstallation Tag Format: [PlanetaryInstallation:Value] Description: This tag specifies if the SpawnGroup should spawn as a Planetary Installation. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetaryInstallationType Tag Format: [PlanetaryInstallationType:Value] Description: This tag specifies what size category a Planetary Installation SpawnGroup should spawn as. Allowed Values: Small Medium Large Default Value(s): Small Multiple Tag Allowed: No Tag: PlanetaryInstallationChance Tag Format: [PlanetaryInstallationChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Planetary Installation. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: SkipTerrainCheck Tag Format: [SkipTerrainCheck:Value] Description: This tag specifies if the SpawnGroup should skip checks related to terrain height variance. If used, this may result in stations spawning on uneven terrain. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RotateInstallations Tag Format: [RotateInstallations:Value1,Value2,Value3,etc] Description: This tag allows you to specify one or more rotations to use on an installation to give it a tilt in the ground. Each Value is replaced by the following: {X:0 Y:0 Z:0} . X affects Pitch, Y affects Yaw, Z affects Roll. Each of the X,Y,Z values accept a range between -45 to 45 . Providing a value of {X:100 Y:100 Z:100} will result in a randomized rotation being used. When providing multiple values, the first value will affect the first prefab, second value affects second prefab, etc. Allowed Values: Rotation (see above for example) If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ReverseForwardDirections Tag Format: [ReverseForwardDirections:Value] Description: This tag allows you to specify one or more of the spawned prefabs should have their 'Forward' direction reversed at spawn. When providing multiple values, the first value will affect the first prefab, second value affects second prefab, etc. Allowed Values: true false If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: InstallationTerrainValidation Tag Format: [InstallationTerrainValidation:Value] Description: This tag specifies if the SpawnGroup should only spawn on one of a few specified terrain types as defined by the AllowedTerrainTypes tag. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: InstallationSpawnsOnDryLand Tag Format: [InstallationSpawnsOnDryLand:Value] Description: This tag specifies if the SpawnGroup should spawn on Dry Land if you are using the Water Mod by Jakaria Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: InstallationSpawnsUnderwater Tag Format: [InstallationSpawnsUnderwater:Value] Description: This tag specifies if the SpawnGroup should spawn Underwater if you are using the Water Mod by Jakaria Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: InstallationSpawnsOnWaterSurface Tag Format: [InstallationSpawnsOnWaterSurface:Value] Description: This tag specifies if the SpawnGroup should spawn on the Water Surface if you are using the Water Mod by Jakaria. Installations spawned on the Water Surface will not be considered static grids. You should also ensure they are able to float as per the buoyancy rules of the Water Mod. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CutVoxelsAtAirtightCells Tag Format: [CutVoxelsAtAirtightCells:Value] Description: This tag specifies if the spawned station should have voxel material removed at any cell that is determined to be Air-Tight. Please note this is still experimental and not completely functional in some cases. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CutVoxelSize Tag Format: [CutVoxelSize:Value] Description: This tag specifies the size of the voxel cuts that should be used when cutting voxels with CutVoxelsAtAirtightCells . Allowed Values: Any Number Greater Than 0 Default Value(s): 2.7 Multiple Tag Allowed: No Boss-Encounters Tag: BossEncounterSpace Tag Format: [BossEncounterSpace:Value] Description: This tag specifies if the SpawnGroup should spawn as a Boss Encounter that only appears in Space. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BossEncounterAtmo Tag Format: [BossEncounterAtmo:Value] Description: This tag specifies if the SpawnGroup should spawn as a Boss Encounter that only appears in planetary atmosphere. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BossEncounterAny Tag Format: [BossEncounterAny:Value] Description: This tag specifies if the SpawnGroup should spawn as a Boss Encounter that can spawn in any environment. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BossEncounterChance Tag Format: [BossEncounterChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Boss Encounter. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: BossCustomAnnounceEnable Tag Format: [BossCustomAnnounceEnable:Value] Description: This tag specifies if a custom chat message is broadcast to players when a Boss Encounter GPS signal is created. Allowed Values: true false Default Value(s): none Multiple Tag Allowed: No Tag: BossCustomAnnounceAuthor Tag Format: [BossCustomAnnounceAuthor:Value] Description: This tag specifies the Author name that appears with the chat message if BossCustomAnnounceEnable is set to true . Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: BossCustomAnnounceMessage Tag Format: [BossCustomAnnounceMessage:Value] Description: This tag specifies the 'Message' that appears with the chat message if BossCustomAnnounceEnable is set to true . Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: BossCustomGPSLabel Tag Format: [BossCustomGPSLabel:Value] Description: This tag specifies the name of the GPS signal that gets created when a Boss Encounter spawns. Allowed Values: Any String Value Default Value(s): Dangerous Encounter Multiple Tag Allowed: No Tag: BossCustomGPSColor Tag Format: [BossCustomGPSColor:Value] Description: This tag allows you to specify a custom color (in RGB) that will be used for the Boss Encounter GPS. Allowed Value(s): Vector Coordinates Formatted As: eg: {X:0 Y:0 Z:0} Default Value(s): N/A Multiple Tags Allowed: No Creatures Creature spawning is a little bit different than using SpawnGroups for Grid Spawning. Because we are still using a SpawnGroup to spawn the creatures, we still need to include a Prefab in the SpawnGroup, otherwise the game will throw an error. Below is an example SpawnGroup you can use for spawning creatures: <SpawnGroup> <Id> <TypeId>SpawnGroupDefinition</TypeId> <SubtypeId>Example-SpawnGroup-CreatureTest</SubtypeId> </Id> <Description> [Modular Encounters SpawnGroup] [CreatureSpawn:true] [CreatureIds:SpaceSpider] [MinCreatureCount:2] [MaxCreatureCount:5] [MinCreatureDistance:25] [MaxCreatureDistance:30] </Description> <IsPirate>true</IsPirate> <Frequency>5.0</Frequency> <Prefabs> <Prefab SubtypeId=\"MES-CreaturePrefabDummy\"> <Position> <X>0.0</X> <Y>0.0</Y> <Z>0.0</Z> </Position> </Prefab> </Prefabs> </SpawnGroup> Below are the SpawnGroup tags are specific to Creature Spawning (you can also use many of the tags in the Common section with Creature Spawns as well): Tag: CreatureSpawn Tag Format: [CreatureSpawn:Value] Description: This tag specifies if the SpawnGroup should spawn as a Creature / Bot that appears on the planet surface. It's important to note that you must still include a prefab with your spawngroup (the game requires this), but it will not be used to spawn the creatures. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CreatureIds Tag Format: [CreatureIds:Value] Description: This tag specifies one or more Creature / Bot SubtypeIds that get used for spawning. If multiple Ids are provided, then each creature spawned will be chosen at random from the provided tags. Allowed Values: Any Creature / Bot SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: BotProfiles Tag Format: [BotProfiles:Value] Description: This tag specifies one or more Bot Spawn Profile SubtypeIDs that can be used to spawn bots with more customized parameters (model, role, color, etc). If you provide values to this tag, then CreatureIds values will not be used. Bots spawned with this method must use AiEnabled. Allowed Values: Bot Spawn Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: AiEnabledReady Tag Format: [AiEnabledReady:Value] Description: This tag specifies if the AiEnabled mod needs to be fully loaded / ready before the spawn is allowed. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AiEnabledModBots Tag Format: [AiEnabledModBots:Value] Description: This tag specifies if the Bots/Creatures spawned in this SpawnGroup are controlled by the AiEnabled mod. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AiEnabledRole Tag Format: [AiEnabledRole:Value] Description: This tag specifies the behavior/role that the AiEnabled bots will spawn with. Allowed Values: Any Eligible AiEnabled Role Id Default Value(s): N/A Multiple Tag Allowed: No Tag: MinCreatureCount Tag Format: [MinCreatureCount:Value] Description: This tag specifies the minimum amount of Creatures that are spawned if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or lower than MaxCreatureCount Default Value(s): 1 Multiple Tag Allowed: No Tag: MaxCreatureCount Tag Format: [MaxCreatureCount:Value] Description: This tag specifies the maximum amount of Creatures that are spawned if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or higher than MinCreatureCount Default Value(s): 1 Multiple Tag Allowed: No Tag: MinCreatureDistance Tag Format: [MinCreatureDistance:Value] Description: This tag specifies the minimum distance from the player Creatures that are spawned at if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or lower than MaxCreatureDistance Default Value(s): 100 Multiple Tag Allowed: No Tag: MaxCreatureDistance Tag Format: [MaxCreatureDistance:Value] Description: This tag specifies the maximum distance from the player Creatures that are spawned at if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or higher than MinCreatureDistance Default Value(s): 150 Multiple Tag Allowed: No Tag: MinDistFromOtherCreaturesInGroup Tag Format: [MinDistFromOtherCreaturesInGroup:Value] Description: This tag specifies the minimum distance each creature/bot should spawn from one another if there are multiple creatures/bots in the SpawnGroup. Allowed Values: Any number 1 or higher Default Value(s): 5 Multiple Tag Allowed: No Tag: CreatureChance Tag Format: [CreatureChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Creature Spawn. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Drone-Encounters Tag: DroneEncounter Tag Format: [DroneEncounter:Value] Description: This tag specifies if the SpawnGroup should spawn as a Drone Encounter. These types of encounters spawn based on the rules in the tags below. They use their own timers and distances, and all conditions are determined by other other tags used in the Spawn Conditions Profile. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MinimumPlayerTime Tag Format: [MinimumPlayerTime:Value] Description: This tag specifies the Minimum Time in Seconds it takes for this encounter to be able to spawn near a player. Allowed Values: Any Integer Greater Than 0 Value must be less than MaximumPlayerTime Default Value(s): -1 Multiple Tag Allowed: No Tag: MaximumPlayerTime Tag Format: [MaximumPlayerTime:Value] Description: This tag specifies the Maximum Time in Seconds it takes for this encounter to be able to spawn near a player. Allowed Values: Any Integer Greater Than 0 Value must be greater than MinimumPlayerTime Default Value(s): 0 Multiple Tag Allowed: No Tag: FailedDroneSpawnResetsPlayerTime Tag Format: [FailedDroneSpawnResetsPlayerTime:Value] Description: This tag specifies if the SpawnGroup timer should be reset if the encounter cannot spawn for some other reason (other conditions, pathing, etc). This only happens if the timer has already reached the end. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MinDroneDistance Tag Format: [MinDroneDistance:Value] Description: This tag specifies the Minimum Distance in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be less than MaxDroneDistance Default Value(s): 1000 Multiple Tag Allowed: No Tag: MaxDroneDistance Tag Format: [MaxDroneDistance:Value] Description: This tag specifies the Maximum Distance in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be greater than MinDroneDistance Default Value(s): 1000 Multiple Tag Allowed: No Tag: MinDroneAltitude Tag Format: [MinDroneAltitude:Value] Description: This tag specifies the Minimum Altitude (if on a planet) in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be less than MaxDroneAltitude Default Value(s): 1000 Multiple Tag Allowed: No Tag: MaxDroneAltitude Tag Format: [MaxDroneAltitude:Value] Description: This tag specifies the Maximum Altitude (if on a planet) in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be greater than MinDroneAltitude Default Value(s): 1000 Multiple Tag Allowed: No Tag: DroneInheritsSourceAltitude Tag Format: [DroneInheritsSourceAltitude:Value] Description: This tag specifies if the SpawnGroup should inherit the player altitude when spawning (eg take player existing altitude and add the altitude from the tags). This only happens on Planets. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Static-Encounters Tag: StaticEncounter Tag Format: [StaticEncounter:Value] Description: This tag specifies if the SpawnGroup should spawn as a Static Encounter. These types of encounters spawn at specific parts of the game world, and only appear once. They are useful for scenario building where you might not want an encounter to appear until after certain conditions are met Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: StaticEncounterCoords Tag Format: [StaticEncounterCoords:Value] Description: This tag specifies the exact coordinates in the world that a static encounter will appear at. The orientation of the encounter is determined by the StaticEncounterForward and StaticEncounterUp tags. Allowed Values: Vector3D Format Coordinates eg: {X:1000 Y:1000 Z:1000} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterForward Tag Format: [StaticEncounterForward:Value] Description: This tag specifies the Forward Orientation of the static encounter. It must be paired with a valid StaticEncounterUp tag that is perpendicular to this value. Allowed Values: Vector3D Format Coordinates eg: {X:0 Y:0 Z:1} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterUp Tag Format: [StaticEncounterUp:Value] Description: This tag specifies the Up Orientation of the static encounter. It must be paired with a valid StaticEncounterForward tag that is perpendicular to this value. Allowed Values: Vector3D Format Coordinates eg: {X:0 Y:0 Z:1} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterUsePlanetDirectionAndAltitude Tag Format: [StaticEncounterUsePlanetDirectionAndAltitude:Value] Description: This tag specifies if the Static Encounter should not use the StaticEncounterCoords , and instead dynamically generate coordinates from the center of a provided planet at a given direction from the core and altitude from the surface at that direction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: StaticEncounterPlanet Tag Format: [StaticEncounterPlanet:Value] Description: This tag specifies the name of the Planet that the static encounter will appear on if calculating the spawning coords dynamically. This tag is only used if StaticEncounterUsePlanetDirectionAndAltitude is true Allowed Values: Any Planet SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Tag: StaticEncounterPlanetDirection Tag Format: [StaticEncounterPlanetDirection:Value] Description: This tag specifies the Direction from the center of the planet that will be used to calculate the spawning coordinates of the Static Encounter. This tag is only used if StaticEncounterUsePlanetDirectionAndAltitude is true Allowed Values: Vector3D Format Coordinates eg: {X:0 Y:0 Z:1} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterPlanetAltitude Tag Format: [StaticEncounterPlanetAltitude:Value] Description: This tag specifies the Altitude from the surface that will be used to calculate the spawning coordinates of the Static Encounter. This tag is only used if StaticEncounterUsePlanetDirectionAndAltitude is true Allowed Values: Any Number Default Value(s): 0 Multiple Tag Allowed: No Tag: ForceExactPositionAndOrientation Tag Format: [ForceExactPositionAndOrientation:Value] Description: This tag specifies if the Static Encounter should force the orientation data provided in the Spawn Conditions tags after the grid has spawned. Use this if you're having issues with an encounter not being in the correct orientations at spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Other-NPCs Tag: RivalAiSpaceSpawn Tag Format: [RivalAiSpaceSpawn:Value] Description: This tag specifies if a RivalAI Spawned Encounter should spawn in Space (No gravity or atmosphere). Please note this tag is only used for encounters spawned by the Spawning System in RivalAI. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RivalAiAtmosphericSpawn Tag Format: [RivalAiAtmosphericSpawn:Value] Description: This tag specifies if a RivalAI Spawned Encounter should spawn in Atmosphere. Please note this tag is only used for encounters spawned by the Spawning System in RivalAI. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RivalAiAnySpawn Tag Format: [RivalAiAnySpawn:Value] Description: This tag specifies if a RivalAI Spawned Encounter should spawn in any environment. Please note this tag is only used for encounters spawned by the Spawning System in RivalAI. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No General Tag: ChanceCeiling Tag Format: [ChanceCeiling:Value] Description: This tag specifies the maximum value to use when applying a chance tag to an encounter type. Example: If this tag was set to 200 and you had a SpaceCargoShipChance tag set to 100 , then that encounter would have a 50% chance of appearing. Allowed Values: Any Integer Greater Than 0 Default Value(s): 100 Multiple Tag Allowed: No Tag: ForceStaticGrid Tag Format: [ForceStaticGrid:Value] Description: This tag specifies if a SpawnGroup should be set to static when spawned. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RotateFirstCockpitToForward Tag Format: [RotateFirstCockpitToForward:Value] Description: This tag allows you to specify if a grid should be spawned with its first valid cockpit facing the spawn travel path. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: SpawnRandomCargo Tag Format: [SpawnRandomCargo:Value] Description: This tag specifies if the ship should spawn with random cargo in specified containers. This is the same system as what is used in the ContainerTypes.sbc file. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: DisableDampeners Tag Format: [DisableDampeners:Value] Description: This tag specifies whether or not the grid should spawn with Inertia Dampeners enabled or disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ReactorsOn Tag Format: [ReactorsOn:Value] Description: This tag specifies if the grid should spawn with Reactors on or off. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: RemoveVoxelsIfGridRemoved Tag Format: [RemoveVoxelsIfGridRemoved:Value] Description: This tag specifies if any Voxels that are spawned with the encounter should be removed if the grid is no longer present (only works for Random Encounters and Planetary Installations). Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Combat Tag: UseCombatPhase Tag Format: [UseCombatPhase:Value] Description: This tag specifies if this encounter should only spawn during a Combat Phase. If left false, the encounter will only spawn during a Peace phase. If the combat phase system is disabled in config, the encounter will omit this check. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreCombatPhase Tag Format: [IgnoreCombatPhase:Value] Description: This tag specifies if the encounter should always spawn, regardless of whether the world is in Combat or Peace phase. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CombatPhaseChecksInPersistentCondition Tag Format: [CombatPhaseChecksInPersistentCondition:Value] Description: This tag should be set to true if you are using any of the Combat Phase tags in a Persistent SpawnConditions profile, otherwise it can be left false . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Cost Tag: UseSandboxCounterCosts Tag Format: [UseSandboxCounterCosts:Value] Description: This tag specifies if the SpawnGroup should check the values of specified Sandbox Counters. If the minimum values are met, then the spawn would become eligible and those values are then subtracted from the Sandbox Counters Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: SandboxCounterCostNames Tag Format: [SandboxCounterCostNames:Value] Description: This tag specifies the name of the Sandbox Counter you want to check the amount of. This tag should be paired with the SandboxCounterCostAmounts tag to prevent confusion. Allowed Values: Any Sandbox Counter Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: SandboxCounterCostAmounts Tag Format: [SandboxCounterCostAmounts:Value] Description: This tag specifies the minimum Sandbox Counter value that must be met for the spawn to be eligible. This is also the amount that will be subtracted from the counter at spawn. This tag should be paired with the SandboxCounterCostNames tag to prevent confusion. Allowed Values: Any Integer Greater or Equal to 0 Default Value(s): 0 Multiple Tag Allowed: Yes Date-Time Tag: UseDateTimeYearRange Tag Format: [UseDateTimeYearRange:Value] Description: This tag allows you to specify if a range of Years should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeYear Tag Format: [MinDateTimeYear:Value] Description: This tag allows you to specify the minimum value for Years if using the UseDateTimeYearRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeYear if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeYear Tag Format: [MaxDateTimeYear:Value] Description: This tag allows you to specify the maximum value for Years if using the UseDateTimeYearRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeYear if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeMonthRange Tag Format: [UseDateTimeMonthRange:Value] Description: This tag allows you to specify if a range of Months should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeMonth Tag Format: [MinDateTimeMonth:Value] Description: This tag allows you to specify the minimum value for Months if using the UseDateTimeMonthRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeMonth if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeMonth Tag Format: [MaxDateTimeMonth:Value] Description: This tag allows you to specify the maximum value for Months if using the UseDateTimeMonthRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeMonth if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeDayRange Tag Format: [UseDateTimeDayRange:Value] Description: This tag allows you to specify if a range of Days should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeDay Tag Format: [MinDateTimeDay:Value] Description: This tag allows you to specify the minimum value for Days if using the UseDateTimeDayRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeDay if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeDay Tag Format: [MaxDateTimeDay:Value] Description: This tag allows you to specify the maximum value for Days if using the UseDateTimeDayRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeDay if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeHourRange Tag Format: [UseDateTimeHourRange:Value] Description: This tag allows you to specify if a range of Hours should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeHour Tag Format: [MinDateTimeHour:Value] Description: This tag allows you to specify the minimum value for Hours if using the UseDateTimeHourRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeHour if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeHour Tag Format: [MaxDateTimeHour:Value] Description: This tag allows you to specify the maximum value for Hours if using the UseDateTimeHourRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeHour if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeMinuteRange Tag Format: [UseDateTimeMinuteRange:Value] Description: This tag allows you to specify if a range of Minutes should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeMinute Tag Format: [MinDateTimeMinute:Value] Description: This tag allows you to specify the minimum value for Minutes if using the UseDateTimeMinuteRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeMinute if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeMinute Tag Format: [MaxDateTimeMinute:Value] Description: This tag allows you to specify the maximum value for Minutes if using the UseDateTimeMinuteRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeMinute if provided. Default Value(s): 0 Multiple Tags Allowed: No Economy Tag: UsePlayerCredits Tag Format: [UsePlayerCredits:Value] Description: This tag allows you to specify if a check should be done to determine how many Space Credits (currency) one or more players in the spawn area have before allowing the spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IncludeAllPlayersInRadius Tag Format: [IncludeAllPlayersInRadius:Value] Description: This tag allows you to specify if all players within an area are counted when calculating how many credits players have. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IncludeFactionBalance Tag Format: [IncludeFactionBalance:Value] Description: This tag allows you to specify if player Faction Credit Balance should also be considered when calculating how many credits players have. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlayerCreditsCheckRadius Tag Format: [PlayerCreditsCheckRadius:Value] Description: This tag allows you to specify the distance from the proposed spawn location that is checked for players when calculating total credits. Allowed Values: Any Number Greater Than 0 Default Value(s): 15000 Multiple Tag Allowed: No Tag: MinimumPlayerCredits Tag Format: [MinimumPlayerCredits:Value] Description: This tag specifies the minimum amount of credits that player(s) must have before the SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value Should Be Lower Than MaximumPlayerCredits If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaximumPlayerCredits Tag Format: [MaximumPlayerCredits:Value] Description: This tag specifies the maximum amount of credits that player(s) must have before the SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value Should Be Higher Than MinimumPlayerCredits If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: ChargeNpcFactionForSpawn Tag Format: [ChargeNpcFactionForSpawn:Value] Description: This tag allows you to specify if an encounter should only spawn if the NPC faction has enough credits, which are then depleted from the faction balance on successful spawning. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: ChargeForSpawning Tag Format: [ChargeForSpawning:Value] Description: This tag specifies the amount of credits that is depleted from the NPC bank account if using the ChargeNpcFactionForSpawn tag. Allowed Value(s): Any Integer Greater/Equal To `0' Default Value(s): 0 Multiple Tags Allowed: No Faction Tag: FactionOwner Tag Format: [FactionOwner:Value] Description: This tag allows you to assign a SpawnGroup to be owned by a specific NPC faction. Factions with human players cannot be assigned. To assign a faction, replace Value with the Faction Tag you want to use. Eg: SPRT , SPID , etc. You can also remove ownership all together by providing Nobody as your value. If your provided tag cannot be found (IE: there's no NPC faction with that tag), the SpawnGroup will be set to be owned by Nobody . Default value is SPRT if tag is not included. Allowed Values: Any Valid FactionTag or Nobody Default Value(s): SPRT Multiple Tag Allowed: No Tag: UseRandomMinerFaction Tag Format: [UseRandomMinerFaction:Value] Description: If set to true , the spawned prefabs in this SpawnGroup will use a random NPC faction that is designated as a Miner Faction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseRandomBuilderFaction Tag Format: [UseRandomBuilderFaction:Value] Description: If set to true , the spawned prefabs in this SpawnGroup will use a random NPC faction that is designated as a Builder Faction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseRandomTraderFaction Tag Format: [UseRandomTraderFaction:Value] Description: If set to true , the spawned prefabs in this SpawnGroup will use a random NPC faction that is designated as a Trader Faction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Known-Player-Location Tag: UseKnownPlayerLocations Tag Format: [UseKnownPlayerLocations:Value] Description: This tag specifies if a SpawnGroup should only spawn if the area was designated as a 'Player Known Location' (by RivalAI or other mod). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: KnownPlayerLocationMustMatchFaction Tag Format: [KnownPlayerLocationMustMatchFaction:Value] Description: This tag specifies if a SpawnGroup should only spawn in a Known Player Location if the 'FactionOwner' tag matches the faction of the created Location. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: KnownPlayerLocationMinSpawnedEncounters Tag Format: [KnownPlayerLocationMinSpawnedEncounters:Value] Description: This tag allows you to specify the Minimum number of spawns that must have occured in a Known Player Location before this SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value should be lower than KnownPlayerLocationMaxSpawnedEncounters if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: KnownPlayerLocationMaxSpawnedEncounters Tag Format: [KnownPlayerLocationMaxSpawnedEncounters:Value] Description: This tag allows you to specify the Maximum number of spawns that are allowed to have occured in a Known Player Location before this SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value should be higher than KnownPlayerLocationMinSpawnedEncounters if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Misc Tag: PlaySoundAtSpawnTriggerPosition Tag Format: [PlaySoundAtSpawnTriggerPosition:Value] Description: This tag specifies if a sound effect should play at the spawn location when the spawn is completed using this condition profile. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SpawnTriggerPositionSoundId Tag Format: [SpawnTriggerPositionSoundId:Value] Description: This tag specifies the Audio Definition SubtypeId of the sound you want to play if using PlaySoundAtSpawnTriggerPosition . Allowed Values: Any Sound Definition SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Mods Tag: RequireAllMods Tag Format: [RequireAllMods:Value1,Value2,etc] Description: This tag allows you to specify what mods must be loaded in the game world in order for a SpawnGroup to appear. If all mods provided are loaded, the SpawnGroup can appear. Mods are identified by their Steam Workshop IDs. If tag is not included, then no mods requirements will be used by default. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: RequireAnyMods Tag Format: [RequireAnyMods:Value1,Value2,etc] Description: This tag allows you to specify what mods must be loaded in the game world in order for a SpawnGroup to appear. If any of the mods provided are loaded, the SpawnGroup can appear. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ExcludeAllMods Tag Format: [ExcludeAllMods:Value1,Value2,etc] Description: This tag allows you to specify what mods cannot be loaded in the game world in order for a SpawnGroup to appear. If all mods provided are not loaded, this Spawn Group can appear. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ExcludeAnyMods Tag Format: [ExcludeAnyMods:Value1,Value2,etc] Description: This tag allows you to specify what mods cannot be loaded in the game world in order for a SpawnGroup to appear. If any of the mods provided are not loaded, this SpawnGroup can appear. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ModBlockExists Tag Format: [ModBlockExists:Value1,Value2,etc] Description: This tag allows you to specify one or more Block SubtypeIds that must be present in the game session for the SpawnGroup to be able to appear. Allowed Values: Any Modded Block SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Planetary Tag: MinAirDensity Tag Format: [MinAirDensity:Value] Description: This tag allows you to specify the minimum Air Density at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be lower than MaxAirDensity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxAirDensity Tag Format: [MaxAirDensity:Value] Description: This tag allows you to specify the maximum Air Density at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be higher than MinAirDensity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MinGravity Tag Format: [MinGravity:Value] Description: This tag allows you to specify the minimum Gravity at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be lower than MaxGravity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxGravity Tag Format: [MaxGravity:Value] Description: This tag allows you to specify the maximum Gravity at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be higher than MinGravity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MinSpawnFromPlanetSurface Tag Format: [MinSpawnFromPlanetSurface:Value] Description: This tag allows you to specify how far from the nearest planet's surface the player must be before this encounter can spawn. If the player is within this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be lower than MaxSpawnFromPlanetSurface if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxSpawnFromPlanetSurface Tag Format: [MaxSpawnFromPlanetSurface:Value] Description: This tag allows you to specify how far from the nearest planet's surface the player must be within for this encounter can spawn. If the player is further than this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be higher than MinSpawnFromPlanetSurface if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: MinWaterDepth Tag Format: [MinWaterDepth:Value] Description: This tag allows you to specify how deep underwater an encounter must spawn if eligible to spawn underwater. For grids that spawn on the water surface, this value is also used as the minimum water depth beneath the surface (so you don't end up with grids spawning in beached like CptArthur's boats) This is used with the Water Mod by Jakaria Allowed Values: Any Number Greater Than 0 Default Value(s): 0 Multiple Tag Allowed: No Tag: UseDayOrNightOnly Tag Format: [UseDayOrNightOnly:Value] Description: This tag will specify if a spawn should only appear if it is either day or night on a planet (specified in SpawnOnlyAtNight ). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SpawnOnlyAtNight Tag Format: [SpawnOnlyAtNight:Value] Description: This tag will specify if a spawn should only appear at night on a planet if true , otherwise it will only appear during the day if false . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseWeatherSpawning Tag Format: [UseWeatherSpawning:Value] Description: This tag will specify if a spawn should only appear while the player is inside of one or more specified Weather events. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedWeatherSystems Tag Format: [AllowedWeatherSystems:Value1,Value2,etc] Description: This tag allows you to specify what weather systems are valid for spawning if UseWeatherSpawning is enabled. Allowed Values: Any Weather SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: UseTerrainTypeValidation Tag Format: [UseTerrainTypeValidation:Value] Description: This tag will specify if a spawn should only appear while the player is in an area that contains a certain type of terrain. Terrain is check in random spots around the player, and the most commonly found is what is considered for spawning purposes. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedTerrainTypes Tag Format: [AllowedTerrainTypes:Value1,Value2,etc] Description: This tag allows you to specify what terrain types near the player are valid for spawning if UseTerrainTypeValidation is enabled. Allowed Values: Any Voxel Material MaterialTypeName Acceptable values can be found in VoxelMaterials_planetary.sbc Game File If providing multiple values, use comma with no spaces as shown in Tag Format false Default Value(s): none Multiple Tag Allowed: No Tag: PlanetBlacklist Tag Format: [PlanetBlacklist:Value1,Value2,etc] Description: This tag allows you to specify what planets the encounter is not allow to spawn on/near (for applicable encounters). Allowed Values: Any Planet SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: PlanetWhitelist Tag Format: [PlanetWhitelist:Value1,Value2,etc] Description: This tag allows you to specify what planets the encounter will only spawn on/near (for applicable encounters). Allowed Values: Any Planet SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: PlanetRequiresVacuum Tag Format: [PlanetRequiresVacuum:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets without atmosphere. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetRequiresAtmo Tag Format: [PlanetRequiresAtmo:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets with atmosphere. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetRequiresOxygen Tag Format: [PlanetRequiresOxygen:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets with atmosphere and breathable oxygen. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetMinimumSize Tag Format: [PlanetMinimumSize:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets larger than the provided diameter (in meters). Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than PlanetMaximumSize If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: PlanetMaximumSize Tag Format: [PlanetMaximumSize:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets no larger than the provided diameter (in meters). Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than PlanetMinimumSize If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: DirectionFromPlanetCenter Tag Format: [DirectionFromPlanetCenter:Value] Description: This tag allows you to specify one or more Directional Vectors that are used as a reference point to measure the spawn coordinate angle if using the MinAngleFromPlanetCenterDirection or MaxAngleFromPlanetCenterDirection tags. This Check only fails if all direction/angle checks have failed. Allowed Values: Direction Vector In Following Format: {X:0 Y:0 Z:1} Default Value(s): N/A Multiple Tag Allowed: Yes Tag: MinAngleFromPlanetCenterDirection Tag Format: [MinAngleFromPlanetCenterDirection:Value] Description: This tag specifies the minimum angle from an angle provided by DirectionFromPlanetCenter that must be satisfied in order to be spawned. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than MaxAngleFromPlanetCenterDirection If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxAngleFromPlanetCenterDirection Tag Format: [MaxAngleFromPlanetCenterDirection:Value] Description: This tag specifies the maximum angle from an angle provided by DirectionFromPlanetCenter that must be satisfied in order to be spawned. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than MinAngleFromPlanetCenterDirection If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Players Tag: UsePlayerCondition Tag Format: [UsePlayerCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: PlayerConditionCheckRadius Tag Format: [PlayerConditionCheckRadius:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: UsePlayerCountCheck Tag Format: [UsePlayerCountCheck:Value] Description: This tag allows you to specify if the spawner should do a count of the active players in the area or in the game world before spawning. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlayerCountCheckRadius Tag Format: [PlayerCountCheckRadius:Value] Description: This tag allows you to specify the radius from the spawn area that the spawner should check for active players. If this tag is not used, then it will count all players currently online. Allowed Values: Any Number Greater Than 0 Default Value(s): -1 Multiple Tag Allowed: No Tag: MinimumPlayers Tag Format: [MinimumPlayers:Value] Description: This tag specifies the minimum amount of players that need to be detected to allow the spawn. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than MaximumPlayers If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaximumPlayers Tag Format: [MaximumPlayers:Value] Description: This tag specifies the maximum amount of players that need to be detected to allow the spawn. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than MinimumPlayers If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: RequiredPlayersOnline Tag Format: [RequiredPlayersOnline:Value1] Description: This tag allows you to specify one or more PLayer Steam User IDs that must be online in the game session for the SpawnGroup to be able to appear. If all the listed players are online, then the spawn is eligible Allowed Values: Any Steam User Id (64 bit) Default Value(s): none Multiple Tag Allowed: Yes Tag: RequiredAnyPlayersOnline Tag Format: [RequiredAnyPlayersOnline:Value1] Description: This tag allows you to specify one or more PLayer Steam User IDs that must be online in the game session for the SpawnGroup to be able to appear. If any of the listed players are online, then the spawn is eligible. Allowed Values: Any Steam User Id (64 bit) Default Value(s): none Multiple Tag Allowed: Yes Prefabs Tag: PrefabSpawningMode Tag Format: [PrefabSpawningMode:Value1] Description: This tag allows you to specify how the prefabs in the SpawnGroup will be spawned. The default value All spawns all prefabs at their specified positions offsets. The Random value will choose 1 random prefab and use that for the spawn. The SelectedIndexes value allows you to provide a list of indexes that are specifically chosen for spawning (eg: SpawnGroup has 4 prefabs, and you provide indexes 0 and 2 , it will spawn the first prefab and the 3rd prefab). And finally the RandomSelectedIndexes allows you to create groups of indexes and then the spawner will cycle through each group and spawn one prefab randomly from the provided indexes in the group. Allowed Values: All Random SelectedIndexes RandomSelectedIndexes RandomFixedCount Default Value(s): All Multiple Tag Allowed: No Tag: AllowPrefabIndexReuse Tag Format: [AllowPrefabIndexReuse:Value] Description: This tag specifies if prefab indexes can be used more than once when using SelectedIndexes or RandomSelectedIndexes (eg, 0 can be used twice). This should only be used if you are also using PrefabOffsetOverrides , otherwise prefabs would spawn on top of eachother and cause clang and other violent explosions. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PrefabIndexes Tag Format: [PrefabIndexes:Value] Description: This tag allows you to specify a number of index values that are used to determine which prefabs should spawn if using the SelectedIndexes value in the PrefabSpawningMode tag. Allowed Values: Any Number 0 or Greater Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabIndexGroupNames Tag Format: [PrefabIndexGroupNames:Value] Description: This tag allows you to specify a number of index group names that are paried with values in the PrefabIndexGroupValues tag, which are used to determine which prefabs should spawn if using the RandomSelectedIndexes value in the PrefabSpawningMode tag. Allowed Values: Any Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabIndexGroupValues Tag Format: [PrefabIndexGroupValues:Value] Description: This tag allows you to specify a number of indexes that are paired with values in the PrefabIndexGroupNames tag, which are used to determine which prefabs should spawn if using the RandomSelectedIndexes value in the PrefabSpawningMode tag. Allowed Values: Any Number 0 or Greater Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabOffsetOverrides Tag Format: [PrefabOffsetOverrides:Value] Description: This tag allows you to specify one or more sets of position offset coordinates that are used to override the position offsets of the prefabs. Example: if you are randomly spawning 3 prefabs, then you can force them into specific formations, regardless of the grids that are chosen. Allowed Values: Vector3D Coordinates eg: '{X:0 Y:0 Z:0}' Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabFixedCount Tag Format: [PrefabFixedCount:Value] Description: This tag allows you to specify a number of prefabs that should be randomly selected for spawn if using the RandomFixedCount value in the PrefabSpawningMode tag. It is recommended to also use the PrefabOffsetOverrides tags to ensure you don't get any prefabs overlapping positions. Allowed Values: Any Number 1 or Greater Default Value(s): N/A Multiple Tag Allowed: Yes Reputation Tag: UsePlayerFactionReputation Tag Format: [UsePlayerFactionReputation:Value] Description: This tag specifies if player reputation should be considered when spawning a SpawnGroup nearby. If any player meets the conditions you provide, the SpawnGroup will be valid for spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlayerReputationCheckRadius Tag Format: [PlayerReputationCheckRadius:Value] Description: This tag allows you to specify the distance from the proposed spawn location that is checked for players when checking reputation. Allowed Values: Any Number Greater Than 0 Default Value(s): 15000 Multiple Tag Allowed: No Tag: CheckReputationAgainstOtherNPCFaction Tag Format: [CheckReputationAgainstOtherNPCFaction:Value] Description: This tag allows you to provide a separate faction Tag to check reputation against instead of the faction this SpawnGroup would use. Allowed Values: Any FactionTag Default Value(s): false Multiple Tag Allowed: No Tag: MinimumReputation Tag Format: [MinimumReputation:Value] Description: This tag allows you to specify the Minimum Reputation a player must have for the SpawnGroup to be able to spawn. Allowed Values: Any Number Between -1500 and 1500 Value Should Be Lower Than MaximumReputation If Tag is Provided Default Value(s): -1501 Multiple Tag Allowed: No Tag: MaximumReputation Tag Format: [MaximumReputation:Value] Description: This tag allows you to specify the Maximum Reputation a player must have for the SpawnGroup to be able to spawn. Allowed Values: Any Number Between -1500 and 1500 Value Should Be Higher Than MinimumReputation If Tag is Provided Default Value(s): 1501 Multiple Tag Allowed: No Restrictions Tag: UniqueEncounter Tag Format: [UniqueEncounter:Value] Description: This tag specifies if a SpawnGroup should only spawn once per world instance. After the group spawns, it would not be selected for spawning again. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AdminSpawnOnly Tag Format: [AdminSpawnOnly:Value] Description: This tag specifies if a SpawnGroup should only be spawned when an admin triggers the spawn via chat command. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MustSpawnInPlanetaryLane Tag Format: [MustSpawnInPlanetaryLane:Value] Description: This tag specifies if a SpawnGroup should only be spawned inside of a planetary lane (ie, in the space directly between 2 planets). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetaryLanePlanetNameA Tag Format: [PlanetaryLanePlanetNameA:Value] Description: This tag specifies if a SpawnGroup should only be spawned inside of a planetary lane if one of the planet names matches the value of this tag. Requires the MustSpawnInPlanetaryLane tag. Allowed Values: Any Planet Name Default Value(s): N/A Multiple Tag Allowed: No Tag: PlanetaryLanePlanetNameB Tag Format: [PlanetaryLanePlanetNameB:Value] Description: This tag specifies if a SpawnGroup should only be spawned inside of a planetary lane if one of the planet names matches the value of this tag. Requires the MustSpawnInPlanetaryLane tag. Allowed Values: Any Planet Name Default Value(s): N/A Multiple Tag Allowed: No Tag: UseRemoteControlCodeRestrictions Tag Format: [UseRemoteControlCodeRestrictions:Value] Description: This tag specifies if a SpawnGroup should check the area for active Remote Control blocks that have registered a specific code, and then apply a Min/Max distance requirement from that block to determine eligiblility. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RemoteControlCode Tag Format: [RemoteControlCode:Value] Description: This tag specifies the Remote Control code that will be searched for if you've enabled the UseRemoteControlCodeRestrictions tag. Allowed Values: Any Remote Control Code Name Default Value(s): none Multiple Tag Allowed: No Tag: RemoteControlCodeMinDistance Tag Format: [RemoteControlCodeMinDistance:Value] Description: This tag specifies the minimum distance from an eligible Remote Control block that this SpawnGroup is allowed to spawn at if you've enabled the UseRemoteControlCodeRestrictions tag. If tag is not provided, or a value of -1 is used, then minimum distance is not considered. Allowed Values: Any Number Greater or Equal to -1 Must be less than RemoteControlCodeMaxDistance if tag exists Default Value(s): -1 Multiple Tag Allowed: No Tag: RemoteControlCodeMaxDistance Tag Format: [RemoteControlCodeMaxDistance:Value] Description: This tag specifies the maximum distance from an eligible Remote Control block that this SpawnGroup is allowed to spawn at if you've enabled the UseRemoteControlCodeRestrictions tag. If tag is not provided, or a value of -1 is used, then maximum distance is not considered. Allowed Values: Any Number Greater or Equal to -1 Must be greater than RemoteControlCodeMinDistance if tag exists Default Value(s): -1 Multiple Tag Allowed: No Settings Threat Tag: UseThreatLevelCheck Tag Format: [UseThreatLevelCheck:Value] Description: This tag will restrict the SpawnGroup to only spawn if the threat level near a player is within specified parameters. Threat score is specified in ThreatScoreMinimum and ThreatScoreMaximum . For more information on how Threat Scoring works, Click Here . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ThreatLevelCheckRange Tag Format: [ThreatLevelCheckRange:Value] Description: This tag specifies the radius (in meters) near the player that will be scanned by the spawner to determine the player threat level. Allowed Values: Any Number Greater Than 0 Default Value(s): 5000 Multiple Tag Allowed: No Tag: ThreatIncludeOtherNpcOwners Tag Format: [ThreatIncludeOtherNpcOwners:Value] Description: This tag specifies if a threat scan should also include grids owned by other NPCs in the scan radius. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ThreatScoreMinimum Tag Format: [ThreatScoreMinimum:Value] Description: This tag allows you to specify the minimum threat score within the player area before the spawn group is able to spawn. If the score is lower, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than ThreatScoreMaximum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: ThreatScoreMaximum Tag Format: [ThreatScoreMaximum:Value] Description: This tag allows you to specify the maximum threat score within the player area before the spawn group is able to spawn. If the score is higher, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than ThreatScoreMinimum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: ThreatScorePlanetaryHandicap Tag Format: [ThreatScorePlanetaryHandicap:Value] Description: This tag allows you to specify a value that is added to the Min/Max Threat values if the grid is attempting to spawn in gravity. This allows you to set increased / decreased difficulty for spawns that happen in a gravity well. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No Tag: UsePCUCheck Tag Format: [UsePCUCheck:Value] Description: This tag will restrict the SpawnGroup to only spawn if the PCU total near a player is within specified parameters. PCU score is specified in PCUMinimum and PCUMaximum . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PCUCheckRadius Tag Format: [PCUCheckRadius:Value] Description: This tag specifies the radius (in meters) near the player that will be scanned by the spawner to determine the PCU level. Allowed Values: Any Number Greater Than 0 Default Value(s): 5000 Multiple Tag Allowed: No Tag: PCUMinimum Tag Format: [PCUMinimum:Value] Description: This tag allows you to specify the minimum PCU score within the player area before the spawn group is able to spawn. If the score is lower, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than PCUMaximum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: PCUMaximum Tag Format: [PCUMaximum:Value] Description: This tag allows you to specify the maximum PCU score within the player area before the spawn group is able to spawn. If the score is higher, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than PCUMinimum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: UseDifficulty Tag Format: [UseDifficulty:Value] Description: This tag allows your spawngroup to check the Difficulty value in the General config when considering spawn eligibility. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDifficulty Tag Format: [MinDifficulty:Value] Description: This tag specifies the minimum difficulty required to spawn an encounter if using the UseDifficulty tag. Allowed Value(s): Any Integer Value Value must be Less Than or Equal to MaxDifficulty if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: MaxDifficulty Tag Format: [MaxDifficulty:Value] Description: This tag specifies the maximum difficulty required to spawn an encounter if using the UseDifficulty tag. Allowed Value(s): Any Integer Value Value must be Greater Than or Equal to MinDifficulty if provided. Default Value(s): -1 Multiple Tags Allowed: No Variables Tag: SandboxVariables Tag Format: [SandboxVariables:Value1,Value2,Value3,etc] Description: This tag allows you to specify the names of Sandbox Boolean Varibles (via IMyUtilities) that must be true in order for the group to spawn. Allowed Values: Any Variable Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: FalseSandboxVariables Tag Format: [FalseSandboxVariables:Value1,Value2,Value3,etc] Description: This tag allows you to specify the names of Sandbox Boolean Varibles (via IMyUtilities) that must be false in order for the group to spawn. If the Sandbox variable is not defined yet, this counts as false as well. Allowed Values: Any Variable Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: AttachModStorageComponentToGrid Tag Format: [AttachModStorageComponentToGrid:Value] Description: This tag allows you to specify whether or not a custom ModStorageComponent Dictionary Key/Value should be added to your grid(s). Please ensure that the Guid you plan to use is also defined in your mod's EntityContainers.sbc file. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: StorageKey Tag Format: [StorageKey:Value] Description: If AttachModStorageComponentToGrid is set to true, this tag will allow you to specify the Guid that is used as the Key in your Key/Value entry. Allowed Values: Any valid Guid String eg F778FB78-3400-44A8-AEF4-16B5525A0B54 Default Value(s): none Multiple Tag Allowed: No Tag: StorageValue Tag Format: [StorageValue:Value] Description: If AttachModStorageComponentToGrid is set to true, this tag will allow you to specify the String that is used as the Value in your Key/Value entry. Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: CustomApiConditions Tag Format: [CustomApiConditions:Value] Description: This tag allows you to specify the name of a custom method that is executed when this encounter tries to spawn. The custom method is defined in the MES API. Click here to learn more about the API and how to register your custom method. Allowed Value(s): Any Registered Custom Method Name Default Value(s): N/A Multiple Tags Allowed: Yes World Tag: MinSpawnFromWorldCenter Tag Format: [MinSpawnFromWorldCenter:Value] Description: This tag allows you to specify how far from the world center (0,0,0) the player must be before this encounter can spawn. If the player is within this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be lower than MaxSpawnFromWorldCenter if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxSpawnFromWorldCenter Tag Format: [MaxSpawnFromWorldCenter:Value] Description: This tag allows you to specify how far from the world center (0,0,0) the player must be within for this encounter can spawn. If the player is further than this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be higher than MinSpawnFromWorldCenter if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: CustomWorldCenter Tag Format: [CustomWorldCenter:Value] Description: This tag allows you to define a custom set of coordinates that are used as a reference point instead of 0,0,0 if you are using the MinSpawnFromWorldCenter or MaxSpawnFromWorldCenter tags. Allowed Value(s): Vector Coordinates Formatted As: {X:0.0 Y:0.0 Z:0.0} Default Value(s): N/A Multiple Tags Allowed: No Tag: DirectionFromWorldCenter Tag Format: [DirectionFromWorldCenter:Value] Description: This tag allows you to define a direction vector that is checked against while using MinSpawnFromWorldCenter and/or MaxSpawnFromWorldCenter . The direction is checked against tags MinAngleFromDirection and/or MinAngleFromDirection while checking the players angle from World Center. Allowed Value(s): Vector Coordinates Formatted As: {X:0.0 Y:0.0 Z:0.0} Default Value(s): N/A Multiple Tags Allowed: No Tag: MinAngleFromDirection Tag Format: [MinAngleFromDirection:Value] Description: This tag defines the minimum angle allowed from the direction specified in DirectionFromWorldCenter while using MinSpawnFromWorldCenter and/or MaxSpawnFromWorldCenter . The direction is checked against tags MinAngleFromDirection and/or MinAngleFromDirection while checking the players angle from World Center. Allowed Value(s): Any Number Value' Value must be Less Than MaxAngleFromDirection if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: MaxAngleFromDirection Tag Format: [MaxAngleFromDirection:Value] Description: This tag defines the maximum angle allowed from the direction specified in DirectionFromWorldCenter while using MinSpawnFromWorldCenter and/or MaxSpawnFromWorldCenter . The direction is checked against tags MinAngleFromDirection and/or MinAngleFromDirection while checking the players angle from World Center. Allowed Value(s): Any Number Value' Value must be Greater Than MinAngleFromDirection if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: SkipVoxelSpawnChecks Tag Format: [SkipVoxelSpawnChecks:Value] Description: This tag allows you to skip the voxel collision checks that are done before the encounter is spawned. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SkipGridSpawnChecks Tag Format: [SkipGridSpawnChecks:Value] Description: This tag allows you to skip the grid collision checks that are done before the encounter is spawned. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseSignalRequirement Tag Format: [UseSignalRequirement:Value] Description: This tag allows you to specify if your encounter should only spawn if there is a valid Antenna and/or Beacon signal active in the area where the spawn takes place. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinSignalRadius Tag Format: [MinSignalRadius:Value] Description: This tag allows you to specify the minimum broadcast strength of the Antenna/Beacon that must be met for UseSignalRequirement to be satisfied. If this tag is not provided, then no minimum will be used. Allowed Value(s): Any Number Value' Value must be Less Than or Equal to MaxSignalRadius if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: MaxSignalRadius Tag Format: [MaxSignalRadius:Value] Description: This tag allows you to specify the maximum broadcast strength of the Antenna/Beacon that must be met for UseSignalRequirement to be satisfied. If this tag is not provided, then no maximum will be used. Allowed Value(s): Any Number Value' Value must be Greater Than or Equal to MinSignalRadius if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: AllowNpcSignals Tag Format: [AllowNpcSignals:Value] Description: This tag allows NPC Antenna/Beacon signals to be considered while using the UseSignalRequirement tag Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: UseOnlySelfOwnedSignals Tag Format: [UseOnlySelfOwnedSignals:Value] Description: This tag restricts Antenna/Beacon signals to only be valid if they're owned by the same NPC while using the UseSignalRequirement tag. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Zone Tag: ZoneConditions Tag Format: [ZoneConditions:Value] Description: This tag allows you to specify one or more Zone Conditions profile that will be used to validate spawning within zones. Allowed Value(s): Any Zone Condition Profile SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes","title":"Spawn-Conditions.md"},{"location":"Spawn-Conditions/#spawn-conditionsmd","text":"Spawn Condition Profiles are what control when a SpawnGroup is allowed to be spawned at a certain time or place. SpawnGroups can have multiple Spawn Condition Profiles. When evaluating the profiles for spawning eligibility, only a single Spawn Condition Profile needs to be satisfied in order for the SpawnGroup to be considered eligible for spawning. The tags in the Spawn Condition Profiles can be placed directly in the SpawnGroup tags. This is because these tags were once part of the regular SpawnGroup tags, and steps to ensure compatibility were considered. Here is an example of how a Spawn Condition Profile is created: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-SpawnProfile-CargoShipExample</SubtypeId> </Id> <Description> [MES Spawn Conditions] [SpaceCargoShip:true] [LunarCargoShip:true] [UseThreatLevelCheck:true] [ThreatLevelCheckRange:15000] [ThreatScoreMinimum:500] </Description> </EntityComponent> </EntityComponents> </Definitions> To link a profile to your SpawnGroup, simply use the SpawnConditionsProfiles tag and provide the SubtypeId of the Spawn Condition Profile you created. Eg: [SpawnConditionsProfiles:MES-SpawnProfile-CargoShipExample] . Below are several types of condition tags you can include in your Spawn Condition Profile: Space-Cargo-Ships Random-Encounters Planetary-Cargo-Ships Planetary-Installations Boss-Encounters Creatures Drone-Encounters Static-Encounters Other-NPCs General Combat Cost Date-Time Economy Faction Known-Player-Location Misc Mods Planetary Players Prefabs Reputation Restrictions Settings Threat Variables World Zone","title":"Spawn-Conditions.md"},{"location":"Spawn-Conditions/#space-cargo-ships","text":"Tag: SpaceCargoShip Tag Format: [SpaceCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Space Cargo Ship. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: LunarCargoShip Tag Format: [LunarCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Lunar Cargo Ship. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseAutoPilotInSpace Tag Format: [UseAutoPilotInSpace:Value] Description: If set to true , Space and Lunar Cargo Ships will instead use Auto-Pilot to fly to their Despawn Coords. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SpaceCargoShipChance Tag Format: [SpaceCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Space Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: LunarCargoShipChance Tag Format: [LunarCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Lunar Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No","title":"Space-Cargo-Ships"},{"location":"Spawn-Conditions/#random-encounters","text":"Tag: SpaceRandomEncounter Tag Format: [SpaceRandomEncounter:Value] Description: This tag specifies if the SpawnGroup should spawn as a Random Encounter (Space). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RandomEncounterChance Tag Format: [RandomEncounterChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Random Encounter. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: UseOptimizedVoxelSpawning Tag Format: [UseOptimizedVoxelSpawning:Value] Description: This tag allows you to specify if Voxels attached to the SpawnGroup should be spawned using a newer voxel spawner system that is a bit more performance friendly. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: CustomVoxelMaterial Tag Format: [CustomVoxelMaterial:Value] Description: This tag allows you to specify one or more voxel material names that will be used for the voxel spawn (entire voxel will use this material). If multiple values are provided, then 1 will be selected randomly for each voxel. Allowed Value(s): Any Voxel Material SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes","title":"Random-Encounters"},{"location":"Spawn-Conditions/#planetary-cargo-ships","text":"Tag: AtmosphericCargoShip Tag Format: [AtmosphericCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Planetary Cargo Ship. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: GravityCargoShip Tag Format: [GravityCargoShip:Value] Description: This tag specifies if the SpawnGroup should spawn as a Gravity Cargo Ship. These types of cargo ships will are eligible to spawn when the player is above the PlayerSurfaceAltitude altitude of a planet and is still in gravity range. This allows cargo ships to appear in the previously 'dead zone' between where the atmosphere ends and space begins. Consider using MinGravity and/or MaxGravity spawngroup tags to control what parts of gravity these ships can appear in. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AtmosphericCargoShipChance Tag Format: [AtmosphericCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Planetary Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: GravityCargoShipChance Tag Format: [GravityCargoShipChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Gravity Cargo Ship. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: SkipAirDensityCheck Tag Format: [SkipAirDensityCheck:Value] Description: This tag specifies if the SpawnGroup should skip checks for Air Density when considering spawn eligibility on a planet. This should only be used for ships that primarily use Hydrogen Thrust or have sufficient Ion Thrust in the environment they're spawning in. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CargoShipTerrainPath Tag Format: [CargoShipTerrainPath:Value] Description: This tag specifies if the path that is designated for the Planetary Cargo Ship should be calculated along the surface of the planet instead of in the air. This is useful for RivalAI behaviors that use hover-like flight mechanics so it can be determined if the flight path still meets other requirements such as Air Density. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CustomPathStartAltitude Tag Format: [CustomPathStartAltitude:Value] Description: This tag specifies a custom altitude from the terrain surface that the SpawnGroup will be spawned at instead of the path start point that is initially calculated. Allowed Values: Any Number Greater or Equal to 0 Default Value(s): -1 Multiple Tag Allowed: No Tag: CustomPathEndAltitude Tag Format: [CustomPathEndAltitude:Value] Description: This tag specifies a custom altitude from the terrain surface that the Cargo Ship SpawnGroup will attempt to reach instead of the end path point that is initially calculated. Allowed Values: Any Number Greater or Equal to 0 Default Value(s): -1 Multiple Tag Allowed: No","title":"Planetary-Cargo-Ships"},{"location":"Spawn-Conditions/#planetary-installations","text":"Tag: PlanetaryInstallation Tag Format: [PlanetaryInstallation:Value] Description: This tag specifies if the SpawnGroup should spawn as a Planetary Installation. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetaryInstallationType Tag Format: [PlanetaryInstallationType:Value] Description: This tag specifies what size category a Planetary Installation SpawnGroup should spawn as. Allowed Values: Small Medium Large Default Value(s): Small Multiple Tag Allowed: No Tag: PlanetaryInstallationChance Tag Format: [PlanetaryInstallationChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Planetary Installation. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: SkipTerrainCheck Tag Format: [SkipTerrainCheck:Value] Description: This tag specifies if the SpawnGroup should skip checks related to terrain height variance. If used, this may result in stations spawning on uneven terrain. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RotateInstallations Tag Format: [RotateInstallations:Value1,Value2,Value3,etc] Description: This tag allows you to specify one or more rotations to use on an installation to give it a tilt in the ground. Each Value is replaced by the following: {X:0 Y:0 Z:0} . X affects Pitch, Y affects Yaw, Z affects Roll. Each of the X,Y,Z values accept a range between -45 to 45 . Providing a value of {X:100 Y:100 Z:100} will result in a randomized rotation being used. When providing multiple values, the first value will affect the first prefab, second value affects second prefab, etc. Allowed Values: Rotation (see above for example) If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ReverseForwardDirections Tag Format: [ReverseForwardDirections:Value] Description: This tag allows you to specify one or more of the spawned prefabs should have their 'Forward' direction reversed at spawn. When providing multiple values, the first value will affect the first prefab, second value affects second prefab, etc. Allowed Values: true false If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: InstallationTerrainValidation Tag Format: [InstallationTerrainValidation:Value] Description: This tag specifies if the SpawnGroup should only spawn on one of a few specified terrain types as defined by the AllowedTerrainTypes tag. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: InstallationSpawnsOnDryLand Tag Format: [InstallationSpawnsOnDryLand:Value] Description: This tag specifies if the SpawnGroup should spawn on Dry Land if you are using the Water Mod by Jakaria Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: InstallationSpawnsUnderwater Tag Format: [InstallationSpawnsUnderwater:Value] Description: This tag specifies if the SpawnGroup should spawn Underwater if you are using the Water Mod by Jakaria Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: InstallationSpawnsOnWaterSurface Tag Format: [InstallationSpawnsOnWaterSurface:Value] Description: This tag specifies if the SpawnGroup should spawn on the Water Surface if you are using the Water Mod by Jakaria. Installations spawned on the Water Surface will not be considered static grids. You should also ensure they are able to float as per the buoyancy rules of the Water Mod. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CutVoxelsAtAirtightCells Tag Format: [CutVoxelsAtAirtightCells:Value] Description: This tag specifies if the spawned station should have voxel material removed at any cell that is determined to be Air-Tight. Please note this is still experimental and not completely functional in some cases. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CutVoxelSize Tag Format: [CutVoxelSize:Value] Description: This tag specifies the size of the voxel cuts that should be used when cutting voxels with CutVoxelsAtAirtightCells . Allowed Values: Any Number Greater Than 0 Default Value(s): 2.7 Multiple Tag Allowed: No","title":"Planetary-Installations"},{"location":"Spawn-Conditions/#boss-encounters","text":"Tag: BossEncounterSpace Tag Format: [BossEncounterSpace:Value] Description: This tag specifies if the SpawnGroup should spawn as a Boss Encounter that only appears in Space. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BossEncounterAtmo Tag Format: [BossEncounterAtmo:Value] Description: This tag specifies if the SpawnGroup should spawn as a Boss Encounter that only appears in planetary atmosphere. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BossEncounterAny Tag Format: [BossEncounterAny:Value] Description: This tag specifies if the SpawnGroup should spawn as a Boss Encounter that can spawn in any environment. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: BossEncounterChance Tag Format: [BossEncounterChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Boss Encounter. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No Tag: BossCustomAnnounceEnable Tag Format: [BossCustomAnnounceEnable:Value] Description: This tag specifies if a custom chat message is broadcast to players when a Boss Encounter GPS signal is created. Allowed Values: true false Default Value(s): none Multiple Tag Allowed: No Tag: BossCustomAnnounceAuthor Tag Format: [BossCustomAnnounceAuthor:Value] Description: This tag specifies the Author name that appears with the chat message if BossCustomAnnounceEnable is set to true . Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: BossCustomAnnounceMessage Tag Format: [BossCustomAnnounceMessage:Value] Description: This tag specifies the 'Message' that appears with the chat message if BossCustomAnnounceEnable is set to true . Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: BossCustomGPSLabel Tag Format: [BossCustomGPSLabel:Value] Description: This tag specifies the name of the GPS signal that gets created when a Boss Encounter spawns. Allowed Values: Any String Value Default Value(s): Dangerous Encounter Multiple Tag Allowed: No Tag: BossCustomGPSColor Tag Format: [BossCustomGPSColor:Value] Description: This tag allows you to specify a custom color (in RGB) that will be used for the Boss Encounter GPS. Allowed Value(s): Vector Coordinates Formatted As: eg: {X:0 Y:0 Z:0} Default Value(s): N/A Multiple Tags Allowed: No","title":"Boss-Encounters"},{"location":"Spawn-Conditions/#creatures","text":"Creature spawning is a little bit different than using SpawnGroups for Grid Spawning. Because we are still using a SpawnGroup to spawn the creatures, we still need to include a Prefab in the SpawnGroup, otherwise the game will throw an error. Below is an example SpawnGroup you can use for spawning creatures: <SpawnGroup> <Id> <TypeId>SpawnGroupDefinition</TypeId> <SubtypeId>Example-SpawnGroup-CreatureTest</SubtypeId> </Id> <Description> [Modular Encounters SpawnGroup] [CreatureSpawn:true] [CreatureIds:SpaceSpider] [MinCreatureCount:2] [MaxCreatureCount:5] [MinCreatureDistance:25] [MaxCreatureDistance:30] </Description> <IsPirate>true</IsPirate> <Frequency>5.0</Frequency> <Prefabs> <Prefab SubtypeId=\"MES-CreaturePrefabDummy\"> <Position> <X>0.0</X> <Y>0.0</Y> <Z>0.0</Z> </Position> </Prefab> </Prefabs> </SpawnGroup> Below are the SpawnGroup tags are specific to Creature Spawning (you can also use many of the tags in the Common section with Creature Spawns as well): Tag: CreatureSpawn Tag Format: [CreatureSpawn:Value] Description: This tag specifies if the SpawnGroup should spawn as a Creature / Bot that appears on the planet surface. It's important to note that you must still include a prefab with your spawngroup (the game requires this), but it will not be used to spawn the creatures. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CreatureIds Tag Format: [CreatureIds:Value] Description: This tag specifies one or more Creature / Bot SubtypeIds that get used for spawning. If multiple Ids are provided, then each creature spawned will be chosen at random from the provided tags. Allowed Values: Any Creature / Bot SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: BotProfiles Tag Format: [BotProfiles:Value] Description: This tag specifies one or more Bot Spawn Profile SubtypeIDs that can be used to spawn bots with more customized parameters (model, role, color, etc). If you provide values to this tag, then CreatureIds values will not be used. Bots spawned with this method must use AiEnabled. Allowed Values: Bot Spawn Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: AiEnabledReady Tag Format: [AiEnabledReady:Value] Description: This tag specifies if the AiEnabled mod needs to be fully loaded / ready before the spawn is allowed. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AiEnabledModBots Tag Format: [AiEnabledModBots:Value] Description: This tag specifies if the Bots/Creatures spawned in this SpawnGroup are controlled by the AiEnabled mod. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AiEnabledRole Tag Format: [AiEnabledRole:Value] Description: This tag specifies the behavior/role that the AiEnabled bots will spawn with. Allowed Values: Any Eligible AiEnabled Role Id Default Value(s): N/A Multiple Tag Allowed: No Tag: MinCreatureCount Tag Format: [MinCreatureCount:Value] Description: This tag specifies the minimum amount of Creatures that are spawned if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or lower than MaxCreatureCount Default Value(s): 1 Multiple Tag Allowed: No Tag: MaxCreatureCount Tag Format: [MaxCreatureCount:Value] Description: This tag specifies the maximum amount of Creatures that are spawned if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or higher than MinCreatureCount Default Value(s): 1 Multiple Tag Allowed: No Tag: MinCreatureDistance Tag Format: [MinCreatureDistance:Value] Description: This tag specifies the minimum distance from the player Creatures that are spawned at if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or lower than MaxCreatureDistance Default Value(s): 100 Multiple Tag Allowed: No Tag: MaxCreatureDistance Tag Format: [MaxCreatureDistance:Value] Description: This tag specifies the maximum distance from the player Creatures that are spawned at if CreatureSpawn is true . Allowed Values: Any integer 1 or higher Value should be equal or higher than MinCreatureDistance Default Value(s): 150 Multiple Tag Allowed: No Tag: MinDistFromOtherCreaturesInGroup Tag Format: [MinDistFromOtherCreaturesInGroup:Value] Description: This tag specifies the minimum distance each creature/bot should spawn from one another if there are multiple creatures/bots in the SpawnGroup. Allowed Values: Any number 1 or higher Default Value(s): 5 Multiple Tag Allowed: No Tag: CreatureChance Tag Format: [CreatureChance:Value] Description: This tag specifies the chance (out of 100) this spawngroup has of being selected as eligible if being spawned as a Creature Spawn. Allowed Values: 0 - 100 Default Value(s): 100 Multiple Tag Allowed: No","title":"Creatures"},{"location":"Spawn-Conditions/#drone-encounters","text":"Tag: DroneEncounter Tag Format: [DroneEncounter:Value] Description: This tag specifies if the SpawnGroup should spawn as a Drone Encounter. These types of encounters spawn based on the rules in the tags below. They use their own timers and distances, and all conditions are determined by other other tags used in the Spawn Conditions Profile. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MinimumPlayerTime Tag Format: [MinimumPlayerTime:Value] Description: This tag specifies the Minimum Time in Seconds it takes for this encounter to be able to spawn near a player. Allowed Values: Any Integer Greater Than 0 Value must be less than MaximumPlayerTime Default Value(s): -1 Multiple Tag Allowed: No Tag: MaximumPlayerTime Tag Format: [MaximumPlayerTime:Value] Description: This tag specifies the Maximum Time in Seconds it takes for this encounter to be able to spawn near a player. Allowed Values: Any Integer Greater Than 0 Value must be greater than MinimumPlayerTime Default Value(s): 0 Multiple Tag Allowed: No Tag: FailedDroneSpawnResetsPlayerTime Tag Format: [FailedDroneSpawnResetsPlayerTime:Value] Description: This tag specifies if the SpawnGroup timer should be reset if the encounter cannot spawn for some other reason (other conditions, pathing, etc). This only happens if the timer has already reached the end. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MinDroneDistance Tag Format: [MinDroneDistance:Value] Description: This tag specifies the Minimum Distance in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be less than MaxDroneDistance Default Value(s): 1000 Multiple Tag Allowed: No Tag: MaxDroneDistance Tag Format: [MaxDroneDistance:Value] Description: This tag specifies the Maximum Distance in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be greater than MinDroneDistance Default Value(s): 1000 Multiple Tag Allowed: No Tag: MinDroneAltitude Tag Format: [MinDroneAltitude:Value] Description: This tag specifies the Minimum Altitude (if on a planet) in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be less than MaxDroneAltitude Default Value(s): 1000 Multiple Tag Allowed: No Tag: MaxDroneAltitude Tag Format: [MaxDroneAltitude:Value] Description: This tag specifies the Maximum Altitude (if on a planet) in Meters that the encounter should spawn from the player. Allowed Values: Any Number Greater Than 0 Value must be greater than MinDroneAltitude Default Value(s): 1000 Multiple Tag Allowed: No Tag: DroneInheritsSourceAltitude Tag Format: [DroneInheritsSourceAltitude:Value] Description: This tag specifies if the SpawnGroup should inherit the player altitude when spawning (eg take player existing altitude and add the altitude from the tags). This only happens on Planets. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Drone-Encounters"},{"location":"Spawn-Conditions/#static-encounters","text":"Tag: StaticEncounter Tag Format: [StaticEncounter:Value] Description: This tag specifies if the SpawnGroup should spawn as a Static Encounter. These types of encounters spawn at specific parts of the game world, and only appear once. They are useful for scenario building where you might not want an encounter to appear until after certain conditions are met Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: StaticEncounterCoords Tag Format: [StaticEncounterCoords:Value] Description: This tag specifies the exact coordinates in the world that a static encounter will appear at. The orientation of the encounter is determined by the StaticEncounterForward and StaticEncounterUp tags. Allowed Values: Vector3D Format Coordinates eg: {X:1000 Y:1000 Z:1000} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterForward Tag Format: [StaticEncounterForward:Value] Description: This tag specifies the Forward Orientation of the static encounter. It must be paired with a valid StaticEncounterUp tag that is perpendicular to this value. Allowed Values: Vector3D Format Coordinates eg: {X:0 Y:0 Z:1} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterUp Tag Format: [StaticEncounterUp:Value] Description: This tag specifies the Up Orientation of the static encounter. It must be paired with a valid StaticEncounterForward tag that is perpendicular to this value. Allowed Values: Vector3D Format Coordinates eg: {X:0 Y:0 Z:1} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterUsePlanetDirectionAndAltitude Tag Format: [StaticEncounterUsePlanetDirectionAndAltitude:Value] Description: This tag specifies if the Static Encounter should not use the StaticEncounterCoords , and instead dynamically generate coordinates from the center of a provided planet at a given direction from the core and altitude from the surface at that direction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: StaticEncounterPlanet Tag Format: [StaticEncounterPlanet:Value] Description: This tag specifies the name of the Planet that the static encounter will appear on if calculating the spawning coords dynamically. This tag is only used if StaticEncounterUsePlanetDirectionAndAltitude is true Allowed Values: Any Planet SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Tag: StaticEncounterPlanetDirection Tag Format: [StaticEncounterPlanetDirection:Value] Description: This tag specifies the Direction from the center of the planet that will be used to calculate the spawning coordinates of the Static Encounter. This tag is only used if StaticEncounterUsePlanetDirectionAndAltitude is true Allowed Values: Vector3D Format Coordinates eg: {X:0 Y:0 Z:1} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: StaticEncounterPlanetAltitude Tag Format: [StaticEncounterPlanetAltitude:Value] Description: This tag specifies the Altitude from the surface that will be used to calculate the spawning coordinates of the Static Encounter. This tag is only used if StaticEncounterUsePlanetDirectionAndAltitude is true Allowed Values: Any Number Default Value(s): 0 Multiple Tag Allowed: No Tag: ForceExactPositionAndOrientation Tag Format: [ForceExactPositionAndOrientation:Value] Description: This tag specifies if the Static Encounter should force the orientation data provided in the Spawn Conditions tags after the grid has spawned. Use this if you're having issues with an encounter not being in the correct orientations at spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Static-Encounters"},{"location":"Spawn-Conditions/#other-npcs","text":"Tag: RivalAiSpaceSpawn Tag Format: [RivalAiSpaceSpawn:Value] Description: This tag specifies if a RivalAI Spawned Encounter should spawn in Space (No gravity or atmosphere). Please note this tag is only used for encounters spawned by the Spawning System in RivalAI. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RivalAiAtmosphericSpawn Tag Format: [RivalAiAtmosphericSpawn:Value] Description: This tag specifies if a RivalAI Spawned Encounter should spawn in Atmosphere. Please note this tag is only used for encounters spawned by the Spawning System in RivalAI. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RivalAiAnySpawn Tag Format: [RivalAiAnySpawn:Value] Description: This tag specifies if a RivalAI Spawned Encounter should spawn in any environment. Please note this tag is only used for encounters spawned by the Spawning System in RivalAI. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Other-NPCs"},{"location":"Spawn-Conditions/#general","text":"Tag: ChanceCeiling Tag Format: [ChanceCeiling:Value] Description: This tag specifies the maximum value to use when applying a chance tag to an encounter type. Example: If this tag was set to 200 and you had a SpaceCargoShipChance tag set to 100 , then that encounter would have a 50% chance of appearing. Allowed Values: Any Integer Greater Than 0 Default Value(s): 100 Multiple Tag Allowed: No Tag: ForceStaticGrid Tag Format: [ForceStaticGrid:Value] Description: This tag specifies if a SpawnGroup should be set to static when spawned. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RotateFirstCockpitToForward Tag Format: [RotateFirstCockpitToForward:Value] Description: This tag allows you to specify if a grid should be spawned with its first valid cockpit facing the spawn travel path. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: SpawnRandomCargo Tag Format: [SpawnRandomCargo:Value] Description: This tag specifies if the ship should spawn with random cargo in specified containers. This is the same system as what is used in the ContainerTypes.sbc file. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: DisableDampeners Tag Format: [DisableDampeners:Value] Description: This tag specifies whether or not the grid should spawn with Inertia Dampeners enabled or disabled. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ReactorsOn Tag Format: [ReactorsOn:Value] Description: This tag specifies if the grid should spawn with Reactors on or off. Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: RemoveVoxelsIfGridRemoved Tag Format: [RemoveVoxelsIfGridRemoved:Value] Description: This tag specifies if any Voxels that are spawned with the encounter should be removed if the grid is no longer present (only works for Random Encounters and Planetary Installations). Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No","title":"General"},{"location":"Spawn-Conditions/#combat","text":"Tag: UseCombatPhase Tag Format: [UseCombatPhase:Value] Description: This tag specifies if this encounter should only spawn during a Combat Phase. If left false, the encounter will only spawn during a Peace phase. If the combat phase system is disabled in config, the encounter will omit this check. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IgnoreCombatPhase Tag Format: [IgnoreCombatPhase:Value] Description: This tag specifies if the encounter should always spawn, regardless of whether the world is in Combat or Peace phase. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CombatPhaseChecksInPersistentCondition Tag Format: [CombatPhaseChecksInPersistentCondition:Value] Description: This tag should be set to true if you are using any of the Combat Phase tags in a Persistent SpawnConditions profile, otherwise it can be left false . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Combat"},{"location":"Spawn-Conditions/#cost","text":"Tag: UseSandboxCounterCosts Tag Format: [UseSandboxCounterCosts:Value] Description: This tag specifies if the SpawnGroup should check the values of specified Sandbox Counters. If the minimum values are met, then the spawn would become eligible and those values are then subtracted from the Sandbox Counters Allowed Values: true false Default Value(s): true Multiple Tag Allowed: No Tag: SandboxCounterCostNames Tag Format: [SandboxCounterCostNames:Value] Description: This tag specifies the name of the Sandbox Counter you want to check the amount of. This tag should be paired with the SandboxCounterCostAmounts tag to prevent confusion. Allowed Values: Any Sandbox Counter Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: SandboxCounterCostAmounts Tag Format: [SandboxCounterCostAmounts:Value] Description: This tag specifies the minimum Sandbox Counter value that must be met for the spawn to be eligible. This is also the amount that will be subtracted from the counter at spawn. This tag should be paired with the SandboxCounterCostNames tag to prevent confusion. Allowed Values: Any Integer Greater or Equal to 0 Default Value(s): 0 Multiple Tag Allowed: Yes","title":"Cost"},{"location":"Spawn-Conditions/#date-time","text":"Tag: UseDateTimeYearRange Tag Format: [UseDateTimeYearRange:Value] Description: This tag allows you to specify if a range of Years should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeYear Tag Format: [MinDateTimeYear:Value] Description: This tag allows you to specify the minimum value for Years if using the UseDateTimeYearRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeYear if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeYear Tag Format: [MaxDateTimeYear:Value] Description: This tag allows you to specify the maximum value for Years if using the UseDateTimeYearRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeYear if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeMonthRange Tag Format: [UseDateTimeMonthRange:Value] Description: This tag allows you to specify if a range of Months should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeMonth Tag Format: [MinDateTimeMonth:Value] Description: This tag allows you to specify the minimum value for Months if using the UseDateTimeMonthRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeMonth if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeMonth Tag Format: [MaxDateTimeMonth:Value] Description: This tag allows you to specify the maximum value for Months if using the UseDateTimeMonthRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeMonth if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeDayRange Tag Format: [UseDateTimeDayRange:Value] Description: This tag allows you to specify if a range of Days should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeDay Tag Format: [MinDateTimeDay:Value] Description: This tag allows you to specify the minimum value for Days if using the UseDateTimeDayRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeDay if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeDay Tag Format: [MaxDateTimeDay:Value] Description: This tag allows you to specify the maximum value for Days if using the UseDateTimeDayRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeDay if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeHourRange Tag Format: [UseDateTimeHourRange:Value] Description: This tag allows you to specify if a range of Hours should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeHour Tag Format: [MinDateTimeHour:Value] Description: This tag allows you to specify the minimum value for Hours if using the UseDateTimeHourRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeHour if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeHour Tag Format: [MaxDateTimeHour:Value] Description: This tag allows you to specify the maximum value for Hours if using the UseDateTimeHourRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeHour if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: UseDateTimeMinuteRange Tag Format: [UseDateTimeMinuteRange:Value] Description: This tag allows you to specify if a range of Minutes should be used to determine if this encounter is allowed to spawn. Uses local/server time. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDateTimeMinute Tag Format: [MinDateTimeMinute:Value] Description: This tag allows you to specify the minimum value for Minutes if using the UseDateTimeMinuteRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Less Than or Equal to MaxDateTimeMinute if provided. Default Value(s): 0 Multiple Tags Allowed: No Tag: MaxDateTimeMinute Tag Format: [MaxDateTimeMinute:Value] Description: This tag allows you to specify the maximum value for Minutes if using the UseDateTimeMinuteRange tag Allowed Value(s): Any Integer Greater/Equal To 0 Value must be Greater Than or Equal to MinDateTimeMinute if provided. Default Value(s): 0 Multiple Tags Allowed: No","title":"Date-Time"},{"location":"Spawn-Conditions/#economy","text":"Tag: UsePlayerCredits Tag Format: [UsePlayerCredits:Value] Description: This tag allows you to specify if a check should be done to determine how many Space Credits (currency) one or more players in the spawn area have before allowing the spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IncludeAllPlayersInRadius Tag Format: [IncludeAllPlayersInRadius:Value] Description: This tag allows you to specify if all players within an area are counted when calculating how many credits players have. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: IncludeFactionBalance Tag Format: [IncludeFactionBalance:Value] Description: This tag allows you to specify if player Faction Credit Balance should also be considered when calculating how many credits players have. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlayerCreditsCheckRadius Tag Format: [PlayerCreditsCheckRadius:Value] Description: This tag allows you to specify the distance from the proposed spawn location that is checked for players when calculating total credits. Allowed Values: Any Number Greater Than 0 Default Value(s): 15000 Multiple Tag Allowed: No Tag: MinimumPlayerCredits Tag Format: [MinimumPlayerCredits:Value] Description: This tag specifies the minimum amount of credits that player(s) must have before the SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value Should Be Lower Than MaximumPlayerCredits If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaximumPlayerCredits Tag Format: [MaximumPlayerCredits:Value] Description: This tag specifies the maximum amount of credits that player(s) must have before the SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value Should Be Higher Than MinimumPlayerCredits If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: ChargeNpcFactionForSpawn Tag Format: [ChargeNpcFactionForSpawn:Value] Description: This tag allows you to specify if an encounter should only spawn if the NPC faction has enough credits, which are then depleted from the faction balance on successful spawning. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: ChargeForSpawning Tag Format: [ChargeForSpawning:Value] Description: This tag specifies the amount of credits that is depleted from the NPC bank account if using the ChargeNpcFactionForSpawn tag. Allowed Value(s): Any Integer Greater/Equal To `0' Default Value(s): 0 Multiple Tags Allowed: No","title":"Economy"},{"location":"Spawn-Conditions/#faction","text":"Tag: FactionOwner Tag Format: [FactionOwner:Value] Description: This tag allows you to assign a SpawnGroup to be owned by a specific NPC faction. Factions with human players cannot be assigned. To assign a faction, replace Value with the Faction Tag you want to use. Eg: SPRT , SPID , etc. You can also remove ownership all together by providing Nobody as your value. If your provided tag cannot be found (IE: there's no NPC faction with that tag), the SpawnGroup will be set to be owned by Nobody . Default value is SPRT if tag is not included. Allowed Values: Any Valid FactionTag or Nobody Default Value(s): SPRT Multiple Tag Allowed: No Tag: UseRandomMinerFaction Tag Format: [UseRandomMinerFaction:Value] Description: If set to true , the spawned prefabs in this SpawnGroup will use a random NPC faction that is designated as a Miner Faction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseRandomBuilderFaction Tag Format: [UseRandomBuilderFaction:Value] Description: If set to true , the spawned prefabs in this SpawnGroup will use a random NPC faction that is designated as a Builder Faction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseRandomTraderFaction Tag Format: [UseRandomTraderFaction:Value] Description: If set to true , the spawned prefabs in this SpawnGroup will use a random NPC faction that is designated as a Trader Faction. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Faction"},{"location":"Spawn-Conditions/#known-player-location","text":"Tag: UseKnownPlayerLocations Tag Format: [UseKnownPlayerLocations:Value] Description: This tag specifies if a SpawnGroup should only spawn if the area was designated as a 'Player Known Location' (by RivalAI or other mod). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: KnownPlayerLocationMustMatchFaction Tag Format: [KnownPlayerLocationMustMatchFaction:Value] Description: This tag specifies if a SpawnGroup should only spawn in a Known Player Location if the 'FactionOwner' tag matches the faction of the created Location. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: KnownPlayerLocationMinSpawnedEncounters Tag Format: [KnownPlayerLocationMinSpawnedEncounters:Value] Description: This tag allows you to specify the Minimum number of spawns that must have occured in a Known Player Location before this SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value should be lower than KnownPlayerLocationMaxSpawnedEncounters if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: KnownPlayerLocationMaxSpawnedEncounters Tag Format: [KnownPlayerLocationMaxSpawnedEncounters:Value] Description: This tag allows you to specify the Maximum number of spawns that are allowed to have occured in a Known Player Location before this SpawnGroup is allowed to spawn. Allowed Values: Any Number Equal or Greater Than 0 Value should be higher than KnownPlayerLocationMinSpawnedEncounters if tag is used. Default Value(s): -1 Multiple Tag Allowed: No","title":"Known-Player-Location"},{"location":"Spawn-Conditions/#misc","text":"Tag: PlaySoundAtSpawnTriggerPosition Tag Format: [PlaySoundAtSpawnTriggerPosition:Value] Description: This tag specifies if a sound effect should play at the spawn location when the spawn is completed using this condition profile. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SpawnTriggerPositionSoundId Tag Format: [SpawnTriggerPositionSoundId:Value] Description: This tag specifies the Audio Definition SubtypeId of the sound you want to play if using PlaySoundAtSpawnTriggerPosition . Allowed Values: Any Sound Definition SubtypeId Default Value(s): N/A Multiple Tag Allowed: No","title":"Misc"},{"location":"Spawn-Conditions/#mods","text":"Tag: RequireAllMods Tag Format: [RequireAllMods:Value1,Value2,etc] Description: This tag allows you to specify what mods must be loaded in the game world in order for a SpawnGroup to appear. If all mods provided are loaded, the SpawnGroup can appear. Mods are identified by their Steam Workshop IDs. If tag is not included, then no mods requirements will be used by default. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: RequireAnyMods Tag Format: [RequireAnyMods:Value1,Value2,etc] Description: This tag allows you to specify what mods must be loaded in the game world in order for a SpawnGroup to appear. If any of the mods provided are loaded, the SpawnGroup can appear. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ExcludeAllMods Tag Format: [ExcludeAllMods:Value1,Value2,etc] Description: This tag allows you to specify what mods cannot be loaded in the game world in order for a SpawnGroup to appear. If all mods provided are not loaded, this Spawn Group can appear. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ExcludeAnyMods Tag Format: [ExcludeAnyMods:Value1,Value2,etc] Description: This tag allows you to specify what mods cannot be loaded in the game world in order for a SpawnGroup to appear. If any of the mods provided are not loaded, this SpawnGroup can appear. Allowed Values: Any Steam Workshop ID If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: ModBlockExists Tag Format: [ModBlockExists:Value1,Value2,etc] Description: This tag allows you to specify one or more Block SubtypeIds that must be present in the game session for the SpawnGroup to be able to appear. Allowed Values: Any Modded Block SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No","title":"Mods"},{"location":"Spawn-Conditions/#planetary","text":"Tag: MinAirDensity Tag Format: [MinAirDensity:Value] Description: This tag allows you to specify the minimum Air Density at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be lower than MaxAirDensity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxAirDensity Tag Format: [MaxAirDensity:Value] Description: This tag allows you to specify the maximum Air Density at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be higher than MinAirDensity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MinGravity Tag Format: [MinGravity:Value] Description: This tag allows you to specify the minimum Gravity at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be lower than MaxGravity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxGravity Tag Format: [MaxGravity:Value] Description: This tag allows you to specify the maximum Gravity at the spawn coordinates before it is allowed to spawn. Allowed Values: Floating Point Value Between 0 and 1 Value must be higher than MinGravity if tag is used. Default Value(s): -1 Multiple Tag Allowed: No Tag: MinSpawnFromPlanetSurface Tag Format: [MinSpawnFromPlanetSurface:Value] Description: This tag allows you to specify how far from the nearest planet's surface the player must be before this encounter can spawn. If the player is within this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be lower than MaxSpawnFromPlanetSurface if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxSpawnFromPlanetSurface Tag Format: [MaxSpawnFromPlanetSurface:Value] Description: This tag allows you to specify how far from the nearest planet's surface the player must be within for this encounter can spawn. If the player is further than this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be higher than MinSpawnFromPlanetSurface if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: MinWaterDepth Tag Format: [MinWaterDepth:Value] Description: This tag allows you to specify how deep underwater an encounter must spawn if eligible to spawn underwater. For grids that spawn on the water surface, this value is also used as the minimum water depth beneath the surface (so you don't end up with grids spawning in beached like CptArthur's boats) This is used with the Water Mod by Jakaria Allowed Values: Any Number Greater Than 0 Default Value(s): 0 Multiple Tag Allowed: No Tag: UseDayOrNightOnly Tag Format: [UseDayOrNightOnly:Value] Description: This tag will specify if a spawn should only appear if it is either day or night on a planet (specified in SpawnOnlyAtNight ). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SpawnOnlyAtNight Tag Format: [SpawnOnlyAtNight:Value] Description: This tag will specify if a spawn should only appear at night on a planet if true , otherwise it will only appear during the day if false . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseWeatherSpawning Tag Format: [UseWeatherSpawning:Value] Description: This tag will specify if a spawn should only appear while the player is inside of one or more specified Weather events. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedWeatherSystems Tag Format: [AllowedWeatherSystems:Value1,Value2,etc] Description: This tag allows you to specify what weather systems are valid for spawning if UseWeatherSpawning is enabled. Allowed Values: Any Weather SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: UseTerrainTypeValidation Tag Format: [UseTerrainTypeValidation:Value] Description: This tag will specify if a spawn should only appear while the player is in an area that contains a certain type of terrain. Terrain is check in random spots around the player, and the most commonly found is what is considered for spawning purposes. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedTerrainTypes Tag Format: [AllowedTerrainTypes:Value1,Value2,etc] Description: This tag allows you to specify what terrain types near the player are valid for spawning if UseTerrainTypeValidation is enabled. Allowed Values: Any Voxel Material MaterialTypeName Acceptable values can be found in VoxelMaterials_planetary.sbc Game File If providing multiple values, use comma with no spaces as shown in Tag Format false Default Value(s): none Multiple Tag Allowed: No Tag: PlanetBlacklist Tag Format: [PlanetBlacklist:Value1,Value2,etc] Description: This tag allows you to specify what planets the encounter is not allow to spawn on/near (for applicable encounters). Allowed Values: Any Planet SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: PlanetWhitelist Tag Format: [PlanetWhitelist:Value1,Value2,etc] Description: This tag allows you to specify what planets the encounter will only spawn on/near (for applicable encounters). Allowed Values: Any Planet SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: PlanetRequiresVacuum Tag Format: [PlanetRequiresVacuum:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets without atmosphere. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetRequiresAtmo Tag Format: [PlanetRequiresAtmo:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets with atmosphere. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetRequiresOxygen Tag Format: [PlanetRequiresOxygen:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets with atmosphere and breathable oxygen. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetMinimumSize Tag Format: [PlanetMinimumSize:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets larger than the provided diameter (in meters). Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than PlanetMaximumSize If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: PlanetMaximumSize Tag Format: [PlanetMaximumSize:Value] Description: This tag will restrict the SpawnGroup to only spawn on/near planets no larger than the provided diameter (in meters). Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than PlanetMinimumSize If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: DirectionFromPlanetCenter Tag Format: [DirectionFromPlanetCenter:Value] Description: This tag allows you to specify one or more Directional Vectors that are used as a reference point to measure the spawn coordinate angle if using the MinAngleFromPlanetCenterDirection or MaxAngleFromPlanetCenterDirection tags. This Check only fails if all direction/angle checks have failed. Allowed Values: Direction Vector In Following Format: {X:0 Y:0 Z:1} Default Value(s): N/A Multiple Tag Allowed: Yes Tag: MinAngleFromPlanetCenterDirection Tag Format: [MinAngleFromPlanetCenterDirection:Value] Description: This tag specifies the minimum angle from an angle provided by DirectionFromPlanetCenter that must be satisfied in order to be spawned. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than MaxAngleFromPlanetCenterDirection If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxAngleFromPlanetCenterDirection Tag Format: [MaxAngleFromPlanetCenterDirection:Value] Description: This tag specifies the maximum angle from an angle provided by DirectionFromPlanetCenter that must be satisfied in order to be spawned. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than MinAngleFromPlanetCenterDirection If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No","title":"Planetary"},{"location":"Spawn-Conditions/#players","text":"Tag: UsePlayerCondition Tag Format: [UsePlayerCondition:Value] Description: nan Allowed Values: true false Multiple Tag Allowed: no Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: nan Allowed Values: Any name string excluding : , [ , ] Multiple Tag Allowed: yes Tag: PlayerConditionCheckRadius Tag Format: [PlayerConditionCheckRadius:Value] Description: nan Allowed Values: Any interger equal or greater than 0 Multiple Tag Allowed: no Tag: UsePlayerCountCheck Tag Format: [UsePlayerCountCheck:Value] Description: This tag allows you to specify if the spawner should do a count of the active players in the area or in the game world before spawning. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlayerCountCheckRadius Tag Format: [PlayerCountCheckRadius:Value] Description: This tag allows you to specify the radius from the spawn area that the spawner should check for active players. If this tag is not used, then it will count all players currently online. Allowed Values: Any Number Greater Than 0 Default Value(s): -1 Multiple Tag Allowed: No Tag: MinimumPlayers Tag Format: [MinimumPlayers:Value] Description: This tag specifies the minimum amount of players that need to be detected to allow the spawn. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than MaximumPlayers If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaximumPlayers Tag Format: [MaximumPlayers:Value] Description: This tag specifies the maximum amount of players that need to be detected to allow the spawn. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than MinimumPlayers If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: RequiredPlayersOnline Tag Format: [RequiredPlayersOnline:Value1] Description: This tag allows you to specify one or more PLayer Steam User IDs that must be online in the game session for the SpawnGroup to be able to appear. If all the listed players are online, then the spawn is eligible Allowed Values: Any Steam User Id (64 bit) Default Value(s): none Multiple Tag Allowed: Yes Tag: RequiredAnyPlayersOnline Tag Format: [RequiredAnyPlayersOnline:Value1] Description: This tag allows you to specify one or more PLayer Steam User IDs that must be online in the game session for the SpawnGroup to be able to appear. If any of the listed players are online, then the spawn is eligible. Allowed Values: Any Steam User Id (64 bit) Default Value(s): none Multiple Tag Allowed: Yes","title":"Players"},{"location":"Spawn-Conditions/#prefabs","text":"Tag: PrefabSpawningMode Tag Format: [PrefabSpawningMode:Value1] Description: This tag allows you to specify how the prefabs in the SpawnGroup will be spawned. The default value All spawns all prefabs at their specified positions offsets. The Random value will choose 1 random prefab and use that for the spawn. The SelectedIndexes value allows you to provide a list of indexes that are specifically chosen for spawning (eg: SpawnGroup has 4 prefabs, and you provide indexes 0 and 2 , it will spawn the first prefab and the 3rd prefab). And finally the RandomSelectedIndexes allows you to create groups of indexes and then the spawner will cycle through each group and spawn one prefab randomly from the provided indexes in the group. Allowed Values: All Random SelectedIndexes RandomSelectedIndexes RandomFixedCount Default Value(s): All Multiple Tag Allowed: No Tag: AllowPrefabIndexReuse Tag Format: [AllowPrefabIndexReuse:Value] Description: This tag specifies if prefab indexes can be used more than once when using SelectedIndexes or RandomSelectedIndexes (eg, 0 can be used twice). This should only be used if you are also using PrefabOffsetOverrides , otherwise prefabs would spawn on top of eachother and cause clang and other violent explosions. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PrefabIndexes Tag Format: [PrefabIndexes:Value] Description: This tag allows you to specify a number of index values that are used to determine which prefabs should spawn if using the SelectedIndexes value in the PrefabSpawningMode tag. Allowed Values: Any Number 0 or Greater Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabIndexGroupNames Tag Format: [PrefabIndexGroupNames:Value] Description: This tag allows you to specify a number of index group names that are paried with values in the PrefabIndexGroupValues tag, which are used to determine which prefabs should spawn if using the RandomSelectedIndexes value in the PrefabSpawningMode tag. Allowed Values: Any Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabIndexGroupValues Tag Format: [PrefabIndexGroupValues:Value] Description: This tag allows you to specify a number of indexes that are paired with values in the PrefabIndexGroupNames tag, which are used to determine which prefabs should spawn if using the RandomSelectedIndexes value in the PrefabSpawningMode tag. Allowed Values: Any Number 0 or Greater Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabOffsetOverrides Tag Format: [PrefabOffsetOverrides:Value] Description: This tag allows you to specify one or more sets of position offset coordinates that are used to override the position offsets of the prefabs. Example: if you are randomly spawning 3 prefabs, then you can force them into specific formations, regardless of the grids that are chosen. Allowed Values: Vector3D Coordinates eg: '{X:0 Y:0 Z:0}' Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PrefabFixedCount Tag Format: [PrefabFixedCount:Value] Description: This tag allows you to specify a number of prefabs that should be randomly selected for spawn if using the RandomFixedCount value in the PrefabSpawningMode tag. It is recommended to also use the PrefabOffsetOverrides tags to ensure you don't get any prefabs overlapping positions. Allowed Values: Any Number 1 or Greater Default Value(s): N/A Multiple Tag Allowed: Yes","title":"Prefabs"},{"location":"Spawn-Conditions/#reputation","text":"Tag: UsePlayerFactionReputation Tag Format: [UsePlayerFactionReputation:Value] Description: This tag specifies if player reputation should be considered when spawning a SpawnGroup nearby. If any player meets the conditions you provide, the SpawnGroup will be valid for spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlayerReputationCheckRadius Tag Format: [PlayerReputationCheckRadius:Value] Description: This tag allows you to specify the distance from the proposed spawn location that is checked for players when checking reputation. Allowed Values: Any Number Greater Than 0 Default Value(s): 15000 Multiple Tag Allowed: No Tag: CheckReputationAgainstOtherNPCFaction Tag Format: [CheckReputationAgainstOtherNPCFaction:Value] Description: This tag allows you to provide a separate faction Tag to check reputation against instead of the faction this SpawnGroup would use. Allowed Values: Any FactionTag Default Value(s): false Multiple Tag Allowed: No Tag: MinimumReputation Tag Format: [MinimumReputation:Value] Description: This tag allows you to specify the Minimum Reputation a player must have for the SpawnGroup to be able to spawn. Allowed Values: Any Number Between -1500 and 1500 Value Should Be Lower Than MaximumReputation If Tag is Provided Default Value(s): -1501 Multiple Tag Allowed: No Tag: MaximumReputation Tag Format: [MaximumReputation:Value] Description: This tag allows you to specify the Maximum Reputation a player must have for the SpawnGroup to be able to spawn. Allowed Values: Any Number Between -1500 and 1500 Value Should Be Higher Than MinimumReputation If Tag is Provided Default Value(s): 1501 Multiple Tag Allowed: No","title":"Reputation"},{"location":"Spawn-Conditions/#restrictions","text":"Tag: UniqueEncounter Tag Format: [UniqueEncounter:Value] Description: This tag specifies if a SpawnGroup should only spawn once per world instance. After the group spawns, it would not be selected for spawning again. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AdminSpawnOnly Tag Format: [AdminSpawnOnly:Value] Description: This tag specifies if a SpawnGroup should only be spawned when an admin triggers the spawn via chat command. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: MustSpawnInPlanetaryLane Tag Format: [MustSpawnInPlanetaryLane:Value] Description: This tag specifies if a SpawnGroup should only be spawned inside of a planetary lane (ie, in the space directly between 2 planets). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetaryLanePlanetNameA Tag Format: [PlanetaryLanePlanetNameA:Value] Description: This tag specifies if a SpawnGroup should only be spawned inside of a planetary lane if one of the planet names matches the value of this tag. Requires the MustSpawnInPlanetaryLane tag. Allowed Values: Any Planet Name Default Value(s): N/A Multiple Tag Allowed: No Tag: PlanetaryLanePlanetNameB Tag Format: [PlanetaryLanePlanetNameB:Value] Description: This tag specifies if a SpawnGroup should only be spawned inside of a planetary lane if one of the planet names matches the value of this tag. Requires the MustSpawnInPlanetaryLane tag. Allowed Values: Any Planet Name Default Value(s): N/A Multiple Tag Allowed: No Tag: UseRemoteControlCodeRestrictions Tag Format: [UseRemoteControlCodeRestrictions:Value] Description: This tag specifies if a SpawnGroup should check the area for active Remote Control blocks that have registered a specific code, and then apply a Min/Max distance requirement from that block to determine eligiblility. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RemoteControlCode Tag Format: [RemoteControlCode:Value] Description: This tag specifies the Remote Control code that will be searched for if you've enabled the UseRemoteControlCodeRestrictions tag. Allowed Values: Any Remote Control Code Name Default Value(s): none Multiple Tag Allowed: No Tag: RemoteControlCodeMinDistance Tag Format: [RemoteControlCodeMinDistance:Value] Description: This tag specifies the minimum distance from an eligible Remote Control block that this SpawnGroup is allowed to spawn at if you've enabled the UseRemoteControlCodeRestrictions tag. If tag is not provided, or a value of -1 is used, then minimum distance is not considered. Allowed Values: Any Number Greater or Equal to -1 Must be less than RemoteControlCodeMaxDistance if tag exists Default Value(s): -1 Multiple Tag Allowed: No Tag: RemoteControlCodeMaxDistance Tag Format: [RemoteControlCodeMaxDistance:Value] Description: This tag specifies the maximum distance from an eligible Remote Control block that this SpawnGroup is allowed to spawn at if you've enabled the UseRemoteControlCodeRestrictions tag. If tag is not provided, or a value of -1 is used, then maximum distance is not considered. Allowed Values: Any Number Greater or Equal to -1 Must be greater than RemoteControlCodeMinDistance if tag exists Default Value(s): -1 Multiple Tag Allowed: No","title":"Restrictions"},{"location":"Spawn-Conditions/#settings","text":"","title":"Settings"},{"location":"Spawn-Conditions/#threat","text":"Tag: UseThreatLevelCheck Tag Format: [UseThreatLevelCheck:Value] Description: This tag will restrict the SpawnGroup to only spawn if the threat level near a player is within specified parameters. Threat score is specified in ThreatScoreMinimum and ThreatScoreMaximum . For more information on how Threat Scoring works, Click Here . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ThreatLevelCheckRange Tag Format: [ThreatLevelCheckRange:Value] Description: This tag specifies the radius (in meters) near the player that will be scanned by the spawner to determine the player threat level. Allowed Values: Any Number Greater Than 0 Default Value(s): 5000 Multiple Tag Allowed: No Tag: ThreatIncludeOtherNpcOwners Tag Format: [ThreatIncludeOtherNpcOwners:Value] Description: This tag specifies if a threat scan should also include grids owned by other NPCs in the scan radius. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ThreatScoreMinimum Tag Format: [ThreatScoreMinimum:Value] Description: This tag allows you to specify the minimum threat score within the player area before the spawn group is able to spawn. If the score is lower, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than ThreatScoreMaximum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: ThreatScoreMaximum Tag Format: [ThreatScoreMaximum:Value] Description: This tag allows you to specify the maximum threat score within the player area before the spawn group is able to spawn. If the score is higher, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than ThreatScoreMinimum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: ThreatScorePlanetaryHandicap Tag Format: [ThreatScorePlanetaryHandicap:Value] Description: This tag allows you to specify a value that is added to the Min/Max Threat values if the grid is attempting to spawn in gravity. This allows you to set increased / decreased difficulty for spawns that happen in a gravity well. Allowed Value(s): Any Integer Greater/Equal To 0 Multiple Tags Allowed: No Tag: UsePCUCheck Tag Format: [UsePCUCheck:Value] Description: This tag will restrict the SpawnGroup to only spawn if the PCU total near a player is within specified parameters. PCU score is specified in PCUMinimum and PCUMaximum . Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PCUCheckRadius Tag Format: [PCUCheckRadius:Value] Description: This tag specifies the radius (in meters) near the player that will be scanned by the spawner to determine the PCU level. Allowed Values: Any Number Greater Than 0 Default Value(s): 5000 Multiple Tag Allowed: No Tag: PCUMinimum Tag Format: [PCUMinimum:Value] Description: This tag allows you to specify the minimum PCU score within the player area before the spawn group is able to spawn. If the score is lower, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Lower Than PCUMaximum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: PCUMaximum Tag Format: [PCUMaximum:Value] Description: This tag allows you to specify the maximum PCU score within the player area before the spawn group is able to spawn. If the score is higher, then the spawn group will not appear. Allowed Values: Any Number Greater Than 0 Value Should Be Higher Than PCUMinimum If Tag is Provided Default Value(s): -1 Multiple Tag Allowed: No Tag: UseDifficulty Tag Format: [UseDifficulty:Value] Description: This tag allows your spawngroup to check the Difficulty value in the General config when considering spawn eligibility. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinDifficulty Tag Format: [MinDifficulty:Value] Description: This tag specifies the minimum difficulty required to spawn an encounter if using the UseDifficulty tag. Allowed Value(s): Any Integer Value Value must be Less Than or Equal to MaxDifficulty if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: MaxDifficulty Tag Format: [MaxDifficulty:Value] Description: This tag specifies the maximum difficulty required to spawn an encounter if using the UseDifficulty tag. Allowed Value(s): Any Integer Value Value must be Greater Than or Equal to MinDifficulty if provided. Default Value(s): -1 Multiple Tags Allowed: No","title":"Threat"},{"location":"Spawn-Conditions/#variables","text":"Tag: SandboxVariables Tag Format: [SandboxVariables:Value1,Value2,Value3,etc] Description: This tag allows you to specify the names of Sandbox Boolean Varibles (via IMyUtilities) that must be true in order for the group to spawn. Allowed Values: Any Variable Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: FalseSandboxVariables Tag Format: [FalseSandboxVariables:Value1,Value2,Value3,etc] Description: This tag allows you to specify the names of Sandbox Boolean Varibles (via IMyUtilities) that must be false in order for the group to spawn. If the Sandbox variable is not defined yet, this counts as false as well. Allowed Values: Any Variable Name If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Tag: AttachModStorageComponentToGrid Tag Format: [AttachModStorageComponentToGrid:Value] Description: This tag allows you to specify whether or not a custom ModStorageComponent Dictionary Key/Value should be added to your grid(s). Please ensure that the Guid you plan to use is also defined in your mod's EntityContainers.sbc file. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: StorageKey Tag Format: [StorageKey:Value] Description: If AttachModStorageComponentToGrid is set to true, this tag will allow you to specify the Guid that is used as the Key in your Key/Value entry. Allowed Values: Any valid Guid String eg F778FB78-3400-44A8-AEF4-16B5525A0B54 Default Value(s): none Multiple Tag Allowed: No Tag: StorageValue Tag Format: [StorageValue:Value] Description: If AttachModStorageComponentToGrid is set to true, this tag will allow you to specify the String that is used as the Value in your Key/Value entry. Allowed Values: Any String Value Default Value(s): none Multiple Tag Allowed: No Tag: CustomApiConditions Tag Format: [CustomApiConditions:Value] Description: This tag allows you to specify the name of a custom method that is executed when this encounter tries to spawn. The custom method is defined in the MES API. Click here to learn more about the API and how to register your custom method. Allowed Value(s): Any Registered Custom Method Name Default Value(s): N/A Multiple Tags Allowed: Yes","title":"Variables"},{"location":"Spawn-Conditions/#world","text":"Tag: MinSpawnFromWorldCenter Tag Format: [MinSpawnFromWorldCenter:Value] Description: This tag allows you to specify how far from the world center (0,0,0) the player must be before this encounter can spawn. If the player is within this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be lower than MaxSpawnFromWorldCenter if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxSpawnFromWorldCenter Tag Format: [MaxSpawnFromWorldCenter:Value] Description: This tag allows you to specify how far from the world center (0,0,0) the player must be within for this encounter can spawn. If the player is further than this distance, the encounter will not appear. Allowed Values: Any Number Greater Than 0 Value must be higher than MinSpawnFromWorldCenter if tag is used Default Value(s): -1 Multiple Tag Allowed: No Tag: CustomWorldCenter Tag Format: [CustomWorldCenter:Value] Description: This tag allows you to define a custom set of coordinates that are used as a reference point instead of 0,0,0 if you are using the MinSpawnFromWorldCenter or MaxSpawnFromWorldCenter tags. Allowed Value(s): Vector Coordinates Formatted As: {X:0.0 Y:0.0 Z:0.0} Default Value(s): N/A Multiple Tags Allowed: No Tag: DirectionFromWorldCenter Tag Format: [DirectionFromWorldCenter:Value] Description: This tag allows you to define a direction vector that is checked against while using MinSpawnFromWorldCenter and/or MaxSpawnFromWorldCenter . The direction is checked against tags MinAngleFromDirection and/or MinAngleFromDirection while checking the players angle from World Center. Allowed Value(s): Vector Coordinates Formatted As: {X:0.0 Y:0.0 Z:0.0} Default Value(s): N/A Multiple Tags Allowed: No Tag: MinAngleFromDirection Tag Format: [MinAngleFromDirection:Value] Description: This tag defines the minimum angle allowed from the direction specified in DirectionFromWorldCenter while using MinSpawnFromWorldCenter and/or MaxSpawnFromWorldCenter . The direction is checked against tags MinAngleFromDirection and/or MinAngleFromDirection while checking the players angle from World Center. Allowed Value(s): Any Number Value' Value must be Less Than MaxAngleFromDirection if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: MaxAngleFromDirection Tag Format: [MaxAngleFromDirection:Value] Description: This tag defines the maximum angle allowed from the direction specified in DirectionFromWorldCenter while using MinSpawnFromWorldCenter and/or MaxSpawnFromWorldCenter . The direction is checked against tags MinAngleFromDirection and/or MinAngleFromDirection while checking the players angle from World Center. Allowed Value(s): Any Number Value' Value must be Greater Than MinAngleFromDirection if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: SkipVoxelSpawnChecks Tag Format: [SkipVoxelSpawnChecks:Value] Description: This tag allows you to skip the voxel collision checks that are done before the encounter is spawned. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: SkipGridSpawnChecks Tag Format: [SkipGridSpawnChecks:Value] Description: This tag allows you to skip the grid collision checks that are done before the encounter is spawned. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: UseSignalRequirement Tag Format: [UseSignalRequirement:Value] Description: This tag allows you to specify if your encounter should only spawn if there is a valid Antenna and/or Beacon signal active in the area where the spawn takes place. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: MinSignalRadius Tag Format: [MinSignalRadius:Value] Description: This tag allows you to specify the minimum broadcast strength of the Antenna/Beacon that must be met for UseSignalRequirement to be satisfied. If this tag is not provided, then no minimum will be used. Allowed Value(s): Any Number Value' Value must be Less Than or Equal to MaxSignalRadius if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: MaxSignalRadius Tag Format: [MaxSignalRadius:Value] Description: This tag allows you to specify the maximum broadcast strength of the Antenna/Beacon that must be met for UseSignalRequirement to be satisfied. If this tag is not provided, then no maximum will be used. Allowed Value(s): Any Number Value' Value must be Greater Than or Equal to MinSignalRadius if provided. Default Value(s): -1 Multiple Tags Allowed: No Tag: AllowNpcSignals Tag Format: [AllowNpcSignals:Value] Description: This tag allows NPC Antenna/Beacon signals to be considered while using the UseSignalRequirement tag Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No Tag: UseOnlySelfOwnedSignals Tag Format: [UseOnlySelfOwnedSignals:Value] Description: This tag restricts Antenna/Beacon signals to only be valid if they're owned by the same NPC while using the UseSignalRequirement tag. Allowed Value(s): true false Default Value(s): false Multiple Tags Allowed: No","title":"World"},{"location":"Spawn-Conditions/#zone","text":"Tag: ZoneConditions Tag Format: [ZoneConditions:Value] Description: This tag allows you to specify one or more Zone Conditions profile that will be used to validate spawning within zones. Allowed Value(s): Any Zone Condition Profile SubtypeId Default Value(s): N/A Multiple Tags Allowed: Yes","title":"Zone"},{"location":"Spawn/","text":"Spawn.md Spawn Profiles in RivalAI allow you to specify a set of parameters that get passed to the Modular Encounters Spawner that will spawn an encounter when triggered. These are essentially RivalAI's alternative to Keen's Antenna Spawns. Spawn Profiles are attached to Action Profiles . It is important that you use a unique SubtypeId for each Spawn Profile you create, otherwise they may not work correctly. Here's an example of how a Spawn Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleSpawnProfile</SubtypeId> </Id> <Description> [RivalAI Spawn] [UseSpawn:true] [StartsReady:true] [SpawnMinCooldown:30] [SpawnMaxCooldown:60] [MaxSpawns:3] [SpawnGroups:DefenseDrone] [SpawnGroups:AssaultDrone] [UseRelativeSpawnPosition:false] [MinDistance:1000] [MaxDistance:1500] [MinAltitude:500] [MaxAltitude:1000] [IgnoreSafetyChecks:false] </Description> </EntityComponent> </EntityComponents> </Definitions> Tag: UseSpawn Tag Format: [UseSpawn:Value] Description: This tag specifies if the behavior should use your Spawn Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawningType Tag Format: [SpawningType:Value] Description: This tag specifies the type of spawn that this spawn profile will request from the Modular Encounters Spawner. Please note that all position tags are not used for tags other than CustomSpawn . Also, if using CustomSpawn , your SpawnGroup/Conditions must include the [RivalAiSpawn:true] tag Allowed Values: CustomSpawn SpaceCargoShip RandomEncounter PlanetaryCargoShip PlanetaryInstallation BossEncounter Multiple Tag Allowed: No Tag: StartsReady Tag Format: [StartsReady:Value] Description: This tag specifies if the Spawn Profile should be ready to spawn as soon as it is triggered from the Action Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawnMinCooldown Tag Format: [SpawnMinCooldown:Value] Description: Specifies the minimum time (in seconds) after a spawn event that the profile needs to wait before it can attempt another. Allowed Values: Any integer greater than 0 Must be lower than SpawnMaxCooldown Multiple Tag Allowed: No Tag: SpawnMaxCooldown Tag Format: [SpawnMaxCooldown:Value] Description: Specifies the maximum time (in seconds) after a spawn event that the profile needs to wait before it can attempt another. Allowed Values: Any integer greater than 0 Must be higher than SpawnMinCooldown Multiple Tag Allowed: No Tag: MaxSpawns Tag Format: [MaxSpawns:Value] Description: Specifies the maximum amount of spawns that can be triggered from this profile. Allowed Values: Any integer greater than 0 -1 is used for No Limit Multiple Tag Allowed: No Tag: SpawnGroups Tag Format: [SpawnGroups:Value] Description: Specifies the SubtypeId of a SpawnGroup you want the profile to spawn. If multiple instances of this tag are provided, the Modular Encounter Spawner will select one at random based on the SpawnGroup Frequency rules. When using any other SpawningType than CustomSpawn , not providing a SpawnGroup here will request a random spawn from any eligible spawngroup for that area. Allowed Values: Any SpawnGroup SubtypeId string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: UseRelativeSpawnPosition Tag Format: [UseRelativeSpawnPosition:Value] Description: This tag specifies if the Spawn position should be at a relative position to the NPC Remote Control block. Otherwise the spawn will be in a random location within a min/max distance from the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: MinDistance Tag Format: [MinDistance:Value] Description: Specifies the minimum spawn distance from the NPC grid if UseRelativeSpawnPosition is false . Allowed Values: Any number greater than 0 Must be lower than MaxDistance Multiple Tag Allowed: No Tag: MaxDistance Tag Format: [MaxDistance:Value] Description: Specifies the maximum spawn distance from the NPC grid if UseRelativeSpawnPosition is false . Allowed Values: Any number greater than 0 Must be higher than MinDistance Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: Specifies the minimum spawn altitude from the NPC grid if UseRelativeSpawnPosition is false . This is only used if the spawn occurs in natural gravity. Allowed Values: Any number greater than 0 Must be lower than MaxAltitude Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: Specifies the maximum spawn altitude from the NPC grid if UseRelativeSpawnPosition is false . This is only used if the spawn occurs in natural gravity. Allowed Values: Any number greater than 0 Must be higher than MinAltitude Multiple Tag Allowed: No Tag: InheritNpcAltitude Tag Format: [InheritNpcAltitude:Value] Description: Specifies if the current altitude of the NPC should be added to the random result of MinAltitude and MinAltitude . Allowed Values: true false Multiple Tag Allowed: No Tag: RelativeSpawnOffset Tag Format: [RelativeSpawnOffset:Value] Description: Specifies the position offset from the Remote Control that a spawn will be located at if UseRelativeSpawnPosition is true . Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with values in meters. Multiple Tag Allowed: No Tag: RelativeSpawnVelocity Tag Format: [RelativeSpawnVelocity:Value] Description: Specifies the velocity vector from the Remote Control that a spawn will start with if UseRelativeSpawnPosition is true . Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with values in m/s. Multiple Tag Allowed: No Tag: IgnoreSafetyChecks Tag Format: [IgnoreSafetyChecks:Value] Description: This tag specifies if the safety checks that look for obstructions before spawn should be ignored. Allowed Values: true false Multiple Tag Allowed: No","title":"Spawn.md"},{"location":"Spawn/#spawnmd","text":"Spawn Profiles in RivalAI allow you to specify a set of parameters that get passed to the Modular Encounters Spawner that will spawn an encounter when triggered. These are essentially RivalAI's alternative to Keen's Antenna Spawns. Spawn Profiles are attached to Action Profiles . It is important that you use a unique SubtypeId for each Spawn Profile you create, otherwise they may not work correctly. Here's an example of how a Spawn Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleSpawnProfile</SubtypeId> </Id> <Description> [RivalAI Spawn] [UseSpawn:true] [StartsReady:true] [SpawnMinCooldown:30] [SpawnMaxCooldown:60] [MaxSpawns:3] [SpawnGroups:DefenseDrone] [SpawnGroups:AssaultDrone] [UseRelativeSpawnPosition:false] [MinDistance:1000] [MaxDistance:1500] [MinAltitude:500] [MaxAltitude:1000] [IgnoreSafetyChecks:false] </Description> </EntityComponent> </EntityComponents> </Definitions> Tag: UseSpawn Tag Format: [UseSpawn:Value] Description: This tag specifies if the behavior should use your Spawn Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawningType Tag Format: [SpawningType:Value] Description: This tag specifies the type of spawn that this spawn profile will request from the Modular Encounters Spawner. Please note that all position tags are not used for tags other than CustomSpawn . Also, if using CustomSpawn , your SpawnGroup/Conditions must include the [RivalAiSpawn:true] tag Allowed Values: CustomSpawn SpaceCargoShip RandomEncounter PlanetaryCargoShip PlanetaryInstallation BossEncounter Multiple Tag Allowed: No Tag: StartsReady Tag Format: [StartsReady:Value] Description: This tag specifies if the Spawn Profile should be ready to spawn as soon as it is triggered from the Action Profile. Allowed Values: true false Multiple Tag Allowed: No Tag: SpawnMinCooldown Tag Format: [SpawnMinCooldown:Value] Description: Specifies the minimum time (in seconds) after a spawn event that the profile needs to wait before it can attempt another. Allowed Values: Any integer greater than 0 Must be lower than SpawnMaxCooldown Multiple Tag Allowed: No Tag: SpawnMaxCooldown Tag Format: [SpawnMaxCooldown:Value] Description: Specifies the maximum time (in seconds) after a spawn event that the profile needs to wait before it can attempt another. Allowed Values: Any integer greater than 0 Must be higher than SpawnMinCooldown Multiple Tag Allowed: No Tag: MaxSpawns Tag Format: [MaxSpawns:Value] Description: Specifies the maximum amount of spawns that can be triggered from this profile. Allowed Values: Any integer greater than 0 -1 is used for No Limit Multiple Tag Allowed: No Tag: SpawnGroups Tag Format: [SpawnGroups:Value] Description: Specifies the SubtypeId of a SpawnGroup you want the profile to spawn. If multiple instances of this tag are provided, the Modular Encounter Spawner will select one at random based on the SpawnGroup Frequency rules. When using any other SpawningType than CustomSpawn , not providing a SpawnGroup here will request a random spawn from any eligible spawngroup for that area. Allowed Values: Any SpawnGroup SubtypeId string excluding characters : , [ , ] Multiple Tag Allowed: Yes Tag: UseRelativeSpawnPosition Tag Format: [UseRelativeSpawnPosition:Value] Description: This tag specifies if the Spawn position should be at a relative position to the NPC Remote Control block. Otherwise the spawn will be in a random location within a min/max distance from the grid. Allowed Values: true false Multiple Tag Allowed: No Tag: MinDistance Tag Format: [MinDistance:Value] Description: Specifies the minimum spawn distance from the NPC grid if UseRelativeSpawnPosition is false . Allowed Values: Any number greater than 0 Must be lower than MaxDistance Multiple Tag Allowed: No Tag: MaxDistance Tag Format: [MaxDistance:Value] Description: Specifies the maximum spawn distance from the NPC grid if UseRelativeSpawnPosition is false . Allowed Values: Any number greater than 0 Must be higher than MinDistance Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: Specifies the minimum spawn altitude from the NPC grid if UseRelativeSpawnPosition is false . This is only used if the spawn occurs in natural gravity. Allowed Values: Any number greater than 0 Must be lower than MaxAltitude Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: Specifies the maximum spawn altitude from the NPC grid if UseRelativeSpawnPosition is false . This is only used if the spawn occurs in natural gravity. Allowed Values: Any number greater than 0 Must be higher than MinAltitude Multiple Tag Allowed: No Tag: InheritNpcAltitude Tag Format: [InheritNpcAltitude:Value] Description: Specifies if the current altitude of the NPC should be added to the random result of MinAltitude and MinAltitude . Allowed Values: true false Multiple Tag Allowed: No Tag: RelativeSpawnOffset Tag Format: [RelativeSpawnOffset:Value] Description: Specifies the position offset from the Remote Control that a spawn will be located at if UseRelativeSpawnPosition is true . Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with values in meters. Multiple Tag Allowed: No Tag: RelativeSpawnVelocity Tag Format: [RelativeSpawnVelocity:Value] Description: Specifies the velocity vector from the Remote Control that a spawn will start with if UseRelativeSpawnPosition is true . Allowed Values: A Vector3D Value in the following format: {X:# Y:# Z:#} X: Right Y: Up Z: Forward Replace # with values in m/s. Multiple Tag Allowed: No Tag: IgnoreSafetyChecks Tag Format: [IgnoreSafetyChecks:Value] Description: This tag specifies if the safety checks that look for obstructions before spawn should be ignored. Allowed Values: true false Multiple Tag Allowed: No","title":"Spawn.md"},{"location":"SpawnGroup/","text":"SpawnGroup.md SpawnGroups are definitions that provide rules about an NPC encounter to the Modular Encounters Systems Spawning Mechanism. The SpawnGroups that the Modular Encounters Systems uses utilize the <Description> tags to define many custom rules and modifications to a spawned entity. This includes conditions for when the encounter is allowed to spawn, and manipulations that are applied to the prefabs (grids) before they are spawned into the world. Conditions Economy Manipulations Misc Replenishment Conditions Tag: SpawnConditionsProfiles Tag Format: [SpawnConditionsProfiles:Value] Description: This tag allows you to provide one or more sets of Spawn Conditions to the SpawnGroup. If a single Spawn Conditions Profile is satisfied, then the spawn will be considered eligible. Allowed Values: Any Spawn Condition Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: SpawnConditionGroups Tag Format: [SpawnConditionGroups:Value] Description: This tag allows you to provide one or more sets of Spawn Condition Groups to the SpawnGroup. Allowed Values: Any Spawn Condition Group Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PersistentConditions Tag Format: [PersistentConditions:Value] Description: This tag allows you to provide a single Spawn Condition Profile that is used as a persistent set of conditions IN ADDITION to the existing spawn conditions defined in SpawnConditionsProfiles . If the conditions in this profile are not satisfied, the spawn will not be eligible even if other Spawn Conditions are. Some tags may not work properly if used in this profile (eg: Spawn Type related tags, Faction, etc), so try to avoid using those. Allowed Values: Any Spawn Condition Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Tag: UseFirstConditionsAsPersistent Tag Format: [UseFirstConditionsAsPersistent:Value] Description: This tag allows you to specify if Spawn Conditions tags that are placed directly in the spawngroup should be used as the 'Persistent' Spawn Conditions. If you use this, then the profile in PersistentConditions is no longer used. This is useful if you have some properties you want to apply only to a single spawngroup, but don't want to create a separate spawn conditions profile. MaxGravity is a good example of a tag that works well here. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Economy Tag: InitializeStoreBlocks Tag Format: [InitializeStoreBlocks:Value] Description: If set to true , any Store Blocks on this grid will be populated with all items in inventory the Store Block is connected to. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ContainerTypesForStoreOrders Tag Format: [ContainerTypesForStoreOrders:Value1,Value2,Value3,etc] Description: This tag allows you to specify the names of ContainerType definitions that are randomly selected to populate the Store Block Sell Screen on your NPC Grid. Allowed Values: Any ContainerType SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No Manipulations Tag: ManipulationProfiles Tag Format: [ManipulationProfiles:Value] Description: This tag allows you to provide one or more Manipulation Profiles to the SpawnGroup. If multiple profiles are provided, then all of the Manipulations within each profile are processed on the Grids before they spawn.. Allowed Values: Any Manipulation Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: WeaponRandomizationOverrideProfile Tag Format: [WeaponRandomizationOverrideProfile:Value] Description: This tag allows you to provide a Manipulation Profile that is used exclusively for defining rules related to Weapon Randomization. If you use this profile, then all other manipulation profiles are not used for anything Weapon Randomization related. Any tags included in this profile that are not related to Weapon Randomization are also not used. Allowed Values: Any Manipulation Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Misc Tag: FactionOverride Tag Format: [FactionOverride:Value] Description: This tag specifies if a SpawnGroup should use a specific Faction Tag for spawning/ownership, regardless of the tags being used in the SpawnConditions profiles. Allowed Values: Any NPC faction tag Default Value(s): N/A Multiple Tag Allowed: No Tag: IgnoreCleanupRules Tag Format: [IgnoreCleanupRules:Value] Description: This tag specifies if a SpawnGroup should be ignored by the mod Clean-Up rules (this does not include path despawn for Cargo Ship Type Spawns). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PauseAutopilotAtPlayerDistance Tag Format: [PauseAutopilotAtPlayerDistance:Value] Description: If player is within this distance from a Cargo Ship using Auto-Pilot, the ship will come to a stop. It will resume travel once the player is outside of this distance. Allowed Values: Any Number Greater Than 0 Default Value(s): -1 Multiple Tag Allowed: No Replenishment Tag: ReplenishSystems Tag Format: [ReplenishSystems:Value] Description: This tag specifies if the prefabs in a SpawnGroup should have their weapons, parachutes, and reactors restocked with ammo and fuel on spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ReplenishProfiles Tag Format: [ReplenishProfiles:Value] Description: This tag specifies one or more Replenishment Profile IDs that are used to determine what kinds of replenishment limits the grid will receive. Allowed Values: Any Replenishment Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: IgnoreGlobalReplenishProfiles Tag Format: [IgnoreGlobalReplenishProfiles:Value] Description: This tag specifies if grid replenishment should ignore any Global Replenishment Profiles that are present in the game world. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"SpawnGroup.md"},{"location":"SpawnGroup/#spawngroupmd","text":"SpawnGroups are definitions that provide rules about an NPC encounter to the Modular Encounters Systems Spawning Mechanism. The SpawnGroups that the Modular Encounters Systems uses utilize the <Description> tags to define many custom rules and modifications to a spawned entity. This includes conditions for when the encounter is allowed to spawn, and manipulations that are applied to the prefabs (grids) before they are spawned into the world. Conditions Economy Manipulations Misc Replenishment","title":"SpawnGroup.md"},{"location":"SpawnGroup/#conditions","text":"Tag: SpawnConditionsProfiles Tag Format: [SpawnConditionsProfiles:Value] Description: This tag allows you to provide one or more sets of Spawn Conditions to the SpawnGroup. If a single Spawn Conditions Profile is satisfied, then the spawn will be considered eligible. Allowed Values: Any Spawn Condition Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: SpawnConditionGroups Tag Format: [SpawnConditionGroups:Value] Description: This tag allows you to provide one or more sets of Spawn Condition Groups to the SpawnGroup. Allowed Values: Any Spawn Condition Group Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: PersistentConditions Tag Format: [PersistentConditions:Value] Description: This tag allows you to provide a single Spawn Condition Profile that is used as a persistent set of conditions IN ADDITION to the existing spawn conditions defined in SpawnConditionsProfiles . If the conditions in this profile are not satisfied, the spawn will not be eligible even if other Spawn Conditions are. Some tags may not work properly if used in this profile (eg: Spawn Type related tags, Faction, etc), so try to avoid using those. Allowed Values: Any Spawn Condition Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Tag: UseFirstConditionsAsPersistent Tag Format: [UseFirstConditionsAsPersistent:Value] Description: This tag allows you to specify if Spawn Conditions tags that are placed directly in the spawngroup should be used as the 'Persistent' Spawn Conditions. If you use this, then the profile in PersistentConditions is no longer used. This is useful if you have some properties you want to apply only to a single spawngroup, but don't want to create a separate spawn conditions profile. MaxGravity is a good example of a tag that works well here. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Conditions"},{"location":"SpawnGroup/#economy","text":"Tag: InitializeStoreBlocks Tag Format: [InitializeStoreBlocks:Value] Description: If set to true , any Store Blocks on this grid will be populated with all items in inventory the Store Block is connected to. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ContainerTypesForStoreOrders Tag Format: [ContainerTypesForStoreOrders:Value1,Value2,Value3,etc] Description: This tag allows you to specify the names of ContainerType definitions that are randomly selected to populate the Store Block Sell Screen on your NPC Grid. Allowed Values: Any ContainerType SubtypeId If providing multiple values, use comma with no spaces as shown in Tag Format Default Value(s): none Multiple Tag Allowed: No","title":"Economy"},{"location":"SpawnGroup/#manipulations","text":"Tag: ManipulationProfiles Tag Format: [ManipulationProfiles:Value] Description: This tag allows you to provide one or more Manipulation Profiles to the SpawnGroup. If multiple profiles are provided, then all of the Manipulations within each profile are processed on the Grids before they spawn.. Allowed Values: Any Manipulation Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: WeaponRandomizationOverrideProfile Tag Format: [WeaponRandomizationOverrideProfile:Value] Description: This tag allows you to provide a Manipulation Profile that is used exclusively for defining rules related to Weapon Randomization. If you use this profile, then all other manipulation profiles are not used for anything Weapon Randomization related. Any tags included in this profile that are not related to Weapon Randomization are also not used. Allowed Values: Any Manipulation Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: No","title":"Manipulations"},{"location":"SpawnGroup/#misc","text":"Tag: FactionOverride Tag Format: [FactionOverride:Value] Description: This tag specifies if a SpawnGroup should use a specific Faction Tag for spawning/ownership, regardless of the tags being used in the SpawnConditions profiles. Allowed Values: Any NPC faction tag Default Value(s): N/A Multiple Tag Allowed: No Tag: IgnoreCleanupRules Tag Format: [IgnoreCleanupRules:Value] Description: This tag specifies if a SpawnGroup should be ignored by the mod Clean-Up rules (this does not include path despawn for Cargo Ship Type Spawns). Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PauseAutopilotAtPlayerDistance Tag Format: [PauseAutopilotAtPlayerDistance:Value] Description: If player is within this distance from a Cargo Ship using Auto-Pilot, the ship will come to a stop. It will resume travel once the player is outside of this distance. Allowed Values: Any Number Greater Than 0 Default Value(s): -1 Multiple Tag Allowed: No","title":"Misc"},{"location":"SpawnGroup/#replenishment","text":"Tag: ReplenishSystems Tag Format: [ReplenishSystems:Value] Description: This tag specifies if the prefabs in a SpawnGroup should have their weapons, parachutes, and reactors restocked with ammo and fuel on spawn. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ReplenishProfiles Tag Format: [ReplenishProfiles:Value] Description: This tag specifies one or more Replenishment Profile IDs that are used to determine what kinds of replenishment limits the grid will receive. Allowed Values: Any Replenishment Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: Yes Tag: IgnoreGlobalReplenishProfiles Tag Format: [IgnoreGlobalReplenishProfiles:Value] Description: This tag specifies if grid replenishment should ignore any Global Replenishment Profiles that are present in the game world. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No","title":"Replenishment"},{"location":"Support/","text":"Support.md Coming Soon\u2122","title":"Support.md"},{"location":"Support/#supportmd","text":"Coming Soon\u2122","title":"Support.md"},{"location":"Target/","text":"Target.md Target Profiles in RivalAI allow you to specify a set of rules that are followed when combat-based behaviors are acquiring targets near-by. You can attach your Target Profiles to any Behavior Profile by adding a [TargetData:Value] tag to the Behavior and replace Value with the SubtypeId of your Target Profile. Example: [TargetData:RAI-ExampleTargetProfile] It is important that you use a unique SubtypeId for each Target Profile you create, otherwise they may not work correctly. You can also provide a secondary Target Profile that is used when the NPC target is switched by a Trigger/Action event such as Damage , Command , or TurretTarget . This type of target is consider a Target Override in RivalAI, and once the target is lost or a refresh occurs, the target will switch back to the target defined by the TargetData tag. Override targets are not limited by entity type, so they can target Players, Grids, or Blocks. To specify an Override Target Profile, use the tag below: [OverrideTargetData:RAI-ExampleOverrideTargetProfile] Here's an example of how a Target Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleTargetProfile-PirateHunter</SubtypeId> </Id> <Description> [RivalAI Target] [UseCustomTargeting:true] [Target:Block] [BlockTargets:All] [MaxDistance:10000] [MatchAllFilters:OutsideOfSafezone] [MatchAllFilters:Owner] [MatchAllFilters:Relation] [MatchAllFilters:Faction] [GetTargetBy:ClosestDistance] [Owners:Player] [Owners:NPC] [Relations:Enemy] [FactionTargets:SPRT] [PrioritizeSpecifiedFactions:true] </Description> </EntityComponent> </EntityComponents> </Definitions> Tag: UseCustomTargeting Tag Format: [UseCustomTargeting:Value] Description: This tag specifies if the behavior should use your Target Profile. If false , it will use default parameters based on the Behavior Type. Allowed Values: true false Multiple Tag Allowed: No Tag: Target Tag Format: [Target:Value] Description: This tag allows you to specify what sort of entity target the behavior should go after. Allowed Values: Player Block Grid PlayerAndBlock PlayerAndGrid Multiple Tag Allowed: No Tag: BlockTargets Tag Format: [BlockTargets:Value] Description: This tag allows you to specify one or more types of Block (if Target is set to Block) that will be targeted specifically. Allowed Values: All Antennas Beacons Containers Controllers Guns JumpDrives Mechanical Medical NanoBots Power Production RivalAi Shields Thrusters Tools Turrets Multiple Tag Allowed: Yes Tag: TimeUntilTargetAcquisition Tag Format: [TimeUntilTargetAcquisition:Value] Description: This tag specifies the time (in seconds) that it takes for the behavior to acquire a target if the behavior has no current target. Allowed Values: Any Integer Greater than 0 Multiple Tag Allowed: No Tag: UseTargetRefresh Tag Format: [UseTargetRefresh:Value] Description: This tag specifies if the behavior should attempt to acquire a new target after some time, even if the behavior has a valid target already. Allowed Values: true false Multiple Tag Allowed: No Tag: TimeUntilNextRefresh Tag Format: [TimeUntilNextRefresh:Value] Description: This tag specifies the time (in seconds) that it takes for the behavior to acquire a new target if UseTargetRefresh is set to true . Allowed Values: Any Integer Greater than 0 Multiple Tag Allowed: No Tag: TimeUntilNextEvaluation Tag Format: [TimeUntilNextEvaluation:Value] Description: This tag specifies the time (in seconds) that it takes for the behavior to check the current target to ensure it still meets the requirements of the settings and filters in this Target Profile. Allowed Values: Any Integer Greater than 0 Multiple Tag Allowed: No Tag: MaxDistance Tag Format: [MaxDistance:Value] Description: This tag allows you to specify the distance from the behavior owner that is checked for targets. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxExistingTargetDistance Tag Format: [MaxExistingTargetDistance:Value] Description: This tag allows you to specify the distance that an existing valid target must be outside before a new target is selected. If this value is not provided, then it uses the same value as MaxDistance Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MatchAllFilters Tag Format: [MatchAllFilters:Value] Description: This tag allows you to specify one or more extra conditions that must be met when acquiring or evaluating a target. If any of the specified conditions under this tag are not met, the target is not considered valid. Allowed Values: Altitude Broadcasting Faction Gravity IgnoreStealthDrive LineOfSight MovementScore Name OutsideOfSafezone Owner PlayerControlled PlayerKnownLocation Powered Relation Shielded Speed Static TargetValue Multiple Tag Allowed: Yes Tag: MatchAnyFilters Tag Format: [MatchAnyFilters:Value] Description: This tag allows you to specify one or more extra conditions that must be met when acquiring or evaluating a target. If any of the specified conditions under this tag are met, the target is considered valid. Allowed Values: Altitude Broadcasting Faction Gravity IgnoreStealthDrive LineOfSight MovementScore Name OutsideOfSafezone Owner PlayerControlled PlayerKnownLocation Powered Relation Shielded Speed Static TargetValue Multiple Tag Allowed: Yes Tag: MatchNoneFilters Tag Format: [MatchNoneFilters:Value] Description: This tag allows you to specify one or more extra conditions that must be met when acquiring or evaluating a target. If any of the specified conditions under this tag are met, the target is not considered valid. Allowed Values: Altitude Broadcasting Faction Gravity IgnoreStealthDrive LineOfSight MovementScore Name OutsideOfSafezone Owner PlayerControlled PlayerKnownLocation Powered Relation Shielded Speed Static TargetValue Multiple Tag Allowed: Yes Tag: GetTargetBy Tag Format: [GetTargetBy:Value] Description: This tag allows you to specify which target should be used after all eligible targets have been identified. HighestTargetValue and LowestTargetValue are similar to the threat score calculations that are done in the Modular Encounters Spawner. Allowed Values: Random ClosestDistance FurthestDistance HighestTargetValue LowestTargetValue Multiple Tag Allowed: No Tag: Owners Tag Format: [Owners:Value] Description: This tag allows you to specify one or more ownership types that the target must have to be considered. Filter Required: Owner Allowed Values: Unowned Player NPC Multiple Tag Allowed: Yes Tag: Relations Tag Format: [Relations:Value] Description: This tag allows you to narrow down targets based on their relation to the behavior owner. Filter Required: Relation Allowed Values: Faction Neutral Enemy Friends Multiple Tag Allowed: Yes Tag: FactionTargets Tag Format: [FactionTargets:Value] Description: This tag allows you to narrow down targets based on their Faction Owner. Filter Required: Faction Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: OnlyGetFromEntityOwner Tag Format: [OnlyGetFromEntityOwner:Value] Description: This tag specifies how the Owner and Relation is considered for targets. When false , ownership of subgrids is considered. While true , only the immediate grid or block is considered. Filter Required: Owner and/or Relation Allowed Values: true false Multiple Tag Allowed: No Tag: GetFromMinorityGridOwners Tag Format: [GetFromMinorityGridOwners:Value] Description: This tag specifies how the Owner and Relation is considered for targets. When false , only the majority ownership of a grid is considered. While true , minority ownership of a grid is also considered (eg: a player owning a single block on an NPC grid would flag the grid as NPC and Player owned). Filter Required: Owner and/or Relation Allowed Values: true false Multiple Tag Allowed: No Tag: PrioritizeSpecifiedFactions Tag Format: [PrioritizeSpecifiedFactions:Value] Description: This tag specifies how Faction ownership should be considered for targets when using a Faction filter. If false , then the target MUST match the faction(s) provided. If true , then the evaluation will try to find the specified factions first, but will consider other valid targets if no targets from the specified factions can be found. Filter Required: Faction Allowed Values: true false Multiple Tag Allowed: No Tag: PrioritizePlayerControlled Tag Format: [PrioritizePlayerControlled:Value] Description: This tag specifies how targets should be considered when using a PlayerControlled filter. If false , then the target MUST match be player controlled. If true , then the evaluation will try to find the player controlled targets first, but will consider other valid targets if no player controlled targets can be found. Filter Required: PlayerControlled Allowed Values: true false Multiple Tag Allowed: No Tag: IsStatic Tag Format: [IsStatic:Value] Description: This tag specifies if a target should be a Static Grid. Filter Required: Static Allowed Values: Yes No Ignore Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: This tag specifies the minimum altitude a target must be at to be considered valid. If a target is not on a planet, then this tag is not considered. Value must not be higher than MaxAltitude Filter Required: Altitude Allowed Values: Any Number (Negative or Positive) Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: This tag specifies the maximum altitude a target must be at to be considered valid. If a target is not on a planet, then this tag is not considered. Value must not be lower than MinAltitude Filter Required: Altitude Allowed Values: Any Number (Negative or Positive) Multiple Tag Allowed: No Tag: NonBroadcastVisualRange Tag Format: [NonBroadcastVisualRange:Value] Description: This tag specifies if a non broadcasting target should be considered if the target is within this specified distance. Filter Required: Broadcasting Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MinGravity Tag Format: [MinGravity:Value] Description: This tag specifies the minimum gravity a target must be at to be considered valid. Value must not be higher than MaxGravity Filter Required: Gravity Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MaxGravity Tag Format: [MaxGravity:Value] Description: This tag specifies the maximum gravity a target must be at to be considered valid. Value must not be lower than MinGravity Filter Required: Gravity Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MinSpeed Tag Format: [MinSpeed:Value] Description: This tag specifies the minimum speed a target must be at to be considered valid. Value must not be higher than MaxSpeed Filter Required: Speed Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MaxSpeed Tag Format: [MaxSpeed:Value] Description: This tag specifies the maximum speed a target must be at to be considered valid. Value must not be lower than MinSpeed Filter Required: Speed Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MinTargetValue Tag Format: [MinTargetValue:Value] Description: This tag specifies the minimum value a target must be at to be considered valid. Value must not be higher than MaxTargetValue Filter Required: TargetValue Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MaxTargetValue Tag Format: [MaxTargetValue:Value] Description: This tag specifies the maximum value a target must be at to be considered valid. Value must not be lower than MinTargetValue Filter Required: TargetValue Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: Names Tag Format: [Names:Value] Description: This tag allows you to narrow down targets based on their Name (Block/Grid CustomName and Player DisplayName) Filter Required: Name Allowed Values: Any Name Multiple Tag Allowed: Yes Tag: UsePartialNameMatching Tag Format: [UsePartialNameMatching:Value] Description: This tag specifies if names used in provided Names tag are allowed to be a partial match. If false , then a target name must match exactly with one of the names provided. Filter Required: Name Allowed Values: true false Multiple Tag Allowed: No Tag: MinMovementScore Tag Format: [MinMovementScore:Value] Description: This tag specifies the minimum movement score (bounding-box size multiplied by current speed) a target must have to be considered valid Filter Required: MovementScore Allowed Values: Any Number Higher Than 0 Value should be lower than MaxMovementScore if tag is provided. Multiple Tag Allowed: No Tag: MaxMovementScore Tag Format: [MaxMovementScore:Value] Description: This tag specifies the maximum movement score (bounding-box size multiplied by current speed) a target must have to be considered valid. Filter Required: MovementScore Allowed Values: Any Number Higher Than 0 Value should be lower than MaxMovementScore if tag is provided. Multiple Tag Allowed: No Tag: MaxMovementDetectableDistance Tag Format: [MaxMovementDetectableDistance:Value] Description: This tag specifies the maximum distance from the NPC that Movement Score is eligible to be calculated at. Filter Required: MovementScore Allowed Values: Any Number Higher Than 0 . Multiple Tag Allowed: No Tag: MaxLineOfSight Tag Format: [MaxLineOfSight:Value] Description: This tag specifies the maximum distance that is used when performing a Line of Sight check Filter Required: LineOfSight Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: PlayerKnownLocationFactionOverride Tag Format: [PlayerKnownLocationFactionOverride:Value] Description: This tag allows you to override the Player Known Location Faction Check to use a faction that is different from the faction that owns the NPC Remote Control Filter Required: PlayerKnownLocation Allowed Values: Any NPC Faction Tag Multiple Tag Allowed: No Tag: StealthDriveMinDistance Tag Format: [StealthDriveMinDistance:Value] Description: This tag specifies the minimum distance a target must maintain in order to remain undetectable while using a Stealth Drive. Filter Required: LineOfSight Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No","title":"Target.md"},{"location":"Target/#targetmd","text":"Target Profiles in RivalAI allow you to specify a set of rules that are followed when combat-based behaviors are acquiring targets near-by. You can attach your Target Profiles to any Behavior Profile by adding a [TargetData:Value] tag to the Behavior and replace Value with the SubtypeId of your Target Profile. Example: [TargetData:RAI-ExampleTargetProfile] It is important that you use a unique SubtypeId for each Target Profile you create, otherwise they may not work correctly. You can also provide a secondary Target Profile that is used when the NPC target is switched by a Trigger/Action event such as Damage , Command , or TurretTarget . This type of target is consider a Target Override in RivalAI, and once the target is lost or a refresh occurs, the target will switch back to the target defined by the TargetData tag. Override targets are not limited by entity type, so they can target Players, Grids, or Blocks. To specify an Override Target Profile, use the tag below: [OverrideTargetData:RAI-ExampleOverrideTargetProfile] Here's an example of how a Target Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleTargetProfile-PirateHunter</SubtypeId> </Id> <Description> [RivalAI Target] [UseCustomTargeting:true] [Target:Block] [BlockTargets:All] [MaxDistance:10000] [MatchAllFilters:OutsideOfSafezone] [MatchAllFilters:Owner] [MatchAllFilters:Relation] [MatchAllFilters:Faction] [GetTargetBy:ClosestDistance] [Owners:Player] [Owners:NPC] [Relations:Enemy] [FactionTargets:SPRT] [PrioritizeSpecifiedFactions:true] </Description> </EntityComponent> </EntityComponents> </Definitions> Tag: UseCustomTargeting Tag Format: [UseCustomTargeting:Value] Description: This tag specifies if the behavior should use your Target Profile. If false , it will use default parameters based on the Behavior Type. Allowed Values: true false Multiple Tag Allowed: No Tag: Target Tag Format: [Target:Value] Description: This tag allows you to specify what sort of entity target the behavior should go after. Allowed Values: Player Block Grid PlayerAndBlock PlayerAndGrid Multiple Tag Allowed: No Tag: BlockTargets Tag Format: [BlockTargets:Value] Description: This tag allows you to specify one or more types of Block (if Target is set to Block) that will be targeted specifically. Allowed Values: All Antennas Beacons Containers Controllers Guns JumpDrives Mechanical Medical NanoBots Power Production RivalAi Shields Thrusters Tools Turrets Multiple Tag Allowed: Yes Tag: TimeUntilTargetAcquisition Tag Format: [TimeUntilTargetAcquisition:Value] Description: This tag specifies the time (in seconds) that it takes for the behavior to acquire a target if the behavior has no current target. Allowed Values: Any Integer Greater than 0 Multiple Tag Allowed: No Tag: UseTargetRefresh Tag Format: [UseTargetRefresh:Value] Description: This tag specifies if the behavior should attempt to acquire a new target after some time, even if the behavior has a valid target already. Allowed Values: true false Multiple Tag Allowed: No Tag: TimeUntilNextRefresh Tag Format: [TimeUntilNextRefresh:Value] Description: This tag specifies the time (in seconds) that it takes for the behavior to acquire a new target if UseTargetRefresh is set to true . Allowed Values: Any Integer Greater than 0 Multiple Tag Allowed: No Tag: TimeUntilNextEvaluation Tag Format: [TimeUntilNextEvaluation:Value] Description: This tag specifies the time (in seconds) that it takes for the behavior to check the current target to ensure it still meets the requirements of the settings and filters in this Target Profile. Allowed Values: Any Integer Greater than 0 Multiple Tag Allowed: No Tag: MaxDistance Tag Format: [MaxDistance:Value] Description: This tag allows you to specify the distance from the behavior owner that is checked for targets. Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MaxExistingTargetDistance Tag Format: [MaxExistingTargetDistance:Value] Description: This tag allows you to specify the distance that an existing valid target must be outside before a new target is selected. If this value is not provided, then it uses the same value as MaxDistance Allowed Values: Any Number Greater Than 0 Multiple Tag Allowed: No Tag: MatchAllFilters Tag Format: [MatchAllFilters:Value] Description: This tag allows you to specify one or more extra conditions that must be met when acquiring or evaluating a target. If any of the specified conditions under this tag are not met, the target is not considered valid. Allowed Values: Altitude Broadcasting Faction Gravity IgnoreStealthDrive LineOfSight MovementScore Name OutsideOfSafezone Owner PlayerControlled PlayerKnownLocation Powered Relation Shielded Speed Static TargetValue Multiple Tag Allowed: Yes Tag: MatchAnyFilters Tag Format: [MatchAnyFilters:Value] Description: This tag allows you to specify one or more extra conditions that must be met when acquiring or evaluating a target. If any of the specified conditions under this tag are met, the target is considered valid. Allowed Values: Altitude Broadcasting Faction Gravity IgnoreStealthDrive LineOfSight MovementScore Name OutsideOfSafezone Owner PlayerControlled PlayerKnownLocation Powered Relation Shielded Speed Static TargetValue Multiple Tag Allowed: Yes Tag: MatchNoneFilters Tag Format: [MatchNoneFilters:Value] Description: This tag allows you to specify one or more extra conditions that must be met when acquiring or evaluating a target. If any of the specified conditions under this tag are met, the target is not considered valid. Allowed Values: Altitude Broadcasting Faction Gravity IgnoreStealthDrive LineOfSight MovementScore Name OutsideOfSafezone Owner PlayerControlled PlayerKnownLocation Powered Relation Shielded Speed Static TargetValue Multiple Tag Allowed: Yes Tag: GetTargetBy Tag Format: [GetTargetBy:Value] Description: This tag allows you to specify which target should be used after all eligible targets have been identified. HighestTargetValue and LowestTargetValue are similar to the threat score calculations that are done in the Modular Encounters Spawner. Allowed Values: Random ClosestDistance FurthestDistance HighestTargetValue LowestTargetValue Multiple Tag Allowed: No Tag: Owners Tag Format: [Owners:Value] Description: This tag allows you to specify one or more ownership types that the target must have to be considered. Filter Required: Owner Allowed Values: Unowned Player NPC Multiple Tag Allowed: Yes Tag: Relations Tag Format: [Relations:Value] Description: This tag allows you to narrow down targets based on their relation to the behavior owner. Filter Required: Relation Allowed Values: Faction Neutral Enemy Friends Multiple Tag Allowed: Yes Tag: FactionTargets Tag Format: [FactionTargets:Value] Description: This tag allows you to narrow down targets based on their Faction Owner. Filter Required: Faction Allowed Values: Any Faction Tag Multiple Tag Allowed: Yes Tag: OnlyGetFromEntityOwner Tag Format: [OnlyGetFromEntityOwner:Value] Description: This tag specifies how the Owner and Relation is considered for targets. When false , ownership of subgrids is considered. While true , only the immediate grid or block is considered. Filter Required: Owner and/or Relation Allowed Values: true false Multiple Tag Allowed: No Tag: GetFromMinorityGridOwners Tag Format: [GetFromMinorityGridOwners:Value] Description: This tag specifies how the Owner and Relation is considered for targets. When false , only the majority ownership of a grid is considered. While true , minority ownership of a grid is also considered (eg: a player owning a single block on an NPC grid would flag the grid as NPC and Player owned). Filter Required: Owner and/or Relation Allowed Values: true false Multiple Tag Allowed: No Tag: PrioritizeSpecifiedFactions Tag Format: [PrioritizeSpecifiedFactions:Value] Description: This tag specifies how Faction ownership should be considered for targets when using a Faction filter. If false , then the target MUST match the faction(s) provided. If true , then the evaluation will try to find the specified factions first, but will consider other valid targets if no targets from the specified factions can be found. Filter Required: Faction Allowed Values: true false Multiple Tag Allowed: No Tag: PrioritizePlayerControlled Tag Format: [PrioritizePlayerControlled:Value] Description: This tag specifies how targets should be considered when using a PlayerControlled filter. If false , then the target MUST match be player controlled. If true , then the evaluation will try to find the player controlled targets first, but will consider other valid targets if no player controlled targets can be found. Filter Required: PlayerControlled Allowed Values: true false Multiple Tag Allowed: No Tag: IsStatic Tag Format: [IsStatic:Value] Description: This tag specifies if a target should be a Static Grid. Filter Required: Static Allowed Values: Yes No Ignore Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: This tag specifies the minimum altitude a target must be at to be considered valid. If a target is not on a planet, then this tag is not considered. Value must not be higher than MaxAltitude Filter Required: Altitude Allowed Values: Any Number (Negative or Positive) Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: This tag specifies the maximum altitude a target must be at to be considered valid. If a target is not on a planet, then this tag is not considered. Value must not be lower than MinAltitude Filter Required: Altitude Allowed Values: Any Number (Negative or Positive) Multiple Tag Allowed: No Tag: NonBroadcastVisualRange Tag Format: [NonBroadcastVisualRange:Value] Description: This tag specifies if a non broadcasting target should be considered if the target is within this specified distance. Filter Required: Broadcasting Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MinGravity Tag Format: [MinGravity:Value] Description: This tag specifies the minimum gravity a target must be at to be considered valid. Value must not be higher than MaxGravity Filter Required: Gravity Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MaxGravity Tag Format: [MaxGravity:Value] Description: This tag specifies the maximum gravity a target must be at to be considered valid. Value must not be lower than MinGravity Filter Required: Gravity Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MinSpeed Tag Format: [MinSpeed:Value] Description: This tag specifies the minimum speed a target must be at to be considered valid. Value must not be higher than MaxSpeed Filter Required: Speed Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MaxSpeed Tag Format: [MaxSpeed:Value] Description: This tag specifies the maximum speed a target must be at to be considered valid. Value must not be lower than MinSpeed Filter Required: Speed Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MinTargetValue Tag Format: [MinTargetValue:Value] Description: This tag specifies the minimum value a target must be at to be considered valid. Value must not be higher than MaxTargetValue Filter Required: TargetValue Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: MaxTargetValue Tag Format: [MaxTargetValue:Value] Description: This tag specifies the maximum value a target must be at to be considered valid. Value must not be lower than MinTargetValue Filter Required: TargetValue Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: Names Tag Format: [Names:Value] Description: This tag allows you to narrow down targets based on their Name (Block/Grid CustomName and Player DisplayName) Filter Required: Name Allowed Values: Any Name Multiple Tag Allowed: Yes Tag: UsePartialNameMatching Tag Format: [UsePartialNameMatching:Value] Description: This tag specifies if names used in provided Names tag are allowed to be a partial match. If false , then a target name must match exactly with one of the names provided. Filter Required: Name Allowed Values: true false Multiple Tag Allowed: No Tag: MinMovementScore Tag Format: [MinMovementScore:Value] Description: This tag specifies the minimum movement score (bounding-box size multiplied by current speed) a target must have to be considered valid Filter Required: MovementScore Allowed Values: Any Number Higher Than 0 Value should be lower than MaxMovementScore if tag is provided. Multiple Tag Allowed: No Tag: MaxMovementScore Tag Format: [MaxMovementScore:Value] Description: This tag specifies the maximum movement score (bounding-box size multiplied by current speed) a target must have to be considered valid. Filter Required: MovementScore Allowed Values: Any Number Higher Than 0 Value should be lower than MaxMovementScore if tag is provided. Multiple Tag Allowed: No Tag: MaxMovementDetectableDistance Tag Format: [MaxMovementDetectableDistance:Value] Description: This tag specifies the maximum distance from the NPC that Movement Score is eligible to be calculated at. Filter Required: MovementScore Allowed Values: Any Number Higher Than 0 . Multiple Tag Allowed: No Tag: MaxLineOfSight Tag Format: [MaxLineOfSight:Value] Description: This tag specifies the maximum distance that is used when performing a Line of Sight check Filter Required: LineOfSight Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No Tag: PlayerKnownLocationFactionOverride Tag Format: [PlayerKnownLocationFactionOverride:Value] Description: This tag allows you to override the Player Known Location Faction Check to use a faction that is different from the faction that owns the NPC Remote Control Filter Required: PlayerKnownLocation Allowed Values: Any NPC Faction Tag Multiple Tag Allowed: No Tag: StealthDriveMinDistance Tag Format: [StealthDriveMinDistance:Value] Description: This tag specifies the minimum distance a target must maintain in order to remain undetectable while using a Stealth Drive. Filter Required: LineOfSight Allowed Values: Any Number Higher Than 0 Multiple Tag Allowed: No","title":"Target.md"},{"location":"TextTemplate/","text":"TextTemplate.md TextTemplate files are custom XML files that allow you to define text that can be used in various applications. At the time of this page being written, these files can only currently be used for changing Block CustomData. How to Create and Use These Files These files are not like .sbc files, they can not be placed in any directory in your mod. The files also must end in .xml extensions. Below is the folder/directory you must place these files in: YourModFolder\\Data\\TextTemplates\\ A full example would be: YourModFolder\\Data\\TextTemplates\\SomeTextTemplateFile.xml A single file should contain a single TextTemplate. You cannot store multiple TextTemplates in a single file. When using your TextTemplate, you'll reference it by using its file name. Example: [SomeTagRequiringTextTemplate:SomeTextTemplateFile.xml] File Setup Depending on what you're using the file for, you'll use one of the following data structures below: Custom Data <?xml version=\"1.0\" encoding=\"utf-16\"?> <TextTemplate xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <CustomData>Some Sample Custom Data</CustomData> </TextTemplate> Datapad <?xml version=\"1.0\" encoding=\"utf-16\"?> <TextTemplate xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <DataPadEntries> <DataPadEntry> <DataPadTitle>Some Title</DataPadTitle> <DataPadBody>Lorem Ipsum Yaddy Yadda</DataPadBody> </DataPadEntry> </DataPadEntries> </TextTemplate> LCD Contents <?xml version=\"1.0\" encoding=\"utf-16\"?> <TextTemplate xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <LcdEntries> <LcdEntry> <TextSurfaceIndex>0</TextSurfaceIndex> <ApplyLcdText>false</ApplyLcdText> <LcdText>Some Text For LCD</LcdText> <ApplyLcdImage>false</ApplyLcdImage> <LcdImages>SomeLcdImageSubtypeId</LcdImages> <LcdImages>AnotherLcdImageSubtypeId</LcdImages> <LcdImages>AndAnotherLcdImageSubtypeId</LcdImages> <LcdImageChangeDelay>3</LcdImageChangeDelay> </LcdEntry> </LcdEntries> </TextTemplate>","title":"TextTemplate.md"},{"location":"TextTemplate/#texttemplatemd","text":"TextTemplate files are custom XML files that allow you to define text that can be used in various applications. At the time of this page being written, these files can only currently be used for changing Block CustomData.","title":"TextTemplate.md"},{"location":"TextTemplate/#how-to-create-and-use-these-files","text":"These files are not like .sbc files, they can not be placed in any directory in your mod. The files also must end in .xml extensions. Below is the folder/directory you must place these files in: YourModFolder\\Data\\TextTemplates\\ A full example would be: YourModFolder\\Data\\TextTemplates\\SomeTextTemplateFile.xml A single file should contain a single TextTemplate. You cannot store multiple TextTemplates in a single file. When using your TextTemplate, you'll reference it by using its file name. Example: [SomeTagRequiringTextTemplate:SomeTextTemplateFile.xml]","title":"How to Create and Use These Files"},{"location":"TextTemplate/#file-setup","text":"Depending on what you're using the file for, you'll use one of the following data structures below: Custom Data <?xml version=\"1.0\" encoding=\"utf-16\"?> <TextTemplate xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <CustomData>Some Sample Custom Data</CustomData> </TextTemplate> Datapad <?xml version=\"1.0\" encoding=\"utf-16\"?> <TextTemplate xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <DataPadEntries> <DataPadEntry> <DataPadTitle>Some Title</DataPadTitle> <DataPadBody>Lorem Ipsum Yaddy Yadda</DataPadBody> </DataPadEntry> </DataPadEntries> </TextTemplate> LCD Contents <?xml version=\"1.0\" encoding=\"utf-16\"?> <TextTemplate xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <LcdEntries> <LcdEntry> <TextSurfaceIndex>0</TextSurfaceIndex> <ApplyLcdText>false</ApplyLcdText> <LcdText>Some Text For LCD</LcdText> <ApplyLcdImage>false</ApplyLcdImage> <LcdImages>SomeLcdImageSubtypeId</LcdImages> <LcdImages>AnotherLcdImageSubtypeId</LcdImages> <LcdImages>AndAnotherLcdImageSubtypeId</LcdImages> <LcdImageChangeDelay>3</LcdImageChangeDelay> </LcdEntry> </LcdEntries> </TextTemplate>","title":"File Setup"},{"location":"Trigger-Group/","text":"Trigger-Group.md Trigger Group Profiles in Rival AI are used to group together multiple Trigger Profile names so they can easily be applied to behaviors that use those triggers often (reducing visual clutter and copy/paste activity). You can attach your Trigger Group Profiles to any Behavior Profile by adding a [TriggerGroups:Value] tag to the Behavior and replace Value with the SubtypeId of your Trigger Group Profile. Example: [TriggerGroups:RAI-ExampleTriggerGroupProfile] Multiple Trigger Group Profiles can be attached to a single behavior as well, just include additional [TriggerGroups:Value] lines in your Behavior Profile. It is important that you use a unique SubtypeId for each Trigger Group Profile you create, otherwise they may not work correctly. Here is an example of how a Trigger Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleTriggerGroupProfile</SubtypeId> </Id> <Description> [RivalAI TriggerGroup] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Trigger Group Profiles. Tag: Triggers Tag Format: [Triggers:Value] Description: This tag specifies the name of Trigger profile this group should use. Allowed Values: Any Trigger Profile SubtypeId Multiple Tag Allowed: Yes","title":"Trigger-Group.md"},{"location":"Trigger-Group/#trigger-groupmd","text":"Trigger Group Profiles in Rival AI are used to group together multiple Trigger Profile names so they can easily be applied to behaviors that use those triggers often (reducing visual clutter and copy/paste activity). You can attach your Trigger Group Profiles to any Behavior Profile by adding a [TriggerGroups:Value] tag to the Behavior and replace Value with the SubtypeId of your Trigger Group Profile. Example: [TriggerGroups:RAI-ExampleTriggerGroupProfile] Multiple Trigger Group Profiles can be attached to a single behavior as well, just include additional [TriggerGroups:Value] lines in your Behavior Profile. It is important that you use a unique SubtypeId for each Trigger Group Profile you create, otherwise they may not work correctly. Here is an example of how a Trigger Group Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleTriggerGroupProfile</SubtypeId> </Id> <Description> [RivalAI TriggerGroup] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Trigger Group Profiles. Tag: Triggers Tag Format: [Triggers:Value] Description: This tag specifies the name of Trigger profile this group should use. Allowed Values: Any Trigger Profile SubtypeId Multiple Tag Allowed: Yes","title":"Trigger-Group.md"},{"location":"Trigger/","text":"Trigger.md Trigger Profiles in Rival AI are used to watch for specific events that happen near/to your current NPC grid, and then trigger an Action Profile if the conditions are satisfied. This allows for a wide variety of If THIS, Do THAT type of behavior. You can attach your Trigger Profiles to any Behavior Profile by adding a [Triggers:Value] tag to the Behavior and replace Value with the SubtypeId of your Trigger Profile. Example: [Triggers:RAI-ExampleTriggerProfile] Multiple Trigger Profiles can be attached to a single behavior as well, just include additional [Triggers:Value] lines in your Behavior Profile. It is important that you use a unique SubtypeId for each Trigger Profile you create, otherwise they may not work correctly. Here is an example of how a Trigger Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleTriggerProfile</SubtypeId> </Id> <Description> [RivalAI Trigger] </Description> </EntityComponent> </EntityComponents> </Definitions> All Trigger Profiles require the Type tag. This is what determines what sort of conditions the Trigger watches for. Here is a list of all the available Types and their descriptions. Type: Description: AcquiredTarget A trigger that activates when the NPC has acquired a target when not having a previous target ActiveGunsPercentage A trigger that will activate if the NPC Static Guns Remaining are above a certain percentage. ActiveTurretsPercentage A trigger that will activate if the NPC Turrets Remaining are above a certain percentage. ActiveWeaponsPercentage A trigger that will activate if the NPC Total Weapons Remaining are above a certain percentage. BehaviorTriggerA A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerB A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerC A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerD A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerE A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerF A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) ButtonPress A trigger that is activated when a button panel is pressed on the NPC grid. ChangedTarget A trigger that activates when any of AcquiredTarget , LostTarget , or SwitchedTarget activate. CommandReceived A command listener that executes actions if another NPC Behavior broadcasts a correct Command Code Compromised A trigger that is activated when the Remote Control block stops working. Damage A damage watcher that executes actions when damage to the NPC is detected. Despawn A trigger that is activated when the NPC is despawned by RivalAI. DespawnMES A trigger that is activated when the NPC is despawned by the Modular Encounters Spawner. HasTarget A trigger that will activate while NPC has a valid target. HealthPercentage A trigger that will activate if the NPC health is above a certain percentage. InsideZone A trigger that will activate while NPC is inside a specified zone. JumpCompleted A trigger that will activate when a Jump Drive completes its jump. JumpRequested A trigger that will activate when a nearby Jump Drive is activated. LostTarget A trigger that activates when the NPC has lost a target and doesn't acquire a new one. Manual A trigger that activates when specifically called from another Action Profile. NoTarget A trigger that will activate while NPC has no valid target. NoWeapon A block watcher that executes actions if all weapons on the NPC grid becomes non-fireable OutsideZone A trigger that will activate while NPC is outside a specified zone. PlayerFar A proximity watcher that executes actions if players are outside a certain range. PlayerKnownLocation A trigger that will activate if the NPC is inside a Known Player Location belonging to its own faction. PlayerNear A proximity watcher that executes actions if players come within a certain range. Retreat A trigger that will activate if the Retreat BehaviorMode is activated on an NPC. SensorActive A proximity watcher that executes actions if a named Sensor Block is currently Activated. SensorIdle A proximity watcher that executes actions if a named Sensor Block is currently Idle. Session A trigger that only activates once per session (ie: when the encounter spawns or when the game loads/reloads). SwitchTarget A trigger that activates when the NPC switches from one target to another. TargetFar A proximity watcher that executes actions if a target is outside a certain range. TargetInSafezone A target watcher that executes actions if a target moves into a SafeZone TargetNear A proximity watcher that executes actions if a target come within a certain range. Timer A basic timer trigger that executes actions after the cooldown time limit has passed. TurretTarget A turret target watcher that executes actions when a turret acquires a target. Weather A trigger that will execute if the NPC is within one or more specified Weather Systems. Below are the tags you are able to use in your Trigger Profiles. Please note that some tags are only compatible with certain Trigger Types. Those tags are identified in the Compatible Types: section of each tag description. Tag: Type Tag Format: [Type:Value] Description: This tag specifies the type of Trigger this profile should use. Allowed Values: See Table Above For Allowed Values Compatible Types: All Multiple Tag Allowed: No Tag: UseTrigger Tag Format: [UseTrigger:Value] Description: This tag specifies if an attached Trigger Profile should be used / active. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: TargetDistance Tag Format: [TargetDistance:Value] Description: This tag specifies the distance a player / target must be within before the Trigger activates. Allowed Values: Any number greater than 0 Compatible Types: PlayerNear PlayerFar TargetNear TargetFar Multiple Tag Allowed: No Tag: AllowTargetFarWithoutTarget Tag Format: [AllowTargetFarWithoutTarget:Value] Description: Determines if the Trigger type TargetFar can activate if the behavior does not currently have a target. Allowed Values: true false Compatible Types: TargetFar Multiple Tag Allowed: No Tag: InsideAntenna Tag Format: [InsideAntenna:Value] Description: This tag specifies if a target must be within the range of an active Antenna on the NPC grid before activating. Please note that you should still define a TargetDistance distance tag if using this. Allowed Values: true false Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: InsideAntennaName Tag Format: [InsideAntennaName:Value] Description: This tag specifies the specific block name the antenna must have if using the InsideAntenna tag. Allowed Values: Any Text Value Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: UsePlayerCondition Tag Format: [UsePlayerCondition:Value] Description: Allowed Values: true false Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: Allowed Values: Any Text Value Compatible Types: PlayerNear PlayerFar PlayerFar Multiple Tag Allowed: yes Tag: PlayerNearPositionOffset Tag Format: [PlayerNearPositionOffset:Value] Description: This tag specifies an X,Y,Z offset from where the NPC Remote Control is location that is used for PlayerNear calculations instead of just the block's position. Allowed Values: Vector3D Value (Example below) {X:0 Y:0 Z:0} X -+ = Left/Right Y -+ = Down/Up Z -+ = Back/Forward Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: MinCooldownMs Tag Format: [MinCooldownMs:Value] Description: This tag specifies the minimum time (in milliseconds) that a trigger must wait before it can be triggered again. Allowed Values: Any integer higher than 0 Must be lower than MaxCooldownMs Compatible Types: All Multiple Tag Allowed: No Tag: MaxCooldownMs Tag Format: [MaxCooldownMs:Value] Description: This tag specifies the maximum time (in milliseconds) that a trigger must wait before it can be triggered again. Allowed Values: Any integer higher than 0 Must be higher than MinCooldownMs Compatible Types: All Multiple Tag Allowed: No Tag: StartsReady Tag Format: [StartsReady:Value] Description: This tag specifies if the trigger timer is ready to activate when the NPC loads. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: MaxActions Tag Format: [MaxActions:Value] Description: This tag specifies how many times this trigger is allowed to activate its Actions. Allowed Values: Any integer higher than 0 -1 for no limit Compatible Types: All Multiple Tag Allowed: No Tag: ActionExecution Tag Format: [ActionExecution:Value] Description: This tag specifies how triggers with Multiple Action Profiles will execute. All will execute every Action at once when the trigger is activated. Sequential will process Actions one at a time per activation of Trigger. Random will select a random Action to execute when the Trigger is activated. Allowed Values: All Sequential Random Compatible Types: All Multiple Tag Allowed: No Tag: Actions Tag Format: [Actions:Value] Description: This tag specifies which Action Profile will be executed when the Trigger Profile conditions are satisfied. Allowed Values: Any Action Profile SubtypeId Compatible Types: All Multiple Tag Allowed: Yes Tag: DamageTypes Tag Format: [DamageTypes:Value] Description: This tag specifies the types of Damage that can activate a Trigger Profile using the Damage Type. Below you will find the vanilla damage types - you are not limited to these exclusively, since some modded weapons define their own custom damage types as well. Allowed Values: Any , Unknown , Explosion , Rocket , Bullet , Mine , Environment , Drill , Radioactivity , Deformation , Suicide , Fall , Weapon , Fire , Squeez , Grind , Weld , Asphyxia , LowPressure , Bolt , Destruction , Debug , Wolf , Spider , Temperature Compatible Types: Damage Multiple Tag Allowed: Yes Tag: ExcludedDamageTypes Tag Format: [ExcludedDamageTypes:Value] Description: This tag specifies the types of Damage that should be excluded from being able to activate the trigger if you use the Any value in your DamageTypes tag. Allowed Values: Unknown , Explosion , Rocket , Bullet , Mine , Environment , Drill , Radioactivity , Deformation , Suicide , Fall , Weapon , Fire , Squeez , Grind , Weld , Asphyxia , LowPressure , Bolt , Destruction , Debug , Wolf , Spider , Temperature Compatible Types: Damage Multiple Tag Allowed: Yes Tag: MinPlayerReputation Tag Format: [MinPlayerReputation:Value] Description: This tag specifies the minimum reputation a nearby player must have with the current NPC. Allowed Values: Any integer between -1500 and 1500 Must be lower than MaxPlayerReputation Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: MaxPlayerReputation Tag Format: [MaxPlayerReputation:Value] Description: This tag specifies the maximum reputation a nearby player must have with the current NPC. Allowed Values: Any integer between -1500 and 1500 Must be higher than MinPlayerReputation Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: AllPlayersMustMatchReputation Tag Format: [AllPlayersMustMatchReputation:Value] Description: This tag specifies if all players within the range of the CustomReputationRangeCheck value must match the minimum and maximum reputation values. IF they do not, then the trigger will fail to execute. Allowed Values: true false Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: CustomReputationRangeCheck Tag Format: [CustomReputationRangeCheck:Value] Description: This tag specifies the range that is used to check player reputations if AllPlayersMustMatchReputation is true . Allowed Values: Any Number Greater Than 0 Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: Conditions Tag Format: [Conditions:Value] Description: This tag specifies allows you to provide a SubtypeId of a Condition Profile that can be used to perform further checks before the Trigger is activated. Allowed Values: Any Condition Profile SubtypeId Compatible Types: All Multiple Tag Allowed: No Tag: ConditionCheckResetsTimer Tag Format: [ConditionCheckResetsTimer:Value] Description: Specifies if a ConditionCheck (whether successful or not) resets the Cooldown timer for the current Trigger. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: CommandReceiveCode Tag Format: [CommandReceiveCode:Value] Description: Specifies a code that must be received via Antenna Broadcast (codes are sent via Action Profiles) before the Trigger can be activated. Allowed Values: Any string text excluding : , [ , ] Compatible Types: CommandReceived Multiple Tag Allowed: No Tag: SensorName Tag Format: [SensorName:Value] Description: Specifies the name of a Sensor Block that is used for triggers that activate using sensors. Allowed Values: Any string text excluding : , [ , ] Compatible Types: SensorActive SensorIdle Multiple Tag Allowed: No Tag: DespawnTypeFromSpawner Tag Format: [DespawnTypeFromSpawner:Value] Description: Specifies the type of Despawn Request from the Modular Encounters Spawner required to activate the trigger. Allowed Values: Any PathEnd CleanUp Compatible Types: DespawnMES Multiple Tag Allowed: No Tag: WeatherTypes Tag Format: [WeatherTypes:Value] Description: This tag specifies the types of Weather that are allowed to activate a Trigger using the Weather type. Allowed Values: Any Weather SubtypeId Compatible Types: Weather Multiple Tag Allowed: Yes Tag: ToggleWithTriggerProfile Tag Format: [ToggleWithTriggerProfile:Value] Description: Specifies the name of another attached trigger profile that will have its UseTrigger value turned on when this trigger activates. The UseTrigger value of this trigger is simultanously turned off. Allowed Values: Any Trigger Profile SubtypeId Compatible Types: All Multiple Tag Allowed: No Tag: ToggledProfileResetsCooldown Tag Format: [ToggledProfileResetsCooldown:Value] Description: Specifies if the trigger that is enabled while using ToggleWithTriggerProfile should have its cooldown timer reset at the same time. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: Specifies if the trigger should instead activate only when its Type condition (any any attached Condition Profiles) do not pass their checks. This does not apply to the trigger Cooldown as a fail condition. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: UseElseActions Tag Format: [UseElseActions:Value] Description: Specifies if the trigger should instead execute a separate set of Actions when its Type condition (any any attached Condition Profiles) do not pass their checks. This does not apply to the trigger Cooldown as a fail condition. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: ElseActions Tag Format: [ElseActions:Value] Description: This tag specifies which Action Profiles will be executed when the Trigger Profile conditions are NOT satisfied if also using the UseElseActions tag. Allowed Values: Any Action Profile SubtypeId Compatible Types: All Multiple Tag Allowed: Yes Tag: ZoneName Tag Format: [ZoneName:Value] Description: This tag specifies the name of a zone the NPC must be inside/outside for the trigger to activate Allowed Value(s): Any Zone Name Compatible Types: InsideZone OutsideZone Multiple Tags Allowed: No Tag: EnableNamedTriggerOnSuccess Tag Format: [EnableNamedTriggerOnSuccess:Value] Description: This tag specifies the name of a trigger profile that will become enabled if this trigger is activated successfully. Allowed Value(s): Any Trigger Profile SubtypeId Compatible Types: All Multiple Tags Allowed: No Tag: DisableNamedTriggerOnSuccess Tag Format: [DisableNamedTriggerOnSuccess:Value] Description: This tag specifies the name of a trigger profile that will become disabled if this trigger is activated successfully. Allowed Value(s): Any Trigger Profile SubtypeId Compatible Types: All Multiple Tags Allowed: No Tag: JumpedGridActivationDistance Tag Format: [JumpedGridActivationDistance:Value] Description: This tag specifies the max distance from a jump drive activation or jump starting position that is allowed for the trigger to activate. Allowed Value(s): Any Number Greater/Equal To `0' Compatible Types: JumpRequested JumpCompleted Multiple Tags Allowed: No Tag: JumpedGridsCanBeNonHostile Tag Format: [JumpedGridsCanBeNonHostile:Value] Description: This tag specifies if Jumping/Jumped entity is allowed to be non-hostile to the NPC. Allowed Value(s): true false Compatible Types: JumpRequested JumpCompleted Multiple Tags Allowed: No Tag: DetectSelfAsJumpedGrid Tag Format: [DetectSelfAsJumpedGrid:Value] Description: This tag specifies if the NPC using this trigger is allowed to be the Jumping/Jumped entity. Allowed Value(s): true false Compatible Types: JumpRequested JumpCompleted Multiple Tags Allowed: No Tag: ButtonPanelName Tag Format: [ButtonPanelName:Value] Description: This tag specifies the name of the ButtonPanel block is that monitored when using a ButtonPress trigger. Allowed Value(s): Any ButtonPanel Block Name Compatible Types: ButtonPress Multiple Tags Allowed: No Tag: ButtonPanelIndex Tag Format: [ButtonPanelIndex:Value] Description: This tag specifies the button index that is monitored when using a ButtonPress trigger. For example, a 4 button block would have indexes 0, 1, 2, 3. Allowed Value(s): Any ButtonPanel Index Compatible Types: ButtonPress Multiple Tags Allowed: No Tag: PercentageOfWeaponsRemaining Tag Format: [PercentageOfWeaponsRemaining:Value] Description: This tag allows you to specify the percentage of weapons that must be remaining in order for the trigger to be able to activate. Allowed Value(s): Any Number Greater/Equal To 0 Compatible Types: ActiveGunsPercentage ActiveTurretsPercentage br /> ActiveWeaponsPercentage Multiple Tags Allowed: No Tag: PercentageOfHealthRemaining Tag Format: [PercentageOfHealthRemaining:Value] Description: This tag allows you to specify the percentage of grid health that must be remaining in order for the trigger to be able to activate. Allowed Value(s): Any Number Greater/Equal To 0 Compatible Types: HealthPercentage Multiple Tags Allowed: No","title":"Trigger.md"},{"location":"Trigger/#triggermd","text":"Trigger Profiles in Rival AI are used to watch for specific events that happen near/to your current NPC grid, and then trigger an Action Profile if the conditions are satisfied. This allows for a wide variety of If THIS, Do THAT type of behavior. You can attach your Trigger Profiles to any Behavior Profile by adding a [Triggers:Value] tag to the Behavior and replace Value with the SubtypeId of your Trigger Profile. Example: [Triggers:RAI-ExampleTriggerProfile] Multiple Trigger Profiles can be attached to a single behavior as well, just include additional [Triggers:Value] lines in your Behavior Profile. It is important that you use a unique SubtypeId for each Trigger Profile you create, otherwise they may not work correctly. Here is an example of how a Trigger Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleTriggerProfile</SubtypeId> </Id> <Description> [RivalAI Trigger] </Description> </EntityComponent> </EntityComponents> </Definitions> All Trigger Profiles require the Type tag. This is what determines what sort of conditions the Trigger watches for. Here is a list of all the available Types and their descriptions. Type: Description: AcquiredTarget A trigger that activates when the NPC has acquired a target when not having a previous target ActiveGunsPercentage A trigger that will activate if the NPC Static Guns Remaining are above a certain percentage. ActiveTurretsPercentage A trigger that will activate if the NPC Turrets Remaining are above a certain percentage. ActiveWeaponsPercentage A trigger that will activate if the NPC Total Weapons Remaining are above a certain percentage. BehaviorTriggerA A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerB A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerC A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerD A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerE A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) BehaviorTriggerF A trigger that is executed when behavior specific events happen (see Behavior Specific Tags for details) ButtonPress A trigger that is activated when a button panel is pressed on the NPC grid. ChangedTarget A trigger that activates when any of AcquiredTarget , LostTarget , or SwitchedTarget activate. CommandReceived A command listener that executes actions if another NPC Behavior broadcasts a correct Command Code Compromised A trigger that is activated when the Remote Control block stops working. Damage A damage watcher that executes actions when damage to the NPC is detected. Despawn A trigger that is activated when the NPC is despawned by RivalAI. DespawnMES A trigger that is activated when the NPC is despawned by the Modular Encounters Spawner. HasTarget A trigger that will activate while NPC has a valid target. HealthPercentage A trigger that will activate if the NPC health is above a certain percentage. InsideZone A trigger that will activate while NPC is inside a specified zone. JumpCompleted A trigger that will activate when a Jump Drive completes its jump. JumpRequested A trigger that will activate when a nearby Jump Drive is activated. LostTarget A trigger that activates when the NPC has lost a target and doesn't acquire a new one. Manual A trigger that activates when specifically called from another Action Profile. NoTarget A trigger that will activate while NPC has no valid target. NoWeapon A block watcher that executes actions if all weapons on the NPC grid becomes non-fireable OutsideZone A trigger that will activate while NPC is outside a specified zone. PlayerFar A proximity watcher that executes actions if players are outside a certain range. PlayerKnownLocation A trigger that will activate if the NPC is inside a Known Player Location belonging to its own faction. PlayerNear A proximity watcher that executes actions if players come within a certain range. Retreat A trigger that will activate if the Retreat BehaviorMode is activated on an NPC. SensorActive A proximity watcher that executes actions if a named Sensor Block is currently Activated. SensorIdle A proximity watcher that executes actions if a named Sensor Block is currently Idle. Session A trigger that only activates once per session (ie: when the encounter spawns or when the game loads/reloads). SwitchTarget A trigger that activates when the NPC switches from one target to another. TargetFar A proximity watcher that executes actions if a target is outside a certain range. TargetInSafezone A target watcher that executes actions if a target moves into a SafeZone TargetNear A proximity watcher that executes actions if a target come within a certain range. Timer A basic timer trigger that executes actions after the cooldown time limit has passed. TurretTarget A turret target watcher that executes actions when a turret acquires a target. Weather A trigger that will execute if the NPC is within one or more specified Weather Systems. Below are the tags you are able to use in your Trigger Profiles. Please note that some tags are only compatible with certain Trigger Types. Those tags are identified in the Compatible Types: section of each tag description. Tag: Type Tag Format: [Type:Value] Description: This tag specifies the type of Trigger this profile should use. Allowed Values: See Table Above For Allowed Values Compatible Types: All Multiple Tag Allowed: No Tag: UseTrigger Tag Format: [UseTrigger:Value] Description: This tag specifies if an attached Trigger Profile should be used / active. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: TargetDistance Tag Format: [TargetDistance:Value] Description: This tag specifies the distance a player / target must be within before the Trigger activates. Allowed Values: Any number greater than 0 Compatible Types: PlayerNear PlayerFar TargetNear TargetFar Multiple Tag Allowed: No Tag: AllowTargetFarWithoutTarget Tag Format: [AllowTargetFarWithoutTarget:Value] Description: Determines if the Trigger type TargetFar can activate if the behavior does not currently have a target. Allowed Values: true false Compatible Types: TargetFar Multiple Tag Allowed: No Tag: InsideAntenna Tag Format: [InsideAntenna:Value] Description: This tag specifies if a target must be within the range of an active Antenna on the NPC grid before activating. Please note that you should still define a TargetDistance distance tag if using this. Allowed Values: true false Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: InsideAntennaName Tag Format: [InsideAntennaName:Value] Description: This tag specifies the specific block name the antenna must have if using the InsideAntenna tag. Allowed Values: Any Text Value Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: UsePlayerCondition Tag Format: [UsePlayerCondition:Value] Description: Allowed Values: true false Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: PlayerConditionIds Tag Format: [PlayerConditionIds:Value] Description: Allowed Values: Any Text Value Compatible Types: PlayerNear PlayerFar PlayerFar Multiple Tag Allowed: yes Tag: PlayerNearPositionOffset Tag Format: [PlayerNearPositionOffset:Value] Description: This tag specifies an X,Y,Z offset from where the NPC Remote Control is location that is used for PlayerNear calculations instead of just the block's position. Allowed Values: Vector3D Value (Example below) {X:0 Y:0 Z:0} X -+ = Left/Right Y -+ = Down/Up Z -+ = Back/Forward Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: MinCooldownMs Tag Format: [MinCooldownMs:Value] Description: This tag specifies the minimum time (in milliseconds) that a trigger must wait before it can be triggered again. Allowed Values: Any integer higher than 0 Must be lower than MaxCooldownMs Compatible Types: All Multiple Tag Allowed: No Tag: MaxCooldownMs Tag Format: [MaxCooldownMs:Value] Description: This tag specifies the maximum time (in milliseconds) that a trigger must wait before it can be triggered again. Allowed Values: Any integer higher than 0 Must be higher than MinCooldownMs Compatible Types: All Multiple Tag Allowed: No Tag: StartsReady Tag Format: [StartsReady:Value] Description: This tag specifies if the trigger timer is ready to activate when the NPC loads. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: MaxActions Tag Format: [MaxActions:Value] Description: This tag specifies how many times this trigger is allowed to activate its Actions. Allowed Values: Any integer higher than 0 -1 for no limit Compatible Types: All Multiple Tag Allowed: No Tag: ActionExecution Tag Format: [ActionExecution:Value] Description: This tag specifies how triggers with Multiple Action Profiles will execute. All will execute every Action at once when the trigger is activated. Sequential will process Actions one at a time per activation of Trigger. Random will select a random Action to execute when the Trigger is activated. Allowed Values: All Sequential Random Compatible Types: All Multiple Tag Allowed: No Tag: Actions Tag Format: [Actions:Value] Description: This tag specifies which Action Profile will be executed when the Trigger Profile conditions are satisfied. Allowed Values: Any Action Profile SubtypeId Compatible Types: All Multiple Tag Allowed: Yes Tag: DamageTypes Tag Format: [DamageTypes:Value] Description: This tag specifies the types of Damage that can activate a Trigger Profile using the Damage Type. Below you will find the vanilla damage types - you are not limited to these exclusively, since some modded weapons define their own custom damage types as well. Allowed Values: Any , Unknown , Explosion , Rocket , Bullet , Mine , Environment , Drill , Radioactivity , Deformation , Suicide , Fall , Weapon , Fire , Squeez , Grind , Weld , Asphyxia , LowPressure , Bolt , Destruction , Debug , Wolf , Spider , Temperature Compatible Types: Damage Multiple Tag Allowed: Yes Tag: ExcludedDamageTypes Tag Format: [ExcludedDamageTypes:Value] Description: This tag specifies the types of Damage that should be excluded from being able to activate the trigger if you use the Any value in your DamageTypes tag. Allowed Values: Unknown , Explosion , Rocket , Bullet , Mine , Environment , Drill , Radioactivity , Deformation , Suicide , Fall , Weapon , Fire , Squeez , Grind , Weld , Asphyxia , LowPressure , Bolt , Destruction , Debug , Wolf , Spider , Temperature Compatible Types: Damage Multiple Tag Allowed: Yes Tag: MinPlayerReputation Tag Format: [MinPlayerReputation:Value] Description: This tag specifies the minimum reputation a nearby player must have with the current NPC. Allowed Values: Any integer between -1500 and 1500 Must be lower than MaxPlayerReputation Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: MaxPlayerReputation Tag Format: [MaxPlayerReputation:Value] Description: This tag specifies the maximum reputation a nearby player must have with the current NPC. Allowed Values: Any integer between -1500 and 1500 Must be higher than MinPlayerReputation Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: AllPlayersMustMatchReputation Tag Format: [AllPlayersMustMatchReputation:Value] Description: This tag specifies if all players within the range of the CustomReputationRangeCheck value must match the minimum and maximum reputation values. IF they do not, then the trigger will fail to execute. Allowed Values: true false Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: CustomReputationRangeCheck Tag Format: [CustomReputationRangeCheck:Value] Description: This tag specifies the range that is used to check player reputations if AllPlayersMustMatchReputation is true . Allowed Values: Any Number Greater Than 0 Compatible Types: PlayerNear PlayerFar Multiple Tag Allowed: No Tag: Conditions Tag Format: [Conditions:Value] Description: This tag specifies allows you to provide a SubtypeId of a Condition Profile that can be used to perform further checks before the Trigger is activated. Allowed Values: Any Condition Profile SubtypeId Compatible Types: All Multiple Tag Allowed: No Tag: ConditionCheckResetsTimer Tag Format: [ConditionCheckResetsTimer:Value] Description: Specifies if a ConditionCheck (whether successful or not) resets the Cooldown timer for the current Trigger. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: CommandReceiveCode Tag Format: [CommandReceiveCode:Value] Description: Specifies a code that must be received via Antenna Broadcast (codes are sent via Action Profiles) before the Trigger can be activated. Allowed Values: Any string text excluding : , [ , ] Compatible Types: CommandReceived Multiple Tag Allowed: No Tag: SensorName Tag Format: [SensorName:Value] Description: Specifies the name of a Sensor Block that is used for triggers that activate using sensors. Allowed Values: Any string text excluding : , [ , ] Compatible Types: SensorActive SensorIdle Multiple Tag Allowed: No Tag: DespawnTypeFromSpawner Tag Format: [DespawnTypeFromSpawner:Value] Description: Specifies the type of Despawn Request from the Modular Encounters Spawner required to activate the trigger. Allowed Values: Any PathEnd CleanUp Compatible Types: DespawnMES Multiple Tag Allowed: No Tag: WeatherTypes Tag Format: [WeatherTypes:Value] Description: This tag specifies the types of Weather that are allowed to activate a Trigger using the Weather type. Allowed Values: Any Weather SubtypeId Compatible Types: Weather Multiple Tag Allowed: Yes Tag: ToggleWithTriggerProfile Tag Format: [ToggleWithTriggerProfile:Value] Description: Specifies the name of another attached trigger profile that will have its UseTrigger value turned on when this trigger activates. The UseTrigger value of this trigger is simultanously turned off. Allowed Values: Any Trigger Profile SubtypeId Compatible Types: All Multiple Tag Allowed: No Tag: ToggledProfileResetsCooldown Tag Format: [ToggledProfileResetsCooldown:Value] Description: Specifies if the trigger that is enabled while using ToggleWithTriggerProfile should have its cooldown timer reset at the same time. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: UseFailCondition Tag Format: [UseFailCondition:Value] Description: Specifies if the trigger should instead activate only when its Type condition (any any attached Condition Profiles) do not pass their checks. This does not apply to the trigger Cooldown as a fail condition. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: UseElseActions Tag Format: [UseElseActions:Value] Description: Specifies if the trigger should instead execute a separate set of Actions when its Type condition (any any attached Condition Profiles) do not pass their checks. This does not apply to the trigger Cooldown as a fail condition. Allowed Values: true false Compatible Types: All Multiple Tag Allowed: No Tag: ElseActions Tag Format: [ElseActions:Value] Description: This tag specifies which Action Profiles will be executed when the Trigger Profile conditions are NOT satisfied if also using the UseElseActions tag. Allowed Values: Any Action Profile SubtypeId Compatible Types: All Multiple Tag Allowed: Yes Tag: ZoneName Tag Format: [ZoneName:Value] Description: This tag specifies the name of a zone the NPC must be inside/outside for the trigger to activate Allowed Value(s): Any Zone Name Compatible Types: InsideZone OutsideZone Multiple Tags Allowed: No Tag: EnableNamedTriggerOnSuccess Tag Format: [EnableNamedTriggerOnSuccess:Value] Description: This tag specifies the name of a trigger profile that will become enabled if this trigger is activated successfully. Allowed Value(s): Any Trigger Profile SubtypeId Compatible Types: All Multiple Tags Allowed: No Tag: DisableNamedTriggerOnSuccess Tag Format: [DisableNamedTriggerOnSuccess:Value] Description: This tag specifies the name of a trigger profile that will become disabled if this trigger is activated successfully. Allowed Value(s): Any Trigger Profile SubtypeId Compatible Types: All Multiple Tags Allowed: No Tag: JumpedGridActivationDistance Tag Format: [JumpedGridActivationDistance:Value] Description: This tag specifies the max distance from a jump drive activation or jump starting position that is allowed for the trigger to activate. Allowed Value(s): Any Number Greater/Equal To `0' Compatible Types: JumpRequested JumpCompleted Multiple Tags Allowed: No Tag: JumpedGridsCanBeNonHostile Tag Format: [JumpedGridsCanBeNonHostile:Value] Description: This tag specifies if Jumping/Jumped entity is allowed to be non-hostile to the NPC. Allowed Value(s): true false Compatible Types: JumpRequested JumpCompleted Multiple Tags Allowed: No Tag: DetectSelfAsJumpedGrid Tag Format: [DetectSelfAsJumpedGrid:Value] Description: This tag specifies if the NPC using this trigger is allowed to be the Jumping/Jumped entity. Allowed Value(s): true false Compatible Types: JumpRequested JumpCompleted Multiple Tags Allowed: No Tag: ButtonPanelName Tag Format: [ButtonPanelName:Value] Description: This tag specifies the name of the ButtonPanel block is that monitored when using a ButtonPress trigger. Allowed Value(s): Any ButtonPanel Block Name Compatible Types: ButtonPress Multiple Tags Allowed: No Tag: ButtonPanelIndex Tag Format: [ButtonPanelIndex:Value] Description: This tag specifies the button index that is monitored when using a ButtonPress trigger. For example, a 4 button block would have indexes 0, 1, 2, 3. Allowed Value(s): Any ButtonPanel Index Compatible Types: ButtonPress Multiple Tags Allowed: No Tag: PercentageOfWeaponsRemaining Tag Format: [PercentageOfWeaponsRemaining:Value] Description: This tag allows you to specify the percentage of weapons that must be remaining in order for the trigger to be able to activate. Allowed Value(s): Any Number Greater/Equal To 0 Compatible Types: ActiveGunsPercentage ActiveTurretsPercentage br /> ActiveWeaponsPercentage Multiple Tags Allowed: No Tag: PercentageOfHealthRemaining Tag Format: [PercentageOfHealthRemaining:Value] Description: This tag allows you to specify the percentage of grid health that must be remaining in order for the trigger to be able to activate. Allowed Value(s): Any Number Greater/Equal To 0 Compatible Types: HealthPercentage Multiple Tags Allowed: No","title":"Trigger.md"},{"location":"Troubleshooting-Tips/","text":"Troubleshooting-Tips.md This page aims to provide some common troubleshooting steps you can try if your spawns or behaviors are not functioning as expected. Common Ensure That Profiles (SpawnGroup, Behavior, Profile, etc) Loaded Check to see if your various profiles were detected at load time. You can easily get this information with the chat command /MES.Info.GetAllProfiles . Check Your File Formats If you save one of your Definition Files (ie, SpawnGroup, Profile, or Other XML Based Document) with a File Extension other than .sbc , then the game will not load it. A common error is saving them with the .xml or .txt formats. Check For Duplicate SubtypeIDs If you use the same SubtypeID twice for a profile, spawngroup, etc - then the game will only use one of the definitions/profiles. This is a little trickier to look for, so I recommend using Notepad++ and using its search features to search for the ID across all your mod files. Spawning Behaviors Does the Grid Have a Remote Control? Ensure the grid you are trying to add behavior to has a Remote Control block that can be replaced by the Spawner during spawning (or that it is already has a RivalAI compatible remote control). Is the Spawn Properly Configured? Check your SpawnGroup / Spawn Conditions Profile Definition to ensure that the following tags are included: [UseRivalAi:true] [RivalAiReplaceRemoteControl:true] //If prefab has vanilla remote control Also, ensure that each of your prefabs that will use a behavior has the <Behaviour>YourBehaviorSubtypeId</Behaviour> tag, and ensure that YourBehaviorSubtypeId is replaced with the actual SubtypeId of your behavior profile.","title":"Troubleshooting-Tips.md"},{"location":"Troubleshooting-Tips/#troubleshooting-tipsmd","text":"This page aims to provide some common troubleshooting steps you can try if your spawns or behaviors are not functioning as expected.","title":"Troubleshooting-Tips.md"},{"location":"Troubleshooting-Tips/#common","text":"Ensure That Profiles (SpawnGroup, Behavior, Profile, etc) Loaded Check to see if your various profiles were detected at load time. You can easily get this information with the chat command /MES.Info.GetAllProfiles . Check Your File Formats If you save one of your Definition Files (ie, SpawnGroup, Profile, or Other XML Based Document) with a File Extension other than .sbc , then the game will not load it. A common error is saving them with the .xml or .txt formats. Check For Duplicate SubtypeIDs If you use the same SubtypeID twice for a profile, spawngroup, etc - then the game will only use one of the definitions/profiles. This is a little trickier to look for, so I recommend using Notepad++ and using its search features to search for the ID across all your mod files.","title":"Common"},{"location":"Troubleshooting-Tips/#spawning","text":"","title":"Spawning"},{"location":"Troubleshooting-Tips/#behaviors","text":"Does the Grid Have a Remote Control? Ensure the grid you are trying to add behavior to has a Remote Control block that can be replaced by the Spawner during spawning (or that it is already has a RivalAI compatible remote control). Is the Spawn Properly Configured? Check your SpawnGroup / Spawn Conditions Profile Definition to ensure that the following tags are included: [UseRivalAi:true] [RivalAiReplaceRemoteControl:true] //If prefab has vanilla remote control Also, ensure that each of your prefabs that will use a behavior has the <Behaviour>YourBehaviorSubtypeId</Behaviour> tag, and ensure that YourBehaviorSubtypeId is replaced with the actual SubtypeId of your behavior profile.","title":"Behaviors"},{"location":"Troubleshooting/","text":"Troubleshooting.md Here are some of the most common reasons you may not see encounters when you expect to, or why some encounters might not work properly: Planetary Installations Spawn Too High / Too Low From The Ground: This issue occurs when you're on a planet that is too far from the game world center (0,0,0). The effects don't usually become noticeable until after about 7500km-10000km. The reason this happens is because the vector calculations the game uses with voxels start to become less accurate at longer distances (this is a limitation of the game engine). A common cause of this issue is using worlds generated using the SEWorldGenPlugin, which can place planets at extreme distances from the center of the game world. Ships Falling or Not Behaving Properly While Using Infestation Enabled or Crew Enabled mods: These mods add NPC characters to seats, or add spiders that infest ships. However, they can also interfere with the regular operation of NPC Ship behaviors because they will sometimes (intentionally) break the Remote Control block that controls all the custom behavior so alternative behavior can be used (eg infestation). Please refer to the settings on those individual mods to address this. NPC Turrets Not Shooting: This is more common on servers, but can also happen in single player as well. There is a known bug affecting turrets and their ability to acquire a target . MES doesn't manage how NPC turrets work, it only puts ammo in the block and lets the vanilla logic do the rest. As a result, I cannot fix anything related to this on my end. One possible workaround is to use WeaponCore and its Vanilla Weapons Replacement mod, since it uses its own, not broken , targeting logic. Dedicated Server and Selective Physics Updates: If you decide to use the Selective Physics Updates option introduced in game version 1.196, you must use a SyncDistance no lower than 10000 . If the SyncDistance is lower, then the Modular Encounters Systems will be disabled. The reason for this harsh requirement is because most NPC grids operate outside of the default SyncDistance of 3000, and this server option stops their movement (physics) unless a player is within the SyncDistance range. There is no reasonable way to work around this other than increasing the SyncDistance. Reset Configurations: Sometimes I will update the default values in a SpawnType configuration file, however these changes will not automatically replace existing configurations in your existing saves. It's worth trying to reset your configuration files by either deleting them or using chat command /MES.Settings.ResetAll . If you've made changes to your configurations, you may want to backup those files before resetting them and testing with the fresh copies. NPCs Are Spawning With No Ownership: This is almost always the result of the NPC Faction being tampered with in some way. This can happen if an admin removes the founder from an NPC faction, if a player joins the NPC faction using admin controls, or if another script/plugin makes changes to the faction by adding/removing identities from it. None of the mods I curate make these sorts of changes . Unfortunately, I don't have an easy suggestion on how to correct many of these situations, since NPC factions are only generated once per world by the game. If you know how to edit the save file and undo any breaking changes, that is often the best way to handle it - otherwise you may have to create a new save to get NPCs spawning with correct ownership again. Check What Can Spawn In Your Vicinity: You can use a simple chat command to see what encounters are potentially eligible to spawm near you. The command is /MES.Info.GetEligibleSpawnsAtPosition . There is also a shorthand version of this command as well: /MES.GESAP . Depending on where you are and what mods you have loaded, it could just be an issue on being in an area where those mods cannot spawn encounters. Too Many Spawns: If you are playing in multiplayer, you may notice an increase in spawn activity. This is because each player is tied to their own spawning events. So if a bunch of players are all in one area, then a bunch of encounters can potentailly appear pretty quickly. To mitigate this, use the config to reduce the MaxShipsPerArea property of each encounter type to something that is more managable for your play style. The config files also control the time between spawns as well. Planetary Spawning: Planetary Cargo Ships will typically only spawn on full sized planets that have a rich atmosphere. If you are using a custom map with modded planets or planets that are too small in size, then the atmosphere required for spawning may not be enough and any spawn attempt will fail. For Planetary Installations , planets that have a rough surface will have less success in seeing installations appear - this is because the mod tries to find relatively flat areas to spawn these installations, so jagged and mountainous areas will likely not see many/any of these spawns. Planetary Cargo Ships Falling Out Of The Sky: This is almost always the result of other mods that cause changes to Thurster Balance, Fuel and Hydrogen Re-Balance, and Aerodynamic/Realistic thrust. Many planetary cargo ships are not designed to use these systems and may not work properly as a result. Critical Error In-Game Popup: These errors are often not a result of something wrong with the mod itself, but rather a result of Steam not downloading the mod properly. This can often be corrected by unsubscribing from the mod in question, waiting a little while, restarting steam, and then re-subscribing to the mod to force a new download. Encounter Specific Limitations: Some mods may use additional requirements that must be met before their encounters are able to spawn. These often include conditions such as Threat Score, PCU, Faction Reputation, and other conditions. These conditions are often listed on the mod pages of those encounters, so ensure you read the mod descriptions so that you understand the required conditions for their encounters. Ships/Drones Not Doing Anything: This is often because the drone encounters of a mod require the In-Game Scripts World Option to be enabled. When creating a new world, this option is typically OFF by default, so ensure you double check this to ensure it's ON. Too Many Active Encounters: If encounters are not spawning, it may be because there are too many active encounters in the world. Try removing some grids using the Admin Tools (Alt+F10). Current Game Version: I will often update the Modular Encounters Systems with new features as they are released with Base Game Major Updates. As a result, the framework is only compatible with the latest version of Space Engineers. If you attempt to run it in older versions, the scripts the framework uses to operate may not compile. Drones Spawning From Antennas: These are not spawned through the Modular Encounters Systems, so they may have other factors that need to be considered such as the Enable Drones world option being turned on, and the Pirate PCU limit not being exceeded. Also, because these are not spawned through the Spawner mod, they will not be eligible for prefab manipulations provided by NPC Weapon Upgrades or NPC Defense Shield Provider mods. Torch Concealment: Concealment Plugin for Torch has been known to cause issues with NPC grids on occasion. I am not familiar with the various settings that the plugin offers (I have not administrated a server in a very long time), but I believe there are options to exclude NPC grids from concealment. I recommend using that option if you run into conflict with the Modular Encounters mods. If issues persist, you may need to disable concealment to use this mod. Circular Reference in Game Log: This message can appear sometimes in your game log. It's something that often appears when mods use another mod as a dependency (many encounter mods use the framework). The message is harmless and can be ignored. Still Seeing Spawns After Removing The Framework: If you have removed the Modular Encounters Systems mod, but have left any mods that use it as a dependency, then it is likely those mods are causing it to continue loading. You would need to remove any mod using the framework as a dependency from your mod list. Advanced Encounters Troubleshooting If you are still not seeing any encounters after following the above advice, then you can try some of these advanced steps: Checking The Spawn Record : Using the chat command /MES.IGLSD.SpawnRecord will generate a report that gets saved to your clipboard. You can paste this report into a program like Notepad and see what the result of various spawn attempts have been, and where they may be failing. Enabling and Checking Debugs : If the above did not provide any useful answers, you should next try to enable some of the extended monitoring. Enter the chat commands /MES.SpawnDebug.Spawning.true and /MES.SpawnDebug.SpawnGroup.true . Continue to play the game for a while (maybe about 1 hour). If you do not want to wait for encounters to spawn naturally, then you can use the /MES.Spawn.ForceSpawnTimer.Value chat command (see This Page for info on what you can replace Value with). After the game has run for some time (or you've used the ForceSpawnTimer command), use the chat command /MES.IGLSD.Spawning to generate a report that saves to your clipboard. Paste into Notepad or another app and check for messages that may indicate where the Spawning is getting stuck. Below I will cover some of the more common scenarios. Message: Eligible SpawnGroup Count 0 : If you get this message in the Spawn Report, then it usually means that there are currently no eligible encounters for the area you're currently in. You can get more details on this by entering the chat command /MES.IGLSD.SpawnGroup , pasting the result into Notepad, and seeing the provided reason that each SpawnGroup cannot spawn. This can be tricky to read at times because it prints a large list containing every SpawnGroup and why it can/can't spawn for EVERY spawn request. It's often better to start from the bottom and work upward to get the most recent data. Message: SpawnGroup Path/Placement Invalid : If you get this message in the Spawn Report, then it usually means that while there are potential SpawnGroups that can spawn, they are currently unable to because of the surrounding environment. This could be due to a number of factors such as Planetary Cargo Ship encounters not having sufficient Air Density to fly (ie, atmosphere too shallow at position), terrain being too coarse / ragged for proper Planetary Installation placement, and more. Many of these reasons are covered in better detail earlier in this troubleshooting guide.","title":"Troubleshooting.md"},{"location":"Troubleshooting/#troubleshootingmd","text":"Here are some of the most common reasons you may not see encounters when you expect to, or why some encounters might not work properly: Planetary Installations Spawn Too High / Too Low From The Ground: This issue occurs when you're on a planet that is too far from the game world center (0,0,0). The effects don't usually become noticeable until after about 7500km-10000km. The reason this happens is because the vector calculations the game uses with voxels start to become less accurate at longer distances (this is a limitation of the game engine). A common cause of this issue is using worlds generated using the SEWorldGenPlugin, which can place planets at extreme distances from the center of the game world. Ships Falling or Not Behaving Properly While Using Infestation Enabled or Crew Enabled mods: These mods add NPC characters to seats, or add spiders that infest ships. However, they can also interfere with the regular operation of NPC Ship behaviors because they will sometimes (intentionally) break the Remote Control block that controls all the custom behavior so alternative behavior can be used (eg infestation). Please refer to the settings on those individual mods to address this. NPC Turrets Not Shooting: This is more common on servers, but can also happen in single player as well. There is a known bug affecting turrets and their ability to acquire a target . MES doesn't manage how NPC turrets work, it only puts ammo in the block and lets the vanilla logic do the rest. As a result, I cannot fix anything related to this on my end. One possible workaround is to use WeaponCore and its Vanilla Weapons Replacement mod, since it uses its own, not broken , targeting logic. Dedicated Server and Selective Physics Updates: If you decide to use the Selective Physics Updates option introduced in game version 1.196, you must use a SyncDistance no lower than 10000 . If the SyncDistance is lower, then the Modular Encounters Systems will be disabled. The reason for this harsh requirement is because most NPC grids operate outside of the default SyncDistance of 3000, and this server option stops their movement (physics) unless a player is within the SyncDistance range. There is no reasonable way to work around this other than increasing the SyncDistance. Reset Configurations: Sometimes I will update the default values in a SpawnType configuration file, however these changes will not automatically replace existing configurations in your existing saves. It's worth trying to reset your configuration files by either deleting them or using chat command /MES.Settings.ResetAll . If you've made changes to your configurations, you may want to backup those files before resetting them and testing with the fresh copies. NPCs Are Spawning With No Ownership: This is almost always the result of the NPC Faction being tampered with in some way. This can happen if an admin removes the founder from an NPC faction, if a player joins the NPC faction using admin controls, or if another script/plugin makes changes to the faction by adding/removing identities from it. None of the mods I curate make these sorts of changes . Unfortunately, I don't have an easy suggestion on how to correct many of these situations, since NPC factions are only generated once per world by the game. If you know how to edit the save file and undo any breaking changes, that is often the best way to handle it - otherwise you may have to create a new save to get NPCs spawning with correct ownership again. Check What Can Spawn In Your Vicinity: You can use a simple chat command to see what encounters are potentially eligible to spawm near you. The command is /MES.Info.GetEligibleSpawnsAtPosition . There is also a shorthand version of this command as well: /MES.GESAP . Depending on where you are and what mods you have loaded, it could just be an issue on being in an area where those mods cannot spawn encounters. Too Many Spawns: If you are playing in multiplayer, you may notice an increase in spawn activity. This is because each player is tied to their own spawning events. So if a bunch of players are all in one area, then a bunch of encounters can potentailly appear pretty quickly. To mitigate this, use the config to reduce the MaxShipsPerArea property of each encounter type to something that is more managable for your play style. The config files also control the time between spawns as well. Planetary Spawning: Planetary Cargo Ships will typically only spawn on full sized planets that have a rich atmosphere. If you are using a custom map with modded planets or planets that are too small in size, then the atmosphere required for spawning may not be enough and any spawn attempt will fail. For Planetary Installations , planets that have a rough surface will have less success in seeing installations appear - this is because the mod tries to find relatively flat areas to spawn these installations, so jagged and mountainous areas will likely not see many/any of these spawns. Planetary Cargo Ships Falling Out Of The Sky: This is almost always the result of other mods that cause changes to Thurster Balance, Fuel and Hydrogen Re-Balance, and Aerodynamic/Realistic thrust. Many planetary cargo ships are not designed to use these systems and may not work properly as a result. Critical Error In-Game Popup: These errors are often not a result of something wrong with the mod itself, but rather a result of Steam not downloading the mod properly. This can often be corrected by unsubscribing from the mod in question, waiting a little while, restarting steam, and then re-subscribing to the mod to force a new download. Encounter Specific Limitations: Some mods may use additional requirements that must be met before their encounters are able to spawn. These often include conditions such as Threat Score, PCU, Faction Reputation, and other conditions. These conditions are often listed on the mod pages of those encounters, so ensure you read the mod descriptions so that you understand the required conditions for their encounters. Ships/Drones Not Doing Anything: This is often because the drone encounters of a mod require the In-Game Scripts World Option to be enabled. When creating a new world, this option is typically OFF by default, so ensure you double check this to ensure it's ON. Too Many Active Encounters: If encounters are not spawning, it may be because there are too many active encounters in the world. Try removing some grids using the Admin Tools (Alt+F10). Current Game Version: I will often update the Modular Encounters Systems with new features as they are released with Base Game Major Updates. As a result, the framework is only compatible with the latest version of Space Engineers. If you attempt to run it in older versions, the scripts the framework uses to operate may not compile. Drones Spawning From Antennas: These are not spawned through the Modular Encounters Systems, so they may have other factors that need to be considered such as the Enable Drones world option being turned on, and the Pirate PCU limit not being exceeded. Also, because these are not spawned through the Spawner mod, they will not be eligible for prefab manipulations provided by NPC Weapon Upgrades or NPC Defense Shield Provider mods. Torch Concealment: Concealment Plugin for Torch has been known to cause issues with NPC grids on occasion. I am not familiar with the various settings that the plugin offers (I have not administrated a server in a very long time), but I believe there are options to exclude NPC grids from concealment. I recommend using that option if you run into conflict with the Modular Encounters mods. If issues persist, you may need to disable concealment to use this mod. Circular Reference in Game Log: This message can appear sometimes in your game log. It's something that often appears when mods use another mod as a dependency (many encounter mods use the framework). The message is harmless and can be ignored. Still Seeing Spawns After Removing The Framework: If you have removed the Modular Encounters Systems mod, but have left any mods that use it as a dependency, then it is likely those mods are causing it to continue loading. You would need to remove any mod using the framework as a dependency from your mod list.","title":"Troubleshooting.md"},{"location":"Troubleshooting/#advanced-encounters-troubleshooting","text":"If you are still not seeing any encounters after following the above advice, then you can try some of these advanced steps: Checking The Spawn Record : Using the chat command /MES.IGLSD.SpawnRecord will generate a report that gets saved to your clipboard. You can paste this report into a program like Notepad and see what the result of various spawn attempts have been, and where they may be failing. Enabling and Checking Debugs : If the above did not provide any useful answers, you should next try to enable some of the extended monitoring. Enter the chat commands /MES.SpawnDebug.Spawning.true and /MES.SpawnDebug.SpawnGroup.true . Continue to play the game for a while (maybe about 1 hour). If you do not want to wait for encounters to spawn naturally, then you can use the /MES.Spawn.ForceSpawnTimer.Value chat command (see This Page for info on what you can replace Value with). After the game has run for some time (or you've used the ForceSpawnTimer command), use the chat command /MES.IGLSD.Spawning to generate a report that saves to your clipboard. Paste into Notepad or another app and check for messages that may indicate where the Spawning is getting stuck. Below I will cover some of the more common scenarios. Message: Eligible SpawnGroup Count 0 : If you get this message in the Spawn Report, then it usually means that there are currently no eligible encounters for the area you're currently in. You can get more details on this by entering the chat command /MES.IGLSD.SpawnGroup , pasting the result into Notepad, and seeing the provided reason that each SpawnGroup cannot spawn. This can be tricky to read at times because it prints a large list containing every SpawnGroup and why it can/can't spawn for EVERY spawn request. It's often better to start from the bottom and work upward to get the most recent data. Message: SpawnGroup Path/Placement Invalid : If you get this message in the Spawn Report, then it usually means that while there are potential SpawnGroups that can spawn, they are currently unable to because of the surrounding environment. This could be due to a number of factors such as Planetary Cargo Ship encounters not having sufficient Air Density to fly (ie, atmosphere too shallow at position), terrain being too coarse / ragged for proper Planetary Installation placement, and more. Many of these reasons are covered in better detail earlier in this troubleshooting guide.","title":"Advanced Encounters Troubleshooting"},{"location":"Tutorials/","text":"Tutorials.md This page will host various video tutorials covering modding with MES that I publish over time. Creating a Simple Cargo Ship Mod This tutorial covers the very basics of setting up a mod folder, exporting a ship, and setting up a SpawnGroup file. This is a great section to start with if you have no NPC modding experience. Creating a Planetary Installation Mod This tutorial covers how to create a Planetary Installation encounter that will appear as players explore the planet surface. While it does cover how to create a mod folder, less detail is covered than in the first video in this series.","title":"Tutorials.md"},{"location":"Tutorials/#tutorialsmd","text":"This page will host various video tutorials covering modding with MES that I publish over time. Creating a Simple Cargo Ship Mod This tutorial covers the very basics of setting up a mod folder, exporting a ship, and setting up a SpawnGroup file. This is a great section to start with if you have no NPC modding experience. Creating a Planetary Installation Mod This tutorial covers how to create a Planetary Installation encounter that will appear as players explore the planet surface. While it does cover how to create a mod folder, less detail is covered than in the first video in this series.","title":"Tutorials.md"},{"location":"Wave-Spawners/","text":"Wave-Spawners.md The spawn types of SpaceCargoShips , PlanetaryCargoShips , and Creatures all have configuration options for Wave Spawning. When it is enabled, it will group players into clusters based on their distance from each other and after a special timer has reached the trigger time, it will execute several spawns of a type in the area of each cluster. You can customize the timings, distances, and spawn types with the commands/configs below. Replace SpawnType with one of the spawntypes above matching the configuration you want to change it for. Setting: EnableWaveSpawner XML: <EnableWaveSpawner>Value</EnableWaveSpawner> Chat Command: /MES.Settings.SpawnType.EnableWaveSpawner.Value Description: This setting allows you to specify if the Wave Spawner for Space Cargo Ships should be enabled. Default value is false . Value can be set to true or false Setting: UseSpecificRandomGroups XML: <UseSpecificRandomGroups> <string>Value1</string> <string>Value2</string> </UseSpecificRandomGroups> Chat Command (Add): /MES.Settings.SpawnType.UseSpecificRandomGroups.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.UseSpecificRandomGroups.Remove.Value Description: This setting allows you to specify one or more specific SpawnGroups that will only be used with the Space Cargo Ship Wave Spawner. To add more SpawnGroups to the list, simply create a new line between the <UseSpecificRandomGroups> and </UseSpecificRandomGroups> tags and enter the following <string>Value</string> - Replace Value with the SubtypeName of the SpawnGroup. Setting: MinWaveSpawnTime XML: <MinWaveSpawnTime>Value</MinWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MinWaveSpawnTime.Value Description: This setting allows you to specify the Minimum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: MaxWaveSpawnTime XML: <MaxWaveSpawnTime>Value</MaxWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MaxWaveSpawnTime.Value Description: This setting allows you to specify the Maximum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: TotalSpawnEventsPerCluster XML: <TotalSpawnEventsPerCluster>Value</TotalSpawnEventsPerCluster> Chat Command: /MES.Settings.SpawnType.TotalSpawnEventsPerCluster.Value Description: This setting allows you to specify the number of SpawnGroups spawned at a Player Cluster during the Wave Spawn Event. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: TimeBetweenWaveSpawns XML: <TimeBetweenWaveSpawns>Value</TimeBetweenWaveSpawns> Chat Command: /MES.Settings.SpawnType.TimeBetweenWaveSpawns.Value Description: This setting allows you to specify the time (in seconds) between SpawnGroups being spawned during Wave Spawn Events. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: PlayerClusterDistance XML: <PlayerClusterDistance>Value</PlayerClusterDistance> Chat Command: /MES.Settings.SpawnType.PlayerClusterDistance.Value Description: This setting allows you to specify the max distance (in meters) that players within are considered a cluster (Waves spawn at clusters, not necessarily at individual players). Value can be replaced with any Integer number (eg: 5000 , 10000 , 15000 )","title":"Wave-Spawners.md"},{"location":"Wave-Spawners/#wave-spawnersmd","text":"The spawn types of SpaceCargoShips , PlanetaryCargoShips , and Creatures all have configuration options for Wave Spawning. When it is enabled, it will group players into clusters based on their distance from each other and after a special timer has reached the trigger time, it will execute several spawns of a type in the area of each cluster. You can customize the timings, distances, and spawn types with the commands/configs below. Replace SpawnType with one of the spawntypes above matching the configuration you want to change it for. Setting: EnableWaveSpawner XML: <EnableWaveSpawner>Value</EnableWaveSpawner> Chat Command: /MES.Settings.SpawnType.EnableWaveSpawner.Value Description: This setting allows you to specify if the Wave Spawner for Space Cargo Ships should be enabled. Default value is false . Value can be set to true or false Setting: UseSpecificRandomGroups XML: <UseSpecificRandomGroups> <string>Value1</string> <string>Value2</string> </UseSpecificRandomGroups> Chat Command (Add): /MES.Settings.SpawnType.UseSpecificRandomGroups.Add.Value Chat Command (Remove): /MES.Settings.SpawnType.UseSpecificRandomGroups.Remove.Value Description: This setting allows you to specify one or more specific SpawnGroups that will only be used with the Space Cargo Ship Wave Spawner. To add more SpawnGroups to the list, simply create a new line between the <UseSpecificRandomGroups> and </UseSpecificRandomGroups> tags and enter the following <string>Value</string> - Replace Value with the SubtypeName of the SpawnGroup. Setting: MinWaveSpawnTime XML: <MinWaveSpawnTime>Value</MinWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MinWaveSpawnTime.Value Description: This setting allows you to specify the Minimum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: MaxWaveSpawnTime XML: <MaxWaveSpawnTime>Value</MaxWaveSpawnTime> Chat Command: /MES.Settings.SpawnType.MaxWaveSpawnTime.Value Description: This setting allows you to specify the Maximum Time between Wave Spawn Events (In Seconds). Value can be replaced with any Integer number (eg: 100 , 200 , 300 ) Setting: TotalSpawnEventsPerCluster XML: <TotalSpawnEventsPerCluster>Value</TotalSpawnEventsPerCluster> Chat Command: /MES.Settings.SpawnType.TotalSpawnEventsPerCluster.Value Description: This setting allows you to specify the number of SpawnGroups spawned at a Player Cluster during the Wave Spawn Event. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: TimeBetweenWaveSpawns XML: <TimeBetweenWaveSpawns>Value</TimeBetweenWaveSpawns> Chat Command: /MES.Settings.SpawnType.TimeBetweenWaveSpawns.Value Description: This setting allows you to specify the time (in seconds) between SpawnGroups being spawned during Wave Spawn Events. Value can be replaced with any Integer number (eg: 1 , 5 , 10 ) Setting: PlayerClusterDistance XML: <PlayerClusterDistance>Value</PlayerClusterDistance> Chat Command: /MES.Settings.SpawnType.PlayerClusterDistance.Value Description: This setting allows you to specify the max distance (in meters) that players within are considered a cluster (Waves spawn at clusters, not necessarily at individual players). Value can be replaced with any Integer number (eg: 5000 , 10000 , 15000 )","title":"Wave-Spawners.md"},{"location":"Waypoint/","text":"Waypoint.md Waypoint Profiles in RivalAI allow you to specify rules for how a Waypoint or other sets of coordinates are generated. It is important that you use a unique SubtypeId for each Waypoint Profile you create, otherwise they may not work correctly. Here's an example of how a Waypoint Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleWaypointProfile</SubtypeId> </Id> <Description> [RivalAI Waypoint] [Waypoint:RelativeRandom] [RelativeEntity:Self] [MinDistance:100] [MaxDistance:200] [MinAltitude:100] [MaxAltitude:200] [InheritRelativeAltitude:true] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Waypoint Profiles. Tag: Waypoint Tag Format: [Waypoint:Value] Description: This tag specifies the type of Waypoint that will be generated. Static types are hard-coded to the world. Relative types use an entity in the world as reference at creation. Entity types also use an entity in the world as reference, but also updates with that entity if the entity position changes. Allowed Values: Static StaticRandom RelativeOffset RelativeRandom EntityOffset EntityRandom Multiple Tag Allowed: No Tag: RelativeEntity Tag Format: [RelativeEntity:Value] Description: This tag specifies waht entity to use as reference if you've used a Relative or Entity type of waypoint. Allowed Values: Self Target Damager Multiple Tag Allowed: No Tag: Coordinates Tag Format: [Coordinates:Value] Description: This tag specifies the coordinates in the game world you want to use if you've chosen a Static waypoint type. Allowed Values: Vector3D Value. Eg: {X:100 Y:100 Z:100} Multiple Tag Allowed: No Tag: Offset Tag Format: [Offset:Value] Description: This tag specifies the an offset vector that is applied to an entity position if using a Relative or Entity waypoint type. X shifts to the right, Y shifts upward, and Z shifts forward. Allowed Values: Vector3D Value. Eg: {X:100 Y:100 Z:100} Multiple Tag Allowed: No Tag: MinDistance Tag Format: [MinDistance:Value] Description: This tag specifies the Minimum Distance from the initial coordinates that the waypoint will be created at if using any Random waypoint type. Allowed Values: Any Number Greater Than 0 Less than MaxDistance Multiple Tag Allowed: No Tag: MaxDistance Tag Format: [MaxDistance:Value] Description: This tag specifies the Maximum Distance from the initial coordinates that the waypoint will be created at if using any Random waypoint type. Allowed Values: Any Number Greater Than 0 Greater than MinDistance Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: This tag specifies the Minimum Altitude from the initial coordinates that the waypoint will be created at if using any Random waypoint type. This is only used if the coordinates are being created in natural gravity. Allowed Values: Any Number Greater Than 0 Less than MaxAltitude Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: This tag specifies the Maximum Altitude from the initial coordinates that the waypoint will be created at if using any Random waypoint type. This is only used if the coordinates are being created in natural gravity. Allowed Values: Any Number Greater Than 0 Greater than MinAltitude Multiple Tag Allowed: No Tag: InheritRelativeAltitude Tag Format: [InheritRelativeAltitude:Value] Description: This tag specifies if the waypoint should inherit the altitude of the reference coordinates when using a Random type waypoint. Allowed Values: true false Multiple Tag Allowed: No","title":"Waypoint.md"},{"location":"Waypoint/#waypointmd","text":"Waypoint Profiles in RivalAI allow you to specify rules for how a Waypoint or other sets of coordinates are generated. It is important that you use a unique SubtypeId for each Waypoint Profile you create, otherwise they may not work correctly. Here's an example of how a Waypoint Profile Definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>RAI-ExampleWaypointProfile</SubtypeId> </Id> <Description> [RivalAI Waypoint] [Waypoint:RelativeRandom] [RelativeEntity:Self] [MinDistance:100] [MaxDistance:200] [MinAltitude:100] [MaxAltitude:200] [InheritRelativeAltitude:true] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Waypoint Profiles. Tag: Waypoint Tag Format: [Waypoint:Value] Description: This tag specifies the type of Waypoint that will be generated. Static types are hard-coded to the world. Relative types use an entity in the world as reference at creation. Entity types also use an entity in the world as reference, but also updates with that entity if the entity position changes. Allowed Values: Static StaticRandom RelativeOffset RelativeRandom EntityOffset EntityRandom Multiple Tag Allowed: No Tag: RelativeEntity Tag Format: [RelativeEntity:Value] Description: This tag specifies waht entity to use as reference if you've used a Relative or Entity type of waypoint. Allowed Values: Self Target Damager Multiple Tag Allowed: No Tag: Coordinates Tag Format: [Coordinates:Value] Description: This tag specifies the coordinates in the game world you want to use if you've chosen a Static waypoint type. Allowed Values: Vector3D Value. Eg: {X:100 Y:100 Z:100} Multiple Tag Allowed: No Tag: Offset Tag Format: [Offset:Value] Description: This tag specifies the an offset vector that is applied to an entity position if using a Relative or Entity waypoint type. X shifts to the right, Y shifts upward, and Z shifts forward. Allowed Values: Vector3D Value. Eg: {X:100 Y:100 Z:100} Multiple Tag Allowed: No Tag: MinDistance Tag Format: [MinDistance:Value] Description: This tag specifies the Minimum Distance from the initial coordinates that the waypoint will be created at if using any Random waypoint type. Allowed Values: Any Number Greater Than 0 Less than MaxDistance Multiple Tag Allowed: No Tag: MaxDistance Tag Format: [MaxDistance:Value] Description: This tag specifies the Maximum Distance from the initial coordinates that the waypoint will be created at if using any Random waypoint type. Allowed Values: Any Number Greater Than 0 Greater than MinDistance Multiple Tag Allowed: No Tag: MinAltitude Tag Format: [MinAltitude:Value] Description: This tag specifies the Minimum Altitude from the initial coordinates that the waypoint will be created at if using any Random waypoint type. This is only used if the coordinates are being created in natural gravity. Allowed Values: Any Number Greater Than 0 Less than MaxAltitude Multiple Tag Allowed: No Tag: MaxAltitude Tag Format: [MaxAltitude:Value] Description: This tag specifies the Maximum Altitude from the initial coordinates that the waypoint will be created at if using any Random waypoint type. This is only used if the coordinates are being created in natural gravity. Allowed Values: Any Number Greater Than 0 Greater than MinAltitude Multiple Tag Allowed: No Tag: InheritRelativeAltitude Tag Format: [InheritRelativeAltitude:Value] Description: This tag specifies if the waypoint should inherit the altitude of the reference coordinates when using a Random type waypoint. Allowed Values: true false Multiple Tag Allowed: No","title":"Waypoint.md"},{"location":"Weapon-Mod-Rules/","text":"Weapon-Mod-Rules.md Weapon Mod Rules Profiles in Modular Encounters Systems are used by mod authors to restrict their weapons from appearing on grids during weapon randomization. Some reasons they may want to do this is because a weapon is not suitable to use for combat (designator turret), or a weapon doesn't fit well with the rest of the grid when randomly placed (turrets with passage/crew areas beneath them). These profiles are not attached to SpawnGroups, SpawnGroup Conditions, or Manipulation Profiles. If they are detected in the world, then they will apply to all grids spawned with randomized weapons. Here is an example of how a Weapon Mod Rules Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleWeaponRules</SubtypeId> </Id> <Description> [MES Weapon Mod Rules] [WeaponBlock:MyObjectBuilder_LargeInteriorTurret/SomeModdedWeapon] [AllowInRandomization:false] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Weapon Mod Rules Profiles. Tag: WeaponBlock Tag Format: [WeaponBlock:Value] Description: This tag specifies the weapon that you want to apply the profile rules to. Allowed Values: Any Weapon Block MyDefinitionId eg: MyObjectBuilder_InteriorTurret/SomeModdedWeapon Multiple Tag Allowed: No Tag: AllowInRandomization Tag Format: [AllowInRandomization:Value] Description: This tag specifies if the weapon is allowed to be used in Weapon Randomization at all. Allowed Values: true false Multiple Tag Allowed: No Tag: AllowIfNonPublic Tag Format: [AllowIfNonPublic:Value] Description: This tag specifies if the weapon is allowed to be used in Weapon Randomization even if it is not listed as a public block (ie: doesn't appear in G-Menu). Allowed Values: true false Multiple Tag Allowed: No Tag: AllowOnlyIfExactSize Tag Format: [AllowOnlyIfExactSize:Value] Description: This tag specifies if the weapon being chosen for weapon randomization must be an exact size match. Allowed Values: true false Multiple Tag Allowed: No Tag: AllowedTargetBlocks Tag Format: [AllowedTargetBlocks:Value] Description: This tag specifies one or more types of blocks that the specified weapon is only allowed to replace. Allowed Values: Any Weapon Block MyDefinitionId eg: MyObjectBuilder_InteriorTurret/LargeInteriorTurret Multiple Tag Allowed: Yes Tag: RestrictedTargetBlocks Tag Format: [RestrictedTargetBlocks:Value] Description: This tag specifies one or more types of blocks that the specified weapon are never allowed to replace. Allowed Values: Any Weapon Block MyDefinitionId eg: MyObjectBuilder_InteriorTurret/LargeInteriorTurret Multiple Tag Allowed: Yes","title":"Weapon-Mod-Rules.md"},{"location":"Weapon-Mod-Rules/#weapon-mod-rulesmd","text":"Weapon Mod Rules Profiles in Modular Encounters Systems are used by mod authors to restrict their weapons from appearing on grids during weapon randomization. Some reasons they may want to do this is because a weapon is not suitable to use for combat (designator turret), or a weapon doesn't fit well with the rest of the grid when randomly placed (turrets with passage/crew areas beneath them). These profiles are not attached to SpawnGroups, SpawnGroup Conditions, or Manipulation Profiles. If they are detected in the world, then they will apply to all grids spawned with randomized weapons. Here is an example of how a Weapon Mod Rules Profile definition is setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ExampleWeaponRules</SubtypeId> </Id> <Description> [MES Weapon Mod Rules] [WeaponBlock:MyObjectBuilder_LargeInteriorTurret/SomeModdedWeapon] [AllowInRandomization:false] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the tags you are able to use in your Weapon Mod Rules Profiles. Tag: WeaponBlock Tag Format: [WeaponBlock:Value] Description: This tag specifies the weapon that you want to apply the profile rules to. Allowed Values: Any Weapon Block MyDefinitionId eg: MyObjectBuilder_InteriorTurret/SomeModdedWeapon Multiple Tag Allowed: No Tag: AllowInRandomization Tag Format: [AllowInRandomization:Value] Description: This tag specifies if the weapon is allowed to be used in Weapon Randomization at all. Allowed Values: true false Multiple Tag Allowed: No Tag: AllowIfNonPublic Tag Format: [AllowIfNonPublic:Value] Description: This tag specifies if the weapon is allowed to be used in Weapon Randomization even if it is not listed as a public block (ie: doesn't appear in G-Menu). Allowed Values: true false Multiple Tag Allowed: No Tag: AllowOnlyIfExactSize Tag Format: [AllowOnlyIfExactSize:Value] Description: This tag specifies if the weapon being chosen for weapon randomization must be an exact size match. Allowed Values: true false Multiple Tag Allowed: No Tag: AllowedTargetBlocks Tag Format: [AllowedTargetBlocks:Value] Description: This tag specifies one or more types of blocks that the specified weapon is only allowed to replace. Allowed Values: Any Weapon Block MyDefinitionId eg: MyObjectBuilder_InteriorTurret/LargeInteriorTurret Multiple Tag Allowed: Yes Tag: RestrictedTargetBlocks Tag Format: [RestrictedTargetBlocks:Value] Description: This tag specifies one or more types of blocks that the specified weapon are never allowed to replace. Allowed Values: Any Weapon Block MyDefinitionId eg: MyObjectBuilder_InteriorTurret/LargeInteriorTurret Multiple Tag Allowed: Yes","title":"Weapon-Mod-Rules.md"},{"location":"Weapons/","text":"Weapons.md The Weapon System profile in RivalAI is used to manage how/when weapons should be activated when engaging targets. You can add a Weapon System profile to your Behavior profile by using the [WeaponSystem:ProfileSubtypeIdHere] tag. Below is an example of how these profiles are setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>Example-ProfileSubtypeIdHere</SubtypeId> </Id> <Description> [RivalAI Weapons] [UseStaticGuns:true] [UseTurrets:true] [MaxStaticWeaponRange:5000] [WeaponMaxAngleFromTarget:6] [WeaponMaxBaseDistanceTarget:20] [UseBarrageFire:false] [MaxFireRateForBarrageWeapons:200] [UseAmmoReplenish:true] [AmmoReplenishClipAmount:15] [MaxAmmoReplenishments:10] </Description> </EntityComponent> </EntityComponents> </Definitions> The following tags can be used in your Weapon System Profiles: Tag: UseStaticGuns Tag Format: [UseStaticGuns:Value] Description: This tag specifies if an NPC grid should fire Static Weapons when engaging targets. Only works on behaviors that can rotate towards their target. Allowed Values: true false Multiple Tag Allowed: No Tag: UseTurrets Tag Format: [UseTurrets:Value] Description: This tag specifies if an NPC grid should manage turret weapons using extra features in RivalAI. This tag does NOT diable turrets (use MES to do that) Allowed Values: true false Multiple Tag Allowed: No Tag: MaxStaticWeaponRange Tag Format: [MaxStaticWeaponRange:Value] Description: Specifies the maximum distance from a target before an NPC can fire Static Weapons. Allowed Values: Any number higher than 0 -1 is No Limit Multiple Tag Allowed: No Tag: WeaponMaxAngleFromTarget Tag Format: [WeaponMaxAngleFromTarget:Value] Description: Specifies the maximum angle from a target before an NPC can fire Static Weapons. Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: WeaponMaxBaseDistanceTarget Tag Format: [WeaponMaxBaseDistanceTarget:Value] Description: Specifies the maximum distance the end of the current shot trajectory can be from the intended target. Example: Imagine 2 lines from the gun, one going to the target, and another going the same distance, but in the forward direction of the gun. The distance between the 2 end points is what is checked and regulated by this tag. Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: UseBarrageFire Tag Format: [UseBarrageFire:Value] Description: This tag specifies static weapons should be fired sequentially, instead of all at once. Allowed Values: true false Multiple Tag Allowed: No Tag: MaxFireRateForBarrageWeapons Tag Format: [MaxFireRateForBarrageWeapons:Value] Description: Specifies the max fire rate of a weapon to be considered usable for barrage fire. This is used to allow weapons that have a higher fire rate (eg Gatling Guns) to fire constantly instead of in a barrage sequence. Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: UseAmmoReplenish Tag Format: [UseAmmoReplenish:Value] Description: This tag specifies if weapons should automatically be kept loaded (ie Infinite Ammo). Allowed Values: true false Multiple Tag Allowed: No Tag: AmmoReplenishClipAmount Tag Format: [AmmoReplenishClipAmount:Value] Description: This tag specifies how many Ammo Magazine Clips should be added to a weapon block when Ammo Replenish happens. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: MaxAmmoReplenishments Tag Format: [MaxAmmoReplenishments:Value] Description: This tag specifies how many times Ammo Replenishment will run on a weapon block. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No","title":"Weapons.md"},{"location":"Weapons/#weaponsmd","text":"The Weapon System profile in RivalAI is used to manage how/when weapons should be activated when engaging targets. You can add a Weapon System profile to your Behavior profile by using the [WeaponSystem:ProfileSubtypeIdHere] tag. Below is an example of how these profiles are setup: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>Example-ProfileSubtypeIdHere</SubtypeId> </Id> <Description> [RivalAI Weapons] [UseStaticGuns:true] [UseTurrets:true] [MaxStaticWeaponRange:5000] [WeaponMaxAngleFromTarget:6] [WeaponMaxBaseDistanceTarget:20] [UseBarrageFire:false] [MaxFireRateForBarrageWeapons:200] [UseAmmoReplenish:true] [AmmoReplenishClipAmount:15] [MaxAmmoReplenishments:10] </Description> </EntityComponent> </EntityComponents> </Definitions> The following tags can be used in your Weapon System Profiles: Tag: UseStaticGuns Tag Format: [UseStaticGuns:Value] Description: This tag specifies if an NPC grid should fire Static Weapons when engaging targets. Only works on behaviors that can rotate towards their target. Allowed Values: true false Multiple Tag Allowed: No Tag: UseTurrets Tag Format: [UseTurrets:Value] Description: This tag specifies if an NPC grid should manage turret weapons using extra features in RivalAI. This tag does NOT diable turrets (use MES to do that) Allowed Values: true false Multiple Tag Allowed: No Tag: MaxStaticWeaponRange Tag Format: [MaxStaticWeaponRange:Value] Description: Specifies the maximum distance from a target before an NPC can fire Static Weapons. Allowed Values: Any number higher than 0 -1 is No Limit Multiple Tag Allowed: No Tag: WeaponMaxAngleFromTarget Tag Format: [WeaponMaxAngleFromTarget:Value] Description: Specifies the maximum angle from a target before an NPC can fire Static Weapons. Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: WeaponMaxBaseDistanceTarget Tag Format: [WeaponMaxBaseDistanceTarget:Value] Description: Specifies the maximum distance the end of the current shot trajectory can be from the intended target. Example: Imagine 2 lines from the gun, one going to the target, and another going the same distance, but in the forward direction of the gun. The distance between the 2 end points is what is checked and regulated by this tag. Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: UseBarrageFire Tag Format: [UseBarrageFire:Value] Description: This tag specifies static weapons should be fired sequentially, instead of all at once. Allowed Values: true false Multiple Tag Allowed: No Tag: MaxFireRateForBarrageWeapons Tag Format: [MaxFireRateForBarrageWeapons:Value] Description: Specifies the max fire rate of a weapon to be considered usable for barrage fire. This is used to allow weapons that have a higher fire rate (eg Gatling Guns) to fire constantly instead of in a barrage sequence. Allowed Values: Any number higher than 0 Multiple Tag Allowed: No Tag: UseAmmoReplenish Tag Format: [UseAmmoReplenish:Value] Description: This tag specifies if weapons should automatically be kept loaded (ie Infinite Ammo). Allowed Values: true false Multiple Tag Allowed: No Tag: AmmoReplenishClipAmount Tag Format: [AmmoReplenishClipAmount:Value] Description: This tag specifies how many Ammo Magazine Clips should be added to a weapon block when Ammo Replenish happens. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No Tag: MaxAmmoReplenishments Tag Format: [MaxAmmoReplenishments:Value] Description: This tag specifies how many times Ammo Replenishment will run on a weapon block. Allowed Values: Any Integer Greater Than 0 Multiple Tag Allowed: No","title":"Weapons.md"},{"location":"Zone-Conditions-Profile/","text":"Zone-Conditions-Profile.md Zone Condition Profiles are additional controls that are attached to Spawn Condition Profiles that allow you to define spawning rules for when an encounter is inside of a Zone (formerly Territory). Spawn Condition Profiles can have multiple Zone Condition Profiles. When evaluating the profiles for spawning eligibility, only a single Zone Condition Profile needs to be satisfied in order for the SpawnGroup to be considered eligible for spawning. Here is an example of how a Zone Condition Profile is created: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ZoneConditionProfile-Example</SubtypeId> </Id> <Description> [MES Zone Conditions] [ZoneName:Pirate Space] [MaxDistanceFromZoneCenter:5000] [MinSpawnedZoneEncounters:5] </Description> </EntityComponent> </EntityComponents> </Definitions> To link a profile to your Spawn Conditions Profile, simply use the ZoneConditions tag and provide the SubtypeId of the Zone Condition Profile you created. Eg: [ZoneConditions:MES-ZoneConditionProfile-Example] . Below are the types of condition tags you can include in your Zone Condition Profile: Tag: ZoneName Tag Format: [ZoneName:Value] Description: This tag specifies the name of the Zones that are allowed to Spawn this encounter. Allowed Values: Any Zone Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Tag: MinDistanceFromZoneCenter Tag Format: [MinDistanceFromZoneCenter:Value] Description: This tag specifies the Minimum Distance from the Zone Center that the encounter is able to spawn within. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Greater Than 0 Value should be lower than MaxDistanceFromZoneCenter if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxDistanceFromZoneCenter Tag Format: [MaxDistanceFromZoneCenter:Value] Description: This tag specifies the Maximum Distance from the Zone Center that the encounter is able to spawn within. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Greater Than 0 Value should be higher than MinDistanceFromZoneCenter if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MinSpawnedZoneEncounters Tag Format: [MinSpawnedZoneEncounters:Value] Description: This tag specifies the Minimum Spawned Encounters within the Zone that must have been spawned before the encounter is allowed to spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Greater Than 0 Value should be lower than MaxSpawnedZoneEncounters if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxSpawnedZoneEncounters Tag Format: [MaxSpawnedZoneEncounters:Value] Description: This tag specifies the Maximum Spawned Encounters within the Zone that must have been spawned before the encounter is allowed to spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Greater Than 0 Value should be higher than MinSpawnedZoneEncounters if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: CheckCustomZoneCounters Tag Format: [CheckCustomZoneCounters:Value] Description: This tag specifies if Zone Counters should be checked for specific values before the encounter spawns. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CustomZoneCounterName Tag Format: [CustomZoneCounterName:Value] Description: This tag specifies the name of a Zone Counter that should be checked. It should be paired with a CustomZoneCounterValue Allowed Values: Any Counter Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: CustomZoneCounterValue Tag Format: [CustomZoneCounterValue:Value] Description: This tag specifies the value of a Zone Counter that should be checked. It should be paired with a CustomZoneCounterName Allowed Values: Any Integer Default Value(s): N/A Multiple Tag Allowed: Yes Tag: CheckCustomZoneBools Tag Format: [CheckCustomZoneBools:Value] Description: This tag specifies if Zone Booleans should be checked for specific values before the encounter spawns. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CustomZoneBoolName Tag Format: [CustomZoneBoolName:Value] Description: This tag specifies the name of a Zone Boolean that should be checked. It should be paired with a CustomZoneBoolValue Allowed Values: Any Boolean Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: CustomZoneBoolValue Tag Format: [CustomZoneBoolValue:Value] Description: This tag specifies the value of a Zone Boolean that should be checked. It should be paired with a CustomZoneBoolName Allowed Values: true false Default Value(s): N/A Multiple Tag Allowed: Yes","title":"Zone-Conditions-Profile.md"},{"location":"Zone-Conditions-Profile/#zone-conditions-profilemd","text":"Zone Condition Profiles are additional controls that are attached to Spawn Condition Profiles that allow you to define spawning rules for when an encounter is inside of a Zone (formerly Territory). Spawn Condition Profiles can have multiple Zone Condition Profiles. When evaluating the profiles for spawning eligibility, only a single Zone Condition Profile needs to be satisfied in order for the SpawnGroup to be considered eligible for spawning. Here is an example of how a Zone Condition Profile is created: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-ZoneConditionProfile-Example</SubtypeId> </Id> <Description> [MES Zone Conditions] [ZoneName:Pirate Space] [MaxDistanceFromZoneCenter:5000] [MinSpawnedZoneEncounters:5] </Description> </EntityComponent> </EntityComponents> </Definitions> To link a profile to your Spawn Conditions Profile, simply use the ZoneConditions tag and provide the SubtypeId of the Zone Condition Profile you created. Eg: [ZoneConditions:MES-ZoneConditionProfile-Example] . Below are the types of condition tags you can include in your Zone Condition Profile: Tag: ZoneName Tag Format: [ZoneName:Value] Description: This tag specifies the name of the Zones that are allowed to Spawn this encounter. Allowed Values: Any Zone Profile SubtypeId Default Value(s): N/A Multiple Tag Allowed: No Tag: MinDistanceFromZoneCenter Tag Format: [MinDistanceFromZoneCenter:Value] Description: This tag specifies the Minimum Distance from the Zone Center that the encounter is able to spawn within. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Greater Than 0 Value should be lower than MaxDistanceFromZoneCenter if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxDistanceFromZoneCenter Tag Format: [MaxDistanceFromZoneCenter:Value] Description: This tag specifies the Maximum Distance from the Zone Center that the encounter is able to spawn within. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Greater Than 0 Value should be higher than MinDistanceFromZoneCenter if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MinSpawnedZoneEncounters Tag Format: [MinSpawnedZoneEncounters:Value] Description: This tag specifies the Minimum Spawned Encounters within the Zone that must have been spawned before the encounter is allowed to spawn. If this tag is not provided, then no minimum is used. Allowed Values: Any Number Greater Than 0 Value should be lower than MaxSpawnedZoneEncounters if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: MaxSpawnedZoneEncounters Tag Format: [MaxSpawnedZoneEncounters:Value] Description: This tag specifies the Maximum Spawned Encounters within the Zone that must have been spawned before the encounter is allowed to spawn. If this tag is not provided, then no maximum is used. Allowed Values: Any Number Greater Than 0 Value should be higher than MinSpawnedZoneEncounters if provided Default Value(s): -1 Multiple Tag Allowed: No Tag: CheckCustomZoneCounters Tag Format: [CheckCustomZoneCounters:Value] Description: This tag specifies if Zone Counters should be checked for specific values before the encounter spawns. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CustomZoneCounterName Tag Format: [CustomZoneCounterName:Value] Description: This tag specifies the name of a Zone Counter that should be checked. It should be paired with a CustomZoneCounterValue Allowed Values: Any Counter Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: CustomZoneCounterValue Tag Format: [CustomZoneCounterValue:Value] Description: This tag specifies the value of a Zone Counter that should be checked. It should be paired with a CustomZoneCounterName Allowed Values: Any Integer Default Value(s): N/A Multiple Tag Allowed: Yes Tag: CheckCustomZoneBools Tag Format: [CheckCustomZoneBools:Value] Description: This tag specifies if Zone Booleans should be checked for specific values before the encounter spawns. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: CustomZoneBoolName Tag Format: [CustomZoneBoolName:Value] Description: This tag specifies the name of a Zone Boolean that should be checked. It should be paired with a CustomZoneBoolValue Allowed Values: Any Boolean Name Default Value(s): N/A Multiple Tag Allowed: Yes Tag: CustomZoneBoolValue Tag Format: [CustomZoneBoolValue:Value] Description: This tag specifies the value of a Zone Boolean that should be checked. It should be paired with a CustomZoneBoolName Allowed Values: true false Default Value(s): N/A Multiple Tag Allowed: Yes","title":"Zone-Conditions-Profile.md"},{"location":"Zone-Profile/","text":"Zone-Profile.md Zones (formerly Territories) are pre-defined locations in the game world that can be used to control what encounters are allowed to spawn and when. Zone Profiles do not attach to SpawnGroups or any other profile. Here is an example of how a Zone is defined: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-Zone-PirateZone</SubtypeId> </Id> <Description> [MES Zone] [PublicName:Pirate Space] [Active:true] [Persistent:true] [Strict:true] [Coordinates:{X:1 Y:1 Z:1}] [Radius:25000] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the types of tags you can include in your Zone Profile: Tag: Active Tag Format: [Active:Value] Description: This tag specifies if the Zone should be active in the game world or not. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: Persistent Tag Format: [Persistent:Value] Description: This tag determines if a Zone should persist in the game world between saves, reloads, etc. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: Strict Tag Format: [Strict:Value] Description: This tag determines if encounters must be able to spawn in this zone in order to spawn at all. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NoSpawnZone Tag Format: [NoSpawnZone:Value] Description: This tag determines if the Zone should be considered a No Spawn Zone, preventing any type of encounter from spawning. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PublicName Tag Format: [PublicName:Value] Description: This tag determines the name the Zone will use with the Spawner. You'll use this to link Zones to your Zone Conditions Profiles. Allowed Values: Any Name Default Value(s): N/A Multiple Tag Allowed: No Tag: UseLimitedFactions Tag Format: [UseLimitedFactions:Value] Description: This tag determines if the Zone should only allow encounters from certain factions to spawn within it. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: Factions Tag Format: [Factions:Value] Description: This tag determines the Factions that are allowed to spawn within the Zone if using the UseLimitedFactions tag. Allowed Values: Any Faction Tag Default Value(s): N/A Multiple Tag Allowed: Yes Tag: Coordinates Tag Format: [Coordinates:Value] Description: This tag determines the exact location of the center of this Zone. Allowed Values: Vector3D Coordinates eg: {X:0 Y:0 Z:0} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: Radius Tag Format: [Radius:Value] Description: This tag determines the radius distance from the Zone center coordinates. Allowed Values: Any Number Greater Than 0 Default Value(s): 0 Multiple Tag Allowed: No Tag: PlanetaryZone Tag Format: [PlanetaryZone:Value] Description: This tag determines if a zone should be dynamically calculated based on provided planetary details. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetName Tag Format: [PlanetName:Value] Description: This tag determines the name of the planet that the Zone will be created on. Allowed Values: Any Planet Name Default Value(s): N/A Multiple Tag Allowed: No Tag: Direction Tag Format: [Direction:Value] Description: This tag determines the direction from the center of the planet that the Zone is created at. If a direction is provided, then the Zone center will be at the surface location nearest to the direction provided. If no direction is provided, then the center of the planet is instead used for the Zone center. Allowed Values: Vector3D Coordinates eg: {X:0 Y:0 Z:0} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: HeightOffset Tag Format: [HeightOffset:Value] Description: This tag determines the height offset from the planet surface if a Direction tag is provided. Allowed Values: Any Number Default Value(s): 0 Multiple Tag Allowed: No Tag: UseAllowedSpawnGroups Tag Format: [UseAllowedSpawnGroups:Value] Description: This tag determines if only a list of specific SpawnGroups should be allowed to spawn in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedSpawnGroups Tag Format: [AllowedSpawnGroups:Value] Description: This tag determines which SpawnGroups are allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseRestrictedSpawnGroups Tag Format: [UseRestrictedSpawnGroups:Value] Description: This tag determines if certain SpawnGroups should not be allowed to spawn while in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RestrictedSpawnGroups Tag Format: [RestrictedSpawnGroups:Value] Description: This tag determines which SpawnGroups are not allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseAllowedModIDs Tag Format: [UseAllowedModIDs:Value] Description: This tag determines if only SpawnGroups belonging to certain Mod IDs are allowed to spawn in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedModIDs Tag Format: [AllowedModIDs:Value] Description: This tag determines which SpawnGroup Mod IDs are allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseRestrictedModIDs Tag Format: [UseRestrictedModIDs:Value] Description: This tag determines if SpawnGroups belonging to certain Mod IDs should not be allowed to spawn in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RestrictedModIDs Tag Format: [RestrictedModIDs:Value] Description: This tag determines which SpawnGroup Mod IDs are not allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseZoneAnnounce Tag Format: [UseZoneAnnounce:Value] Description: This tag determines if players should receive an alert if they enter or leave this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ZoneEnterAnnounce Tag Format: [ZoneEnterAnnounce:Value] Description: This tag determines the message players will receive when they enter this Zone. Allowed Values: Any Message Default Value(s): N/A Multiple Tag Allowed: No Tag: ZoneLeaveAnnounce Tag Format: [ZoneLeaveAnnounce:Value] Description: This tag determines the message players will receive when they leave this Zone. Allowed Values: Any Message Default Value(s): N/A Multiple Tag Allowed: No Tag: RequiredSandboxBool Tag Format: [RequiredSandboxBool:Value] Description: This tag allows you to specify the name of a Sandbox Boolean that must be true in order for this zone to be Active. Allowed Value(s): Any Sandbox Boolean Name Default Value(s): N/A Multiple Tags Allowed: No Tag: RequiredFalseSandboxBool Tag Format: [RequiredFalseSandboxBool:Value] Description: This tag allows you to specify the name of a Sandbox Boolean that must be false in order for this zone to be Active. Allowed Value(s): Any Sandbox Boolean Name Default Value(s): N/A Multiple Tags Allowed: No","title":"Zone-Profile.md"},{"location":"Zone-Profile/#zone-profilemd","text":"Zones (formerly Territories) are pre-defined locations in the game world that can be used to control what encounters are allowed to spawn and when. Zone Profiles do not attach to SpawnGroups or any other profile. Here is an example of how a Zone is defined: <?xml version=\"1.0\"?> <Definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <EntityComponents> <EntityComponent xsi:type=\"MyObjectBuilder_InventoryComponentDefinition\"> <Id> <TypeId>Inventory</TypeId> <SubtypeId>MES-Zone-PirateZone</SubtypeId> </Id> <Description> [MES Zone] [PublicName:Pirate Space] [Active:true] [Persistent:true] [Strict:true] [Coordinates:{X:1 Y:1 Z:1}] [Radius:25000] </Description> </EntityComponent> </EntityComponents> </Definitions> Below are the types of tags you can include in your Zone Profile: Tag: Active Tag Format: [Active:Value] Description: This tag specifies if the Zone should be active in the game world or not. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: Persistent Tag Format: [Persistent:Value] Description: This tag determines if a Zone should persist in the game world between saves, reloads, etc. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: Strict Tag Format: [Strict:Value] Description: This tag determines if encounters must be able to spawn in this zone in order to spawn at all. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: NoSpawnZone Tag Format: [NoSpawnZone:Value] Description: This tag determines if the Zone should be considered a No Spawn Zone, preventing any type of encounter from spawning. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PublicName Tag Format: [PublicName:Value] Description: This tag determines the name the Zone will use with the Spawner. You'll use this to link Zones to your Zone Conditions Profiles. Allowed Values: Any Name Default Value(s): N/A Multiple Tag Allowed: No Tag: UseLimitedFactions Tag Format: [UseLimitedFactions:Value] Description: This tag determines if the Zone should only allow encounters from certain factions to spawn within it. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: Factions Tag Format: [Factions:Value] Description: This tag determines the Factions that are allowed to spawn within the Zone if using the UseLimitedFactions tag. Allowed Values: Any Faction Tag Default Value(s): N/A Multiple Tag Allowed: Yes Tag: Coordinates Tag Format: [Coordinates:Value] Description: This tag determines the exact location of the center of this Zone. Allowed Values: Vector3D Coordinates eg: {X:0 Y:0 Z:0} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: Radius Tag Format: [Radius:Value] Description: This tag determines the radius distance from the Zone center coordinates. Allowed Values: Any Number Greater Than 0 Default Value(s): 0 Multiple Tag Allowed: No Tag: PlanetaryZone Tag Format: [PlanetaryZone:Value] Description: This tag determines if a zone should be dynamically calculated based on provided planetary details. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: PlanetName Tag Format: [PlanetName:Value] Description: This tag determines the name of the planet that the Zone will be created on. Allowed Values: Any Planet Name Default Value(s): N/A Multiple Tag Allowed: No Tag: Direction Tag Format: [Direction:Value] Description: This tag determines the direction from the center of the planet that the Zone is created at. If a direction is provided, then the Zone center will be at the surface location nearest to the direction provided. If no direction is provided, then the center of the planet is instead used for the Zone center. Allowed Values: Vector3D Coordinates eg: {X:0 Y:0 Z:0} Default Value(s): {X:0 Y:0 Z:0} Multiple Tag Allowed: No Tag: HeightOffset Tag Format: [HeightOffset:Value] Description: This tag determines the height offset from the planet surface if a Direction tag is provided. Allowed Values: Any Number Default Value(s): 0 Multiple Tag Allowed: No Tag: UseAllowedSpawnGroups Tag Format: [UseAllowedSpawnGroups:Value] Description: This tag determines if only a list of specific SpawnGroups should be allowed to spawn in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedSpawnGroups Tag Format: [AllowedSpawnGroups:Value] Description: This tag determines which SpawnGroups are allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseRestrictedSpawnGroups Tag Format: [UseRestrictedSpawnGroups:Value] Description: This tag determines if certain SpawnGroups should not be allowed to spawn while in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RestrictedSpawnGroups Tag Format: [RestrictedSpawnGroups:Value] Description: This tag determines which SpawnGroups are not allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseAllowedModIDs Tag Format: [UseAllowedModIDs:Value] Description: This tag determines if only SpawnGroups belonging to certain Mod IDs are allowed to spawn in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: AllowedModIDs Tag Format: [AllowedModIDs:Value] Description: This tag determines which SpawnGroup Mod IDs are allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseRestrictedModIDs Tag Format: [UseRestrictedModIDs:Value] Description: This tag determines if SpawnGroups belonging to certain Mod IDs should not be allowed to spawn in this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: RestrictedModIDs Tag Format: [RestrictedModIDs:Value] Description: This tag determines which SpawnGroup Mod IDs are not allowed to spawn inside this Zone. Allowed Values: Any SpawnGroup SubtypeID Default Value(s): N/A Multiple Tag Allowed: Yes Tag: UseZoneAnnounce Tag Format: [UseZoneAnnounce:Value] Description: This tag determines if players should receive an alert if they enter or leave this Zone. Allowed Values: true false Default Value(s): false Multiple Tag Allowed: No Tag: ZoneEnterAnnounce Tag Format: [ZoneEnterAnnounce:Value] Description: This tag determines the message players will receive when they enter this Zone. Allowed Values: Any Message Default Value(s): N/A Multiple Tag Allowed: No Tag: ZoneLeaveAnnounce Tag Format: [ZoneLeaveAnnounce:Value] Description: This tag determines the message players will receive when they leave this Zone. Allowed Values: Any Message Default Value(s): N/A Multiple Tag Allowed: No Tag: RequiredSandboxBool Tag Format: [RequiredSandboxBool:Value] Description: This tag allows you to specify the name of a Sandbox Boolean that must be true in order for this zone to be Active. Allowed Value(s): Any Sandbox Boolean Name Default Value(s): N/A Multiple Tags Allowed: No Tag: RequiredFalseSandboxBool Tag Format: [RequiredFalseSandboxBool:Value] Description: This tag allows you to specify the name of a Sandbox Boolean that must be false in order for this zone to be Active. Allowed Value(s): Any Sandbox Boolean Name Default Value(s): N/A Multiple Tags Allowed: No","title":"Zone-Profile.md"},{"location":"_Sidebar/","text":"_Sidebar.md Player Support Encounter Guide FAQs Troubleshooting Bugs, Issues, or Crashes Economy Stations FAQ Mod Republishing Guidelines Admin & Configuration General Settings Grid Settings Combat Settings Space Cargo Ships Random Encounters Planetary Cargo Ships Planetary Installations Boss Encounters Creatures AiEnabled Bot Spawning Wave Spawners Clean-Up Spawn Filtering Timeout Admin & Debug Options Modding Spawning (Getting Started) SpawnGroup Spawning Conditions Zone Conditions Spawning Conditions Groups Manipulation Block Replacement Dereliction Loot Loot Profile Group Weapon Mod Rules Manipulation Groups Prefab Data Replenishment Zone Behaviors (Getting Started) Core Behavior Autopilot Command Datapad Target Trigger Condition Action Bot Spawn Chat Spawn TextTemplate Trigger Group Waypoint Weapons Events (Getting Started) Event Event Condition Event Action Custom Event Actions Player Conditions (New) Template / Example Files SpawnGroup.sbc Factions.sbc Modder Resources Armor Modules Included with MES (Page Unavailable) Block Replacement Profiles Encounter Attributes Loot Profiles NPC Grid Setup Guidelines Random Name Generator Guide Scripting API Troubleshooting Tips Threat Score Guide Tutorials Mod Repositories Imber Corporation Independent Contractors Marine Pirate Encounters Orks: The Great WAAAGH! Parallax Concepts Encounters Pravda Heavy Industries Reavers: Terror Of The Verse Robot Raider Pods Trade Operators Coalition","title":"_Sidebar.md"},{"location":"_Sidebar/#_sidebarmd","text":"","title":"_Sidebar.md"},{"location":"_Sidebar/#player-support","text":"Encounter Guide FAQs Troubleshooting Bugs, Issues, or Crashes Economy Stations FAQ Mod Republishing Guidelines","title":"Player Support"},{"location":"_Sidebar/#admin-configuration","text":"General Settings Grid Settings Combat Settings Space Cargo Ships Random Encounters Planetary Cargo Ships Planetary Installations Boss Encounters Creatures AiEnabled Bot Spawning Wave Spawners Clean-Up Spawn Filtering Timeout Admin & Debug Options","title":"Admin &amp; Configuration"},{"location":"_Sidebar/#modding","text":"Spawning (Getting Started) SpawnGroup Spawning Conditions Zone Conditions Spawning Conditions Groups Manipulation Block Replacement Dereliction Loot Loot Profile Group Weapon Mod Rules Manipulation Groups Prefab Data Replenishment Zone Behaviors (Getting Started) Core Behavior Autopilot Command Datapad Target Trigger Condition Action Bot Spawn Chat Spawn TextTemplate Trigger Group Waypoint Weapons Events (Getting Started) Event Event Condition Event Action Custom Event Actions Player Conditions (New)","title":"Modding"},{"location":"_Sidebar/#template-example-files","text":"SpawnGroup.sbc Factions.sbc","title":"Template / Example Files"},{"location":"_Sidebar/#modder-resources","text":"Armor Modules Included with MES (Page Unavailable) Block Replacement Profiles Encounter Attributes Loot Profiles NPC Grid Setup Guidelines Random Name Generator Guide Scripting API Troubleshooting Tips Threat Score Guide Tutorials","title":"Modder Resources"},{"location":"_Sidebar/#mod-repositories","text":"Imber Corporation Independent Contractors Marine Pirate Encounters Orks: The Great WAAAGH! Parallax Concepts Encounters Pravda Heavy Industries Reavers: Terror Of The Verse Robot Raider Pods Trade Operators Coalition","title":"Mod Repositories"}]}